/*
 * Copyright (C) 2024.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.bmarwell.jtop.lib.osx.ffm; // Generated by jextract

import java.lang.foreign.MemorySegment;

public class libproc_h extends libproc_h_1 {

    libproc_h() {
        // Should not be called directly
    }

    private static final int ATTR_CMN_VALIDMASK = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_VALIDMASK 4294967295
     * }
     */
    public static int ATTR_CMN_VALIDMASK() {
        return ATTR_CMN_VALIDMASK;
    }

    private static final int ATTR_VOL_INFO = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_INFO 2147483648
     * }
     */
    public static int ATTR_VOL_INFO() {
        return ATTR_VOL_INFO;
    }

    private static final int ATTR_VOL_VALIDMASK = (int) 4038590463L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_VALIDMASK 4038590463
     * }
     */
    public static int ATTR_VOL_VALIDMASK() {
        return ATTR_VOL_VALIDMASK;
    }

    private static final int ATTR_VOL_SETMASK = (int) 2147491840L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SETMASK 2147491840
     * }
     */
    public static int ATTR_VOL_SETMASK() {
        return ATTR_VOL_SETMASK;
    }

    private static final int ATTR_FORK_RESERVED = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FORK_RESERVED 4294967295
     * }
     */
    public static int ATTR_FORK_RESERVED() {
        return ATTR_FORK_RESERVED;
    }

    private static final int ATTR_BULK_REQUIRED = (int) 2147483649L;
    /**
     * {@snippet lang=c :
     * #define ATTR_BULK_REQUIRED 2147483649
     * }
     */
    public static int ATTR_BULK_REQUIRED() {
        return ATTR_BULK_REQUIRED;
    }

    private static final int SRCHFS_NEGATEPARAMS = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_NEGATEPARAMS 2147483648
     * }
     */
    public static int SRCHFS_NEGATEPARAMS() {
        return SRCHFS_NEGATEPARAMS;
    }

    private static final int SRCHFS_VALIDOPTIONSMASK = (int) 2147483903L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_VALIDOPTIONSMASK 2147483903
     * }
     */
    public static int SRCHFS_VALIDOPTIONSMASK() {
        return SRCHFS_VALIDOPTIONSMASK;
    }

    private static final int FST_EOF = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define FST_EOF -1
     * }
     */
    public static int FST_EOF() {
        return FST_EOF;
    }

    private static final int MNAMELEN = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MNAMELEN 1024
     * }
     */
    public static int MNAMELEN() {
        return MNAMELEN;
    }

    private static final int MNT_STRICTATIME = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define MNT_STRICTATIME 2147483648
     * }
     */
    public static int MNT_STRICTATIME() {
        return MNT_STRICTATIME;
    }

    private static final int MNT_UNKNOWNPERMISSIONS = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define MNT_UNKNOWNPERMISSIONS 2097152
     * }
     */
    public static int MNT_UNKNOWNPERMISSIONS() {
        return MNT_UNKNOWNPERMISSIONS;
    }

    private static final int MNT_VISFLAGMASK = (int) 3757111295L;
    /**
     * {@snippet lang=c :
     * #define MNT_VISFLAGMASK 3757111295
     * }
     */
    public static int MNT_VISFLAGMASK() {
        return MNT_VISFLAGMASK;
    }

    private static final int MNT_CMDFLAGS = (int) 983040L;
    /**
     * {@snippet lang=c :
     * #define MNT_CMDFLAGS 983040
     * }
     */
    public static int MNT_CMDFLAGS() {
        return MNT_CMDFLAGS;
    }

    private static final int VFS_CTL_STATFS = (int) 65547L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_STATFS 65547
     * }
     */
    public static int VFS_CTL_STATFS() {
        return VFS_CTL_STATFS;
    }

    private static final int NFS_MAX_FH_SIZE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define NFS_MAX_FH_SIZE 128
     * }
     */
    public static int NFS_MAX_FH_SIZE() {
        return NFS_MAX_FH_SIZE;
    }

    private static final int PRIO_MIN = (int) -20L;
    /**
     * {@snippet lang=c :
     * #define PRIO_MIN -20
     * }
     */
    public static int PRIO_MIN() {
        return PRIO_MIN;
    }

    private static final int RUSAGE_CHILDREN = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define RUSAGE_CHILDREN -1
     * }
     */
    public static int RUSAGE_CHILDREN() {
        return RUSAGE_CHILDREN;
    }

    private static final int RUSAGE_INFO_CURRENT = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define RUSAGE_INFO_CURRENT 6
     * }
     */
    public static int RUSAGE_INFO_CURRENT() {
        return RUSAGE_INFO_CURRENT;
    }

    private static final long RLIM_INFINITY = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_INFINITY 9223372036854775807
     * }
     */
    public static long RLIM_INFINITY() {
        return RLIM_INFINITY;
    }

    private static final long RLIM_SAVED_MAX = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_SAVED_MAX 9223372036854775807
     * }
     */
    public static long RLIM_SAVED_MAX() {
        return RLIM_SAVED_MAX;
    }

    private static final long RLIM_SAVED_CUR = 9223372036854775807L;
    /**
     * {@snippet lang=c :
     * #define RLIM_SAVED_CUR 9223372036854775807
     * }
     */
    public static long RLIM_SAVED_CUR() {
        return RLIM_SAVED_CUR;
    }

    private static final int RLIMIT_RSS = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define RLIMIT_RSS 5
     * }
     */
    public static int RLIMIT_RSS() {
        return RLIMIT_RSS;
    }

    private static final int IOPOL_APPLICATION = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define IOPOL_APPLICATION 5
     * }
     */
    public static int IOPOL_APPLICATION() {
        return IOPOL_APPLICATION;
    }

    private static final int IOPOL_NORMAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define IOPOL_NORMAL 1
     * }
     */
    public static int IOPOL_NORMAL() {
        return IOPOL_NORMAL;
    }

    private static final int MACH_MSG_TIMEOUT_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TIMEOUT_NONE 0
     * }
     */
    public static int MACH_MSG_TIMEOUT_NONE() {
        return MACH_MSG_TIMEOUT_NONE;
    }

    private static final int MACH_MSGH_BITS_PORTS_MASK = (int) 2039583L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_PORTS_MASK 2039583
     * }
     */
    public static int MACH_MSGH_BITS_PORTS_MASK() {
        return MACH_MSGH_BITS_PORTS_MASK;
    }

    private static final int MACH_MSGH_BITS_COMPLEX = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_COMPLEX 2147483648
     * }
     */
    public static int MACH_MSGH_BITS_COMPLEX() {
        return MACH_MSGH_BITS_COMPLEX;
    }

    private static final int MACH_MSGH_BITS_USER = (int) 2149523231L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_USER 2149523231
     * }
     */
    public static int MACH_MSGH_BITS_USER() {
        return MACH_MSGH_BITS_USER;
    }

    private static final int MACH_MSGH_BITS_RAISEIMP = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_RAISEIMP 536870912
     * }
     */
    public static int MACH_MSGH_BITS_RAISEIMP() {
        return MACH_MSGH_BITS_RAISEIMP;
    }

    private static final int MACH_MSGH_BITS_DENAP = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_DENAP 536870912
     * }
     */
    public static int MACH_MSGH_BITS_DENAP() {
        return MACH_MSGH_BITS_DENAP;
    }

    private static final int MACH_MSGH_BITS_IMPHOLDASRT = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_IMPHOLDASRT 268435456
     * }
     */
    public static int MACH_MSGH_BITS_IMPHOLDASRT() {
        return MACH_MSGH_BITS_IMPHOLDASRT;
    }

    private static final int MACH_MSGH_BITS_DENAPHOLDASRT = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_DENAPHOLDASRT 268435456
     * }
     */
    public static int MACH_MSGH_BITS_DENAPHOLDASRT() {
        return MACH_MSGH_BITS_DENAPHOLDASRT;
    }

    private static final int MACH_MSGH_BITS_CIRCULAR = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_CIRCULAR 268435456
     * }
     */
    public static int MACH_MSGH_BITS_CIRCULAR() {
        return MACH_MSGH_BITS_CIRCULAR;
    }

    private static final int MACH_MSGH_BITS_USED = (int) 2954829599L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSGH_BITS_USED 2954829599
     * }
     */
    public static int MACH_MSGH_BITS_USED() {
        return MACH_MSGH_BITS_USED;
    }

    private static final MemorySegment MACH_MSG_SIZE_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_SIZE_NULL() {
        return MACH_MSG_SIZE_NULL;
    }

    private static final int MACH_MSG_PRIORITY_UNSPECIFIED = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_PRIORITY_UNSPECIFIED 0
     * }
     */
    public static int MACH_MSG_PRIORITY_UNSPECIFIED() {
        return MACH_MSG_PRIORITY_UNSPECIFIED;
    }

    private static final int MACH_MSG_DESCRIPTOR_MAX = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_DESCRIPTOR_MAX 4
     * }
     */
    public static int MACH_MSG_DESCRIPTOR_MAX() {
        return MACH_MSG_DESCRIPTOR_MAX;
    }

    private static final MemorySegment MACH_MSG_BODY_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_BODY_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_BODY_NULL() {
        return MACH_MSG_BODY_NULL;
    }

    private static final MemorySegment MACH_MSG_DESCRIPTOR_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_DESCRIPTOR_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_DESCRIPTOR_NULL() {
        return MACH_MSG_DESCRIPTOR_NULL;
    }

    private static final MemorySegment MACH_MSG_NULL = MemorySegment.ofAddress(0L);
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_NULL (void*) 0
     * }
     */
    public static MemorySegment MACH_MSG_NULL() {
        return MACH_MSG_NULL;
    }

    private static final int MACH_MSG_FILTER_POLICY_ALLOW = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_FILTER_POLICY_ALLOW 0
     * }
     */
    public static int MACH_MSG_FILTER_POLICY_ALLOW() {
        return MACH_MSG_FILTER_POLICY_ALLOW;
    }

    private static final long MACH_MSG_TRAILER_MINIMUM_SIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TRAILER_MINIMUM_SIZE 8
     * }
     */
    public static long MACH_MSG_TRAILER_MINIMUM_SIZE() {
        return MACH_MSG_TRAILER_MINIMUM_SIZE;
    }

    private static final int MAX_TRAILER_SIZE = (int) 68L;
    /**
     * {@snippet lang=c :
     * #define MAX_TRAILER_SIZE 68
     * }
     */
    public static int MAX_TRAILER_SIZE() {
        return MAX_TRAILER_SIZE;
    }

    private static final long MACH_MSG_TRAILER_FORMAT_0_SIZE = 20L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TRAILER_FORMAT_0_SIZE 20
     * }
     */
    public static long MACH_MSG_TRAILER_FORMAT_0_SIZE() {
        return MACH_MSG_TRAILER_FORMAT_0_SIZE;
    }

    private static final int MACH_MSG_SIZE_MAX = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_MAX 4294967295
     * }
     */
    public static int MACH_MSG_SIZE_MAX() {
        return MACH_MSG_SIZE_MAX;
    }

    private static final int MACH_MSG_SIZE_RELIABLE = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_SIZE_RELIABLE 262144
     * }
     */
    public static int MACH_MSG_SIZE_RELIABLE() {
        return MACH_MSG_SIZE_RELIABLE;
    }

    private static final int MACH_MSG_TYPE_PORT_RECEIVE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_RECEIVE 16
     * }
     */
    public static int MACH_MSG_TYPE_PORT_RECEIVE() {
        return MACH_MSG_TYPE_PORT_RECEIVE;
    }

    private static final int MACH_MSG_TYPE_PORT_SEND = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_SEND 17
     * }
     */
    public static int MACH_MSG_TYPE_PORT_SEND() {
        return MACH_MSG_TYPE_PORT_SEND;
    }

    private static final int MACH_MSG_TYPE_PORT_SEND_ONCE = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_PORT_SEND_ONCE 18
     * }
     */
    public static int MACH_MSG_TYPE_PORT_SEND_ONCE() {
        return MACH_MSG_TYPE_PORT_SEND_ONCE;
    }

    private static final int MACH_MSG_TYPE_POLYMORPHIC = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define MACH_MSG_TYPE_POLYMORPHIC 4294967295
     * }
     */
    public static int MACH_MSG_TYPE_POLYMORPHIC() {
        return MACH_MSG_TYPE_POLYMORPHIC;
    }

    private static final int MACH_SEND_NODENAP = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define MACH_SEND_NODENAP 262144
     * }
     */
    public static int MACH_SEND_NODENAP() {
        return MACH_SEND_NODENAP;
    }

    private static final int MACH_SEND_SYNC_USE_THRPRI = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define MACH_SEND_SYNC_USE_THRPRI 2097152
     * }
     */
    public static int MACH_SEND_SYNC_USE_THRPRI() {
        return MACH_SEND_SYNC_USE_THRPRI;
    }

    private static final int MACH_RCV_TRAILER_MASK = (int) 251658240L;
    /**
     * {@snippet lang=c :
     * #define MACH_RCV_TRAILER_MASK 251658240
     * }
     */
    public static int MACH_RCV_TRAILER_MASK() {
        return MACH_RCV_TRAILER_MASK;
    }

    private static final int KEV_DL_MASTER_ELECTED = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define KEV_DL_MASTER_ELECTED 23
     * }
     */
    public static int KEV_DL_MASTER_ELECTED() {
        return KEV_DL_MASTER_ELECTED;
    }

    private static final int SAE_ASSOCID_ALL = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define SAE_ASSOCID_ALL 4294967295
     * }
     */
    public static int SAE_ASSOCID_ALL() {
        return SAE_ASSOCID_ALL;
    }

    private static final int SAE_CONNID_ALL = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define SAE_CONNID_ALL 4294967295
     * }
     */
    public static int SAE_CONNID_ALL() {
        return SAE_CONNID_ALL;
    }

    private static final int AF_LOCAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AF_LOCAL 1
     * }
     */
    public static int AF_LOCAL() {
        return AF_LOCAL;
    }

    private static final int AF_OSI = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define AF_OSI 7
     * }
     */
    public static int AF_OSI() {
        return AF_OSI;
    }

    private static final int AF_E164 = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define AF_E164 28
     * }
     */
    public static int AF_E164() {
        return AF_E164;
    }

    private static final long _SS_ALIGNSIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define _SS_ALIGNSIZE 8
     * }
     */
    public static long _SS_ALIGNSIZE() {
        return _SS_ALIGNSIZE;
    }

    private static final long _SS_PAD1SIZE = 6L;
    /**
     * {@snippet lang=c :
     * #define _SS_PAD1SIZE 6
     * }
     */
    public static long _SS_PAD1SIZE() {
        return _SS_PAD1SIZE;
    }

    private static final long _SS_PAD2SIZE = 112L;
    /**
     * {@snippet lang=c :
     * #define _SS_PAD2SIZE 112
     * }
     */
    public static long _SS_PAD2SIZE() {
        return _SS_PAD2SIZE;
    }

    private static final int PF_UNSPEC = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define PF_UNSPEC 0
     * }
     */
    public static int PF_UNSPEC() {
        return PF_UNSPEC;
    }

    private static final int PF_LOCAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define PF_LOCAL 1
     * }
     */
    public static int PF_LOCAL() {
        return PF_LOCAL;
    }

    private static final int PF_UNIX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define PF_UNIX 1
     * }
     */
    public static int PF_UNIX() {
        return PF_UNIX;
    }

    private static final int PF_INET = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define PF_INET 2
     * }
     */
    public static int PF_INET() {
        return PF_INET;
    }

    private static final int PF_IMPLINK = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define PF_IMPLINK 3
     * }
     */
    public static int PF_IMPLINK() {
        return PF_IMPLINK;
    }

    private static final int PF_PUP = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PF_PUP 4
     * }
     */
    public static int PF_PUP() {
        return PF_PUP;
    }

    private static final int PF_CHAOS = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define PF_CHAOS 5
     * }
     */
    public static int PF_CHAOS() {
        return PF_CHAOS;
    }

    private static final int PF_NS = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define PF_NS 6
     * }
     */
    public static int PF_NS() {
        return PF_NS;
    }

    private static final int PF_ISO = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define PF_ISO 7
     * }
     */
    public static int PF_ISO() {
        return PF_ISO;
    }

    private static final int PF_OSI = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define PF_OSI 7
     * }
     */
    public static int PF_OSI() {
        return PF_OSI;
    }

    private static final int PF_ECMA = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define PF_ECMA 8
     * }
     */
    public static int PF_ECMA() {
        return PF_ECMA;
    }

    private static final int PF_DATAKIT = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define PF_DATAKIT 9
     * }
     */
    public static int PF_DATAKIT() {
        return PF_DATAKIT;
    }

    private static final int PF_CCITT = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define PF_CCITT 10
     * }
     */
    public static int PF_CCITT() {
        return PF_CCITT;
    }

    private static final int PF_SNA = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define PF_SNA 11
     * }
     */
    public static int PF_SNA() {
        return PF_SNA;
    }

    private static final int PF_DECnet = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define PF_DECnet 12
     * }
     */
    public static int PF_DECnet() {
        return PF_DECnet;
    }

    private static final int PF_DLI = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define PF_DLI 13
     * }
     */
    public static int PF_DLI() {
        return PF_DLI;
    }

    private static final int PF_LAT = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define PF_LAT 14
     * }
     */
    public static int PF_LAT() {
        return PF_LAT;
    }

    private static final int PF_HYLINK = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define PF_HYLINK 15
     * }
     */
    public static int PF_HYLINK() {
        return PF_HYLINK;
    }

    private static final int PF_APPLETALK = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define PF_APPLETALK 16
     * }
     */
    public static int PF_APPLETALK() {
        return PF_APPLETALK;
    }

    private static final int PF_ROUTE = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define PF_ROUTE 17
     * }
     */
    public static int PF_ROUTE() {
        return PF_ROUTE;
    }

    private static final int PF_LINK = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define PF_LINK 18
     * }
     */
    public static int PF_LINK() {
        return PF_LINK;
    }

    private static final int PF_XTP = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define PF_XTP 19
     * }
     */
    public static int PF_XTP() {
        return PF_XTP;
    }

    private static final int PF_COIP = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define PF_COIP 20
     * }
     */
    public static int PF_COIP() {
        return PF_COIP;
    }

    private static final int PF_CNT = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define PF_CNT 21
     * }
     */
    public static int PF_CNT() {
        return PF_CNT;
    }

    private static final int PF_SIP = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define PF_SIP 24
     * }
     */
    public static int PF_SIP() {
        return PF_SIP;
    }

    private static final int PF_IPX = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define PF_IPX 23
     * }
     */
    public static int PF_IPX() {
        return PF_IPX;
    }

    private static final int PF_RTIP = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define PF_RTIP 22
     * }
     */
    public static int PF_RTIP() {
        return PF_RTIP;
    }

    private static final int PF_PIP = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define PF_PIP 25
     * }
     */
    public static int PF_PIP() {
        return PF_PIP;
    }

    private static final int PF_NDRV = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define PF_NDRV 27
     * }
     */
    public static int PF_NDRV() {
        return PF_NDRV;
    }

    private static final int PF_ISDN = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define PF_ISDN 28
     * }
     */
    public static int PF_ISDN() {
        return PF_ISDN;
    }

    private static final int PF_KEY = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define PF_KEY 29
     * }
     */
    public static int PF_KEY() {
        return PF_KEY;
    }

    private static final int PF_INET6 = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define PF_INET6 30
     * }
     */
    public static int PF_INET6() {
        return PF_INET6;
    }

    private static final int PF_NATM = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define PF_NATM 31
     * }
     */
    public static int PF_NATM() {
        return PF_NATM;
    }

    private static final int PF_SYSTEM = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define PF_SYSTEM 32
     * }
     */
    public static int PF_SYSTEM() {
        return PF_SYSTEM;
    }

    private static final int PF_NETBIOS = (int) 33L;
    /**
     * {@snippet lang=c :
     * #define PF_NETBIOS 33
     * }
     */
    public static int PF_NETBIOS() {
        return PF_NETBIOS;
    }

    private static final int PF_PPP = (int) 34L;
    /**
     * {@snippet lang=c :
     * #define PF_PPP 34
     * }
     */
    public static int PF_PPP() {
        return PF_PPP;
    }

    private static final int PF_RESERVED_36 = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define PF_RESERVED_36 36
     * }
     */
    public static int PF_RESERVED_36() {
        return PF_RESERVED_36;
    }

    private static final int PF_UTUN = (int) 38L;
    /**
     * {@snippet lang=c :
     * #define PF_UTUN 38
     * }
     */
    public static int PF_UTUN() {
        return PF_UTUN;
    }

    private static final int PF_VSOCK = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define PF_VSOCK 40
     * }
     */
    public static int PF_VSOCK() {
        return PF_VSOCK;
    }

    private static final int PF_MAX = (int) 41L;
    /**
     * {@snippet lang=c :
     * #define PF_MAX 41
     * }
     */
    public static int PF_MAX() {
        return PF_MAX;
    }

    private static final int PF_VLAN = (int) 1986814318L;
    /**
     * {@snippet lang=c :
     * #define PF_VLAN 1986814318
     * }
     */
    public static int PF_VLAN() {
        return PF_VLAN;
    }

    private static final int PF_BOND = (int) 1651469924L;
    /**
     * {@snippet lang=c :
     * #define PF_BOND 1651469924
     * }
     */
    public static int PF_BOND() {
        return PF_BOND;
    }

    private static final int NET_MAXID = (int) 41L;
    /**
     * {@snippet lang=c :
     * #define NET_MAXID 41
     * }
     */
    public static int NET_MAXID() {
        return NET_MAXID;
    }

    private static final int EVFILT_READ = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_READ -1
     * }
     */
    public static int EVFILT_READ() {
        return EVFILT_READ;
    }

    private static final int EVFILT_WRITE = (int) -2L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_WRITE -2
     * }
     */
    public static int EVFILT_WRITE() {
        return EVFILT_WRITE;
    }

    private static final int EVFILT_AIO = (int) -3L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_AIO -3
     * }
     */
    public static int EVFILT_AIO() {
        return EVFILT_AIO;
    }

    private static final int EVFILT_VNODE = (int) -4L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_VNODE -4
     * }
     */
    public static int EVFILT_VNODE() {
        return EVFILT_VNODE;
    }

    private static final int EVFILT_PROC = (int) -5L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_PROC -5
     * }
     */
    public static int EVFILT_PROC() {
        return EVFILT_PROC;
    }

    private static final int EVFILT_SIGNAL = (int) -6L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_SIGNAL -6
     * }
     */
    public static int EVFILT_SIGNAL() {
        return EVFILT_SIGNAL;
    }

    private static final int EVFILT_TIMER = (int) -7L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_TIMER -7
     * }
     */
    public static int EVFILT_TIMER() {
        return EVFILT_TIMER;
    }

    private static final int EVFILT_MACHPORT = (int) -8L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_MACHPORT -8
     * }
     */
    public static int EVFILT_MACHPORT() {
        return EVFILT_MACHPORT;
    }

    private static final int EVFILT_FS = (int) -9L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_FS -9
     * }
     */
    public static int EVFILT_FS() {
        return EVFILT_FS;
    }

    private static final int EVFILT_USER = (int) -10L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_USER -10
     * }
     */
    public static int EVFILT_USER() {
        return EVFILT_USER;
    }

    private static final int EVFILT_VM = (int) -12L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_VM -12
     * }
     */
    public static int EVFILT_VM() {
        return EVFILT_VM;
    }

    private static final int EVFILT_EXCEPT = (int) -15L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_EXCEPT -15
     * }
     */
    public static int EVFILT_EXCEPT() {
        return EVFILT_EXCEPT;
    }

    private static final int EVFILT_THREADMARKER = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_THREADMARKER 18
     * }
     */
    public static int EVFILT_THREADMARKER() {
        return EVFILT_THREADMARKER;
    }

    private static final int EV_DISPATCH2 = (int) 384L;
    /**
     * {@snippet lang=c :
     * #define EV_DISPATCH2 384
     * }
     */
    public static int EV_DISPATCH2() {
        return EV_DISPATCH2;
    }

    private static final int EV_POLL = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define EV_POLL 4096
     * }
     */
    public static int EV_POLL() {
        return EV_POLL;
    }

    private static final int EV_OOBAND = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define EV_OOBAND 8192
     * }
     */
    public static int EV_OOBAND() {
        return EV_OOBAND;
    }

    private static final int NOTE_FFOR = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFOR 2147483648
     * }
     */
    public static int NOTE_FFOR() {
        return NOTE_FFOR;
    }

    private static final int NOTE_FFCOPY = (int) 3221225472L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFCOPY 3221225472
     * }
     */
    public static int NOTE_FFCOPY() {
        return NOTE_FFCOPY;
    }

    private static final int NOTE_FFCTRLMASK = (int) 3221225472L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFCTRLMASK 3221225472
     * }
     */
    public static int NOTE_FFCTRLMASK() {
        return NOTE_FFCTRLMASK;
    }

    private static final int NOTE_EXIT = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT 2147483648
     * }
     */
    public static int NOTE_EXIT() {
        return NOTE_EXIT;
    }

    private static final int NOTE_REAP = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define NOTE_REAP 268435456
     * }
     */
    public static int NOTE_REAP() {
        return NOTE_REAP;
    }

    private static final int NOTE_PCTRLMASK = (int) -1048576L;
    /**
     * {@snippet lang=c :
     * #define NOTE_PCTRLMASK -1048576
     * }
     */
    public static int NOTE_PCTRLMASK() {
        return NOTE_PCTRLMASK;
    }

    private static final int NOTE_EXIT_REPARENTED = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_REPARENTED 524288
     * }
     */
    public static int NOTE_EXIT_REPARENTED() {
        return NOTE_EXIT_REPARENTED;
    }

    private static final int NOTE_VM_PRESSURE = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define NOTE_VM_PRESSURE 2147483648
     * }
     */
    public static int NOTE_VM_PRESSURE() {
        return NOTE_VM_PRESSURE;
    }

    private static final int IFF_ALTPHYS = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define IFF_ALTPHYS 16384
     * }
     */
    public static int IFF_ALTPHYS() {
        return IFF_ALTPHYS;
    }

    private static final int IFCAP_HWCSUM = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define IFCAP_HWCSUM 3
     * }
     */
    public static int IFCAP_HWCSUM() {
        return IFCAP_HWCSUM;
    }

    private static final int IFCAP_TSO = (int) 96L;
    /**
     * {@snippet lang=c :
     * #define IFCAP_TSO 96
     * }
     */
    public static int IFCAP_TSO() {
        return IFCAP_TSO;
    }

    private static final int IFCAP_VALID = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define IFCAP_VALID 32767
     * }
     */
    public static int IFCAP_VALID() {
        return IFCAP_VALID;
    }

    private static final long IFQ_DEF_C_TARGET_DELAY = 10000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_DEF_C_TARGET_DELAY 10000000
     * }
     */
    public static long IFQ_DEF_C_TARGET_DELAY() {
        return IFQ_DEF_C_TARGET_DELAY;
    }

    private static final long IFQ_DEF_C_UPDATE_INTERVAL = 100000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_DEF_C_UPDATE_INTERVAL 100000000
     * }
     */
    public static long IFQ_DEF_C_UPDATE_INTERVAL() {
        return IFQ_DEF_C_UPDATE_INTERVAL;
    }

    private static final long IFQ_DEF_L4S_TARGET_DELAY = 2000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_DEF_L4S_TARGET_DELAY 2000000
     * }
     */
    public static long IFQ_DEF_L4S_TARGET_DELAY() {
        return IFQ_DEF_L4S_TARGET_DELAY;
    }

    private static final long IFQ_DEF_L4S_WIRELESS_TARGET_DELAY = 15000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_DEF_L4S_WIRELESS_TARGET_DELAY 15000000
     * }
     */
    public static long IFQ_DEF_L4S_WIRELESS_TARGET_DELAY() {
        return IFQ_DEF_L4S_WIRELESS_TARGET_DELAY;
    }

    private static final long IFQ_DEF_L4S_UPDATE_INTERVAL = 100000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_DEF_L4S_UPDATE_INTERVAL 100000000
     * }
     */
    public static long IFQ_DEF_L4S_UPDATE_INTERVAL() {
        return IFQ_DEF_L4S_UPDATE_INTERVAL;
    }

    private static final long IFQ_LL_C_TARGET_DELAY = 10000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_LL_C_TARGET_DELAY 10000000
     * }
     */
    public static long IFQ_LL_C_TARGET_DELAY() {
        return IFQ_LL_C_TARGET_DELAY;
    }

    private static final long IFQ_LL_C_UPDATE_INTERVAL = 100000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_LL_C_UPDATE_INTERVAL 100000000
     * }
     */
    public static long IFQ_LL_C_UPDATE_INTERVAL() {
        return IFQ_LL_C_UPDATE_INTERVAL;
    }

    private static final long IFQ_LL_L4S_TARGET_DELAY = 2000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_LL_L4S_TARGET_DELAY 2000000
     * }
     */
    public static long IFQ_LL_L4S_TARGET_DELAY() {
        return IFQ_LL_L4S_TARGET_DELAY;
    }

    private static final long IFQ_LL_L4S_WIRELESS_TARGET_DELAY = 15000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_LL_L4S_WIRELESS_TARGET_DELAY 15000000
     * }
     */
    public static long IFQ_LL_L4S_WIRELESS_TARGET_DELAY() {
        return IFQ_LL_L4S_WIRELESS_TARGET_DELAY;
    }

    private static final long IFQ_LL_L4S_UPDATE_INTERVAL = 100000000L;
    /**
     * {@snippet lang=c :
     * #define IFQ_LL_L4S_UPDATE_INTERVAL 100000000
     * }
     */
    public static long IFQ_LL_L4S_UPDATE_INTERVAL() {
        return IFQ_LL_L4S_UPDATE_INTERVAL;
    }

    private static final int RTPRF_OURS = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define RTPRF_OURS 262144
     * }
     */
    public static int RTPRF_OURS() {
        return RTPRF_OURS;
    }

    private static final int IPPROTO_IPIP = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define IPPROTO_IPIP 4
     * }
     */
    public static int IPPROTO_IPIP() {
        return IPPROTO_IPIP;
    }

    private static final int IPPORT_RESERVED = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define IPPORT_RESERVED 1024
     * }
     */
    public static int IPPORT_RESERVED() {
        return IPPORT_RESERVED;
    }

    private static final int INADDR_ANY = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define INADDR_ANY 0
     * }
     */
    public static int INADDR_ANY() {
        return INADDR_ANY;
    }

    private static final int INADDR_BROADCAST = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define INADDR_BROADCAST 4294967295
     * }
     */
    public static int INADDR_BROADCAST() {
        return INADDR_BROADCAST;
    }

    private static final int IN_CLASSA_NET = (int) 4278190080L;
    /**
     * {@snippet lang=c :
     * #define IN_CLASSA_NET 4278190080
     * }
     */
    public static int IN_CLASSA_NET() {
        return IN_CLASSA_NET;
    }

    private static final int IN_CLASSB_NET = (int) 4294901760L;
    /**
     * {@snippet lang=c :
     * #define IN_CLASSB_NET 4294901760
     * }
     */
    public static int IN_CLASSB_NET() {
        return IN_CLASSB_NET;
    }

    private static final int IN_CLASSC_NET = (int) 4294967040L;
    /**
     * {@snippet lang=c :
     * #define IN_CLASSC_NET 4294967040
     * }
     */
    public static int IN_CLASSC_NET() {
        return IN_CLASSC_NET;
    }

    private static final int IN_CLASSD_NET = (int) 4026531840L;
    /**
     * {@snippet lang=c :
     * #define IN_CLASSD_NET 4026531840
     * }
     */
    public static int IN_CLASSD_NET() {
        return IN_CLASSD_NET;
    }

    private static final int INADDR_LOOPBACK = (int) 2130706433L;
    /**
     * {@snippet lang=c :
     * #define INADDR_LOOPBACK 2130706433
     * }
     */
    public static int INADDR_LOOPBACK() {
        return INADDR_LOOPBACK;
    }

    private static final int INADDR_NONE = (int) 4294967295L;
    /**
     * {@snippet lang=c :
     * #define INADDR_NONE 4294967295
     * }
     */
    public static int INADDR_NONE() {
        return INADDR_NONE;
    }

    private static final int INADDR_UNSPEC_GROUP = (int) 3758096384L;
    /**
     * {@snippet lang=c :
     * #define INADDR_UNSPEC_GROUP 3758096384
     * }
     */
    public static int INADDR_UNSPEC_GROUP() {
        return INADDR_UNSPEC_GROUP;
    }

    private static final int INADDR_ALLHOSTS_GROUP = (int) 3758096385L;
    /**
     * {@snippet lang=c :
     * #define INADDR_ALLHOSTS_GROUP 3758096385
     * }
     */
    public static int INADDR_ALLHOSTS_GROUP() {
        return INADDR_ALLHOSTS_GROUP;
    }

    private static final int INADDR_ALLRTRS_GROUP = (int) 3758096386L;
    /**
     * {@snippet lang=c :
     * #define INADDR_ALLRTRS_GROUP 3758096386
     * }
     */
    public static int INADDR_ALLRTRS_GROUP() {
        return INADDR_ALLRTRS_GROUP;
    }

    private static final int INADDR_ALLRPTS_GROUP = (int) 3758096406L;
    /**
     * {@snippet lang=c :
     * #define INADDR_ALLRPTS_GROUP 3758096406
     * }
     */
    public static int INADDR_ALLRPTS_GROUP() {
        return INADDR_ALLRPTS_GROUP;
    }

    private static final int INADDR_CARP_GROUP = (int) 3758096402L;
    /**
     * {@snippet lang=c :
     * #define INADDR_CARP_GROUP 3758096402
     * }
     */
    public static int INADDR_CARP_GROUP() {
        return INADDR_CARP_GROUP;
    }

    private static final int INADDR_PFSYNC_GROUP = (int) 3758096624L;
    /**
     * {@snippet lang=c :
     * #define INADDR_PFSYNC_GROUP 3758096624
     * }
     */
    public static int INADDR_PFSYNC_GROUP() {
        return INADDR_PFSYNC_GROUP;
    }

    private static final int INADDR_ALLMDNS_GROUP = (int) 3758096635L;
    /**
     * {@snippet lang=c :
     * #define INADDR_ALLMDNS_GROUP 3758096635
     * }
     */
    public static int INADDR_ALLMDNS_GROUP() {
        return INADDR_ALLMDNS_GROUP;
    }

    private static final int INADDR_MAX_LOCAL_GROUP = (int) 3758096639L;
    /**
     * {@snippet lang=c :
     * #define INADDR_MAX_LOCAL_GROUP 3758096639
     * }
     */
    public static int INADDR_MAX_LOCAL_GROUP() {
        return INADDR_MAX_LOCAL_GROUP;
    }

    private static final int IN_LINKLOCALNETNUM = (int) 2851995648L;
    /**
     * {@snippet lang=c :
     * #define IN_LINKLOCALNETNUM 2851995648
     * }
     */
    public static int IN_LINKLOCALNETNUM() {
        return IN_LINKLOCALNETNUM;
    }

    private static final int IP_RECVPKTINFO = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define IP_RECVPKTINFO 26
     * }
     */
    public static int IP_RECVPKTINFO() {
        return IP_RECVPKTINFO;
    }

    private static final int IPPROTO_MAXID = (int) 52L;
    /**
     * {@snippet lang=c :
     * #define IPPROTO_MAXID 52
     * }
     */
    public static int IPPROTO_MAXID() {
        return IPPROTO_MAXID;
    }
    /**
     * {@snippet lang=c :
     * #define __KAME_VERSION "2009/apple-darwin"
     * }
     */
    public static MemorySegment __KAME_VERSION() {
        class Holder {
            static final MemorySegment __KAME_VERSION = libproc_h.LIBRARY_ARENA.allocateFrom("2009/apple-darwin");
        }
        return Holder.__KAME_VERSION;
    }

    private static final int IPV6PORT_RESERVEDMAX = (int) 1023L;
    /**
     * {@snippet lang=c :
     * #define IPV6PORT_RESERVEDMAX 1023
     * }
     */
    public static int IPV6PORT_RESERVEDMAX() {
        return IPV6PORT_RESERVEDMAX;
    }

    private static final int IPV6_ADDR_MC_FLAGS_UNICAST_BASED = (int) 48L;
    /**
     * {@snippet lang=c :
     * #define IPV6_ADDR_MC_FLAGS_UNICAST_BASED 48
     * }
     */
    public static int IPV6_ADDR_MC_FLAGS_UNICAST_BASED() {
        return IPV6_ADDR_MC_FLAGS_UNICAST_BASED;
    }

    private static final int IPV6_BINDV6ONLY = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define IPV6_BINDV6ONLY 27
     * }
     */
    public static int IPV6_BINDV6ONLY() {
        return IPV6_BINDV6ONLY;
    }

    private static final int IPV6PROTO_MAXID = (int) 104L;
    /**
     * {@snippet lang=c :
     * #define IPV6PROTO_MAXID 104
     * }
     */
    public static int IPV6PROTO_MAXID() {
        return IPV6PROTO_MAXID;
    }

    private static final int TH_FLAGS = (int) 247L;
    /**
     * {@snippet lang=c :
     * #define TH_FLAGS 247
     * }
     */
    public static int TH_FLAGS() {
        return TH_FLAGS;
    }

    private static final int TH_FLAGS_ALL = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define TH_FLAGS_ALL 255
     * }
     */
    public static int TH_FLAGS_ALL() {
        return TH_FLAGS_ALL;
    }

    private static final int TH_ACCEPT = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define TH_ACCEPT 23
     * }
     */
    public static int TH_ACCEPT() {
        return TH_ACCEPT;
    }

    private static final int TH_ACE = (int) 448L;
    /**
     * {@snippet lang=c :
     * #define TH_ACE 448
     * }
     */
    public static int TH_ACE() {
        return TH_ACE;
    }

    private static final int TCPOLEN_TSTAMP_APPA = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define TCPOLEN_TSTAMP_APPA 12
     * }
     */
    public static int TCPOLEN_TSTAMP_APPA() {
        return TCPOLEN_TSTAMP_APPA;
    }

    private static final int TCPOPT_TSTAMP_HDR = (int) 16844810L;
    /**
     * {@snippet lang=c :
     * #define TCPOPT_TSTAMP_HDR 16844810
     * }
     */
    public static int TCPOPT_TSTAMP_HDR() {
        return TCPOPT_TSTAMP_HDR;
    }

    private static final int TCPOLEN_CC_APPA = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define TCPOLEN_CC_APPA 8
     * }
     */
    public static int TCPOLEN_CC_APPA() {
        return TCPOLEN_CC_APPA;
    }

    private static final int TCPOPT_SACK_PERMIT_HDR = (int) 16843778L;
    /**
     * {@snippet lang=c :
     * #define TCPOPT_SACK_PERMIT_HDR 16843778
     * }
     */
    public static int TCPOPT_SACK_PERMIT_HDR() {
        return TCPOPT_SACK_PERMIT_HDR;
    }

    private static final int TCPOPT_SACK_HDR = (int) 16844032L;
    /**
     * {@snippet lang=c :
     * #define TCPOPT_SACK_HDR 16844032
     * }
     */
    public static int TCPOPT_SACK_HDR() {
        return TCPOPT_SACK_HDR;
    }

    private static final int TCP_MAXHLEN = (int) 60L;
    /**
     * {@snippet lang=c :
     * #define TCP_MAXHLEN 60
     * }
     */
    public static int TCP_MAXHLEN() {
        return TCP_MAXHLEN;
    }

    private static final long TCP_MAXOLEN = 40L;
    /**
     * {@snippet lang=c :
     * #define TCP_MAXOLEN 40
     * }
     */
    public static long TCP_MAXOLEN() {
        return TCP_MAXOLEN;
    }

    private static final int CPU_ARCH_MASK = (int) 4278190080L;
    /**
     * {@snippet lang=c :
     * #define CPU_ARCH_MASK 4278190080
     * }
     */
    public static int CPU_ARCH_MASK() {
        return CPU_ARCH_MASK;
    }

    private static final int CPU_TYPE_ANY = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_ANY -1
     * }
     */
    public static int CPU_TYPE_ANY() {
        return CPU_TYPE_ANY;
    }

    private static final int CPU_TYPE_VAX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_VAX 1
     * }
     */
    public static int CPU_TYPE_VAX() {
        return CPU_TYPE_VAX;
    }

    private static final int CPU_TYPE_MC680x0 = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_MC680x0 6
     * }
     */
    public static int CPU_TYPE_MC680x0() {
        return CPU_TYPE_MC680x0;
    }

    private static final int CPU_TYPE_X86 = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_X86 7
     * }
     */
    public static int CPU_TYPE_X86() {
        return CPU_TYPE_X86;
    }

    private static final int CPU_TYPE_I386 = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_I386 7
     * }
     */
    public static int CPU_TYPE_I386() {
        return CPU_TYPE_I386;
    }

    private static final int CPU_TYPE_X86_64 = (int) 16777223L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_X86_64 16777223
     * }
     */
    public static int CPU_TYPE_X86_64() {
        return CPU_TYPE_X86_64;
    }

    private static final int CPU_TYPE_MC98000 = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_MC98000 10
     * }
     */
    public static int CPU_TYPE_MC98000() {
        return CPU_TYPE_MC98000;
    }

    private static final int CPU_TYPE_HPPA = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_HPPA 11
     * }
     */
    public static int CPU_TYPE_HPPA() {
        return CPU_TYPE_HPPA;
    }

    private static final int CPU_TYPE_ARM = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_ARM 12
     * }
     */
    public static int CPU_TYPE_ARM() {
        return CPU_TYPE_ARM;
    }

    private static final int CPU_TYPE_ARM64 = (int) 16777228L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_ARM64 16777228
     * }
     */
    public static int CPU_TYPE_ARM64() {
        return CPU_TYPE_ARM64;
    }

    private static final int CPU_TYPE_ARM64_32 = (int) 33554444L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_ARM64_32 33554444
     * }
     */
    public static int CPU_TYPE_ARM64_32() {
        return CPU_TYPE_ARM64_32;
    }

    private static final int CPU_TYPE_MC88000 = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_MC88000 13
     * }
     */
    public static int CPU_TYPE_MC88000() {
        return CPU_TYPE_MC88000;
    }

    private static final int CPU_TYPE_SPARC = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_SPARC 14
     * }
     */
    public static int CPU_TYPE_SPARC() {
        return CPU_TYPE_SPARC;
    }

    private static final int CPU_TYPE_I860 = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_I860 15
     * }
     */
    public static int CPU_TYPE_I860() {
        return CPU_TYPE_I860;
    }

    private static final int CPU_TYPE_POWERPC = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_POWERPC 18
     * }
     */
    public static int CPU_TYPE_POWERPC() {
        return CPU_TYPE_POWERPC;
    }

    private static final int CPU_TYPE_POWERPC64 = (int) 16777234L;
    /**
     * {@snippet lang=c :
     * #define CPU_TYPE_POWERPC64 16777234
     * }
     */
    public static int CPU_TYPE_POWERPC64() {
        return CPU_TYPE_POWERPC64;
    }

    private static final int CPU_SUBTYPE_MASK = (int) 4278190080L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MASK 4278190080
     * }
     */
    public static int CPU_SUBTYPE_MASK() {
        return CPU_SUBTYPE_MASK;
    }

    private static final int CPU_SUBTYPE_LIB64 = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_LIB64 2147483648
     * }
     */
    public static int CPU_SUBTYPE_LIB64() {
        return CPU_SUBTYPE_LIB64;
    }

    private static final int CPU_SUBTYPE_PTRAUTH_ABI = (int) 2147483648L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PTRAUTH_ABI 2147483648
     * }
     */
    public static int CPU_SUBTYPE_PTRAUTH_ABI() {
        return CPU_SUBTYPE_PTRAUTH_ABI;
    }

    private static final int CPU_SUBTYPE_ANY = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ANY -1
     * }
     */
    public static int CPU_SUBTYPE_ANY() {
        return CPU_SUBTYPE_ANY;
    }

    private static final int CPU_SUBTYPE_MULTIPLE = (int) -1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MULTIPLE -1
     * }
     */
    public static int CPU_SUBTYPE_MULTIPLE() {
        return CPU_SUBTYPE_MULTIPLE;
    }

    private static final int CPU_SUBTYPE_LITTLE_ENDIAN = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_LITTLE_ENDIAN 0
     * }
     */
    public static int CPU_SUBTYPE_LITTLE_ENDIAN() {
        return CPU_SUBTYPE_LITTLE_ENDIAN;
    }

    private static final int CPU_SUBTYPE_BIG_ENDIAN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_BIG_ENDIAN 1
     * }
     */
    public static int CPU_SUBTYPE_BIG_ENDIAN() {
        return CPU_SUBTYPE_BIG_ENDIAN;
    }

    private static final int CPU_THREADTYPE_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_THREADTYPE_NONE 0
     * }
     */
    public static int CPU_THREADTYPE_NONE() {
        return CPU_THREADTYPE_NONE;
    }

    private static final int CPU_SUBTYPE_VAX_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_VAX_ALL() {
        return CPU_SUBTYPE_VAX_ALL;
    }

    private static final int CPU_SUBTYPE_VAX780 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX780 1
     * }
     */
    public static int CPU_SUBTYPE_VAX780() {
        return CPU_SUBTYPE_VAX780;
    }

    private static final int CPU_SUBTYPE_VAX785 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX785 2
     * }
     */
    public static int CPU_SUBTYPE_VAX785() {
        return CPU_SUBTYPE_VAX785;
    }

    private static final int CPU_SUBTYPE_VAX750 = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX750 3
     * }
     */
    public static int CPU_SUBTYPE_VAX750() {
        return CPU_SUBTYPE_VAX750;
    }

    private static final int CPU_SUBTYPE_VAX730 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX730 4
     * }
     */
    public static int CPU_SUBTYPE_VAX730() {
        return CPU_SUBTYPE_VAX730;
    }

    private static final int CPU_SUBTYPE_UVAXI = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_UVAXI 5
     * }
     */
    public static int CPU_SUBTYPE_UVAXI() {
        return CPU_SUBTYPE_UVAXI;
    }

    private static final int CPU_SUBTYPE_UVAXII = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_UVAXII 6
     * }
     */
    public static int CPU_SUBTYPE_UVAXII() {
        return CPU_SUBTYPE_UVAXII;
    }

    private static final int CPU_SUBTYPE_VAX8200 = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX8200 7
     * }
     */
    public static int CPU_SUBTYPE_VAX8200() {
        return CPU_SUBTYPE_VAX8200;
    }

    private static final int CPU_SUBTYPE_VAX8500 = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX8500 8
     * }
     */
    public static int CPU_SUBTYPE_VAX8500() {
        return CPU_SUBTYPE_VAX8500;
    }

    private static final int CPU_SUBTYPE_VAX8600 = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX8600 9
     * }
     */
    public static int CPU_SUBTYPE_VAX8600() {
        return CPU_SUBTYPE_VAX8600;
    }

    private static final int CPU_SUBTYPE_VAX8650 = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX8650 10
     * }
     */
    public static int CPU_SUBTYPE_VAX8650() {
        return CPU_SUBTYPE_VAX8650;
    }

    private static final int CPU_SUBTYPE_VAX8800 = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_VAX8800 11
     * }
     */
    public static int CPU_SUBTYPE_VAX8800() {
        return CPU_SUBTYPE_VAX8800;
    }

    private static final int CPU_SUBTYPE_UVAXIII = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_UVAXIII 12
     * }
     */
    public static int CPU_SUBTYPE_UVAXIII() {
        return CPU_SUBTYPE_UVAXIII;
    }

    private static final int CPU_SUBTYPE_MC680x0_ALL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC680x0_ALL 1
     * }
     */
    public static int CPU_SUBTYPE_MC680x0_ALL() {
        return CPU_SUBTYPE_MC680x0_ALL;
    }

    private static final int CPU_SUBTYPE_MC68030 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC68030 1
     * }
     */
    public static int CPU_SUBTYPE_MC68030() {
        return CPU_SUBTYPE_MC68030;
    }

    private static final int CPU_SUBTYPE_MC68040 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC68040 2
     * }
     */
    public static int CPU_SUBTYPE_MC68040() {
        return CPU_SUBTYPE_MC68040;
    }

    private static final int CPU_SUBTYPE_MC68030_ONLY = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC68030_ONLY 3
     * }
     */
    public static int CPU_SUBTYPE_MC68030_ONLY() {
        return CPU_SUBTYPE_MC68030_ONLY;
    }

    private static final int CPU_SUBTYPE_I386_ALL = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_I386_ALL 3
     * }
     */
    public static int CPU_SUBTYPE_I386_ALL() {
        return CPU_SUBTYPE_I386_ALL;
    }

    private static final int CPU_SUBTYPE_386 = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_386 3
     * }
     */
    public static int CPU_SUBTYPE_386() {
        return CPU_SUBTYPE_386;
    }

    private static final int CPU_SUBTYPE_486 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_486 4
     * }
     */
    public static int CPU_SUBTYPE_486() {
        return CPU_SUBTYPE_486;
    }

    private static final int CPU_SUBTYPE_486SX = (int) 132L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_486SX 132
     * }
     */
    public static int CPU_SUBTYPE_486SX() {
        return CPU_SUBTYPE_486SX;
    }

    private static final int CPU_SUBTYPE_586 = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_586 5
     * }
     */
    public static int CPU_SUBTYPE_586() {
        return CPU_SUBTYPE_586;
    }

    private static final int CPU_SUBTYPE_PENT = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENT 5
     * }
     */
    public static int CPU_SUBTYPE_PENT() {
        return CPU_SUBTYPE_PENT;
    }

    private static final int CPU_SUBTYPE_PENTPRO = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTPRO 22
     * }
     */
    public static int CPU_SUBTYPE_PENTPRO() {
        return CPU_SUBTYPE_PENTPRO;
    }

    private static final int CPU_SUBTYPE_PENTII_M3 = (int) 54L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTII_M3 54
     * }
     */
    public static int CPU_SUBTYPE_PENTII_M3() {
        return CPU_SUBTYPE_PENTII_M3;
    }

    private static final int CPU_SUBTYPE_PENTII_M5 = (int) 86L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTII_M5 86
     * }
     */
    public static int CPU_SUBTYPE_PENTII_M5() {
        return CPU_SUBTYPE_PENTII_M5;
    }

    private static final int CPU_SUBTYPE_CELERON = (int) 103L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_CELERON 103
     * }
     */
    public static int CPU_SUBTYPE_CELERON() {
        return CPU_SUBTYPE_CELERON;
    }

    private static final int CPU_SUBTYPE_CELERON_MOBILE = (int) 119L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_CELERON_MOBILE 119
     * }
     */
    public static int CPU_SUBTYPE_CELERON_MOBILE() {
        return CPU_SUBTYPE_CELERON_MOBILE;
    }

    private static final int CPU_SUBTYPE_PENTIUM_3 = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_3 8
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_3() {
        return CPU_SUBTYPE_PENTIUM_3;
    }

    private static final int CPU_SUBTYPE_PENTIUM_3_M = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_3_M 24
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_3_M() {
        return CPU_SUBTYPE_PENTIUM_3_M;
    }

    private static final int CPU_SUBTYPE_PENTIUM_3_XEON = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_3_XEON 40
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_3_XEON() {
        return CPU_SUBTYPE_PENTIUM_3_XEON;
    }

    private static final int CPU_SUBTYPE_PENTIUM_M = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_M 9
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_M() {
        return CPU_SUBTYPE_PENTIUM_M;
    }

    private static final int CPU_SUBTYPE_PENTIUM_4 = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_4 10
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_4() {
        return CPU_SUBTYPE_PENTIUM_4;
    }

    private static final int CPU_SUBTYPE_PENTIUM_4_M = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_PENTIUM_4_M 26
     * }
     */
    public static int CPU_SUBTYPE_PENTIUM_4_M() {
        return CPU_SUBTYPE_PENTIUM_4_M;
    }

    private static final int CPU_SUBTYPE_ITANIUM = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ITANIUM 11
     * }
     */
    public static int CPU_SUBTYPE_ITANIUM() {
        return CPU_SUBTYPE_ITANIUM;
    }

    private static final int CPU_SUBTYPE_ITANIUM_2 = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ITANIUM_2 27
     * }
     */
    public static int CPU_SUBTYPE_ITANIUM_2() {
        return CPU_SUBTYPE_ITANIUM_2;
    }

    private static final int CPU_SUBTYPE_XEON = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_XEON 12
     * }
     */
    public static int CPU_SUBTYPE_XEON() {
        return CPU_SUBTYPE_XEON;
    }

    private static final int CPU_SUBTYPE_XEON_MP = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_XEON_MP 28
     * }
     */
    public static int CPU_SUBTYPE_XEON_MP() {
        return CPU_SUBTYPE_XEON_MP;
    }

    private static final int CPU_SUBTYPE_X86_ALL = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_X86_ALL 3
     * }
     */
    public static int CPU_SUBTYPE_X86_ALL() {
        return CPU_SUBTYPE_X86_ALL;
    }

    private static final int CPU_SUBTYPE_X86_64_ALL = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_X86_64_ALL 3
     * }
     */
    public static int CPU_SUBTYPE_X86_64_ALL() {
        return CPU_SUBTYPE_X86_64_ALL;
    }

    private static final int CPU_SUBTYPE_X86_ARCH1 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_X86_ARCH1 4
     * }
     */
    public static int CPU_SUBTYPE_X86_ARCH1() {
        return CPU_SUBTYPE_X86_ARCH1;
    }

    private static final int CPU_SUBTYPE_X86_64_H = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_X86_64_H 8
     * }
     */
    public static int CPU_SUBTYPE_X86_64_H() {
        return CPU_SUBTYPE_X86_64_H;
    }

    private static final int CPU_THREADTYPE_INTEL_HTT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_THREADTYPE_INTEL_HTT 1
     * }
     */
    public static int CPU_THREADTYPE_INTEL_HTT() {
        return CPU_THREADTYPE_INTEL_HTT;
    }

    private static final int CPU_SUBTYPE_MIPS_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_MIPS_ALL() {
        return CPU_SUBTYPE_MIPS_ALL;
    }

    private static final int CPU_SUBTYPE_MIPS_R2300 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R2300 1
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R2300() {
        return CPU_SUBTYPE_MIPS_R2300;
    }

    private static final int CPU_SUBTYPE_MIPS_R2600 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R2600 2
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R2600() {
        return CPU_SUBTYPE_MIPS_R2600;
    }

    private static final int CPU_SUBTYPE_MIPS_R2800 = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R2800 3
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R2800() {
        return CPU_SUBTYPE_MIPS_R2800;
    }

    private static final int CPU_SUBTYPE_MIPS_R2000a = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R2000a 4
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R2000a() {
        return CPU_SUBTYPE_MIPS_R2000a;
    }

    private static final int CPU_SUBTYPE_MIPS_R2000 = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R2000 5
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R2000() {
        return CPU_SUBTYPE_MIPS_R2000;
    }

    private static final int CPU_SUBTYPE_MIPS_R3000a = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R3000a 6
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R3000a() {
        return CPU_SUBTYPE_MIPS_R3000a;
    }

    private static final int CPU_SUBTYPE_MIPS_R3000 = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MIPS_R3000 7
     * }
     */
    public static int CPU_SUBTYPE_MIPS_R3000() {
        return CPU_SUBTYPE_MIPS_R3000;
    }

    private static final int CPU_SUBTYPE_MC98000_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC98000_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_MC98000_ALL() {
        return CPU_SUBTYPE_MC98000_ALL;
    }

    private static final int CPU_SUBTYPE_MC98601 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC98601 1
     * }
     */
    public static int CPU_SUBTYPE_MC98601() {
        return CPU_SUBTYPE_MC98601;
    }

    private static final int CPU_SUBTYPE_HPPA_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_HPPA_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_HPPA_ALL() {
        return CPU_SUBTYPE_HPPA_ALL;
    }

    private static final int CPU_SUBTYPE_HPPA_7100 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_HPPA_7100 0
     * }
     */
    public static int CPU_SUBTYPE_HPPA_7100() {
        return CPU_SUBTYPE_HPPA_7100;
    }

    private static final int CPU_SUBTYPE_HPPA_7100LC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_HPPA_7100LC 1
     * }
     */
    public static int CPU_SUBTYPE_HPPA_7100LC() {
        return CPU_SUBTYPE_HPPA_7100LC;
    }

    private static final int CPU_SUBTYPE_MC88000_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC88000_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_MC88000_ALL() {
        return CPU_SUBTYPE_MC88000_ALL;
    }

    private static final int CPU_SUBTYPE_MC88100 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC88100 1
     * }
     */
    public static int CPU_SUBTYPE_MC88100() {
        return CPU_SUBTYPE_MC88100;
    }

    private static final int CPU_SUBTYPE_MC88110 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_MC88110 2
     * }
     */
    public static int CPU_SUBTYPE_MC88110() {
        return CPU_SUBTYPE_MC88110;
    }

    private static final int CPU_SUBTYPE_SPARC_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_SPARC_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_SPARC_ALL() {
        return CPU_SUBTYPE_SPARC_ALL;
    }

    private static final int CPU_SUBTYPE_I860_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_I860_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_I860_ALL() {
        return CPU_SUBTYPE_I860_ALL;
    }

    private static final int CPU_SUBTYPE_I860_860 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_I860_860 1
     * }
     */
    public static int CPU_SUBTYPE_I860_860() {
        return CPU_SUBTYPE_I860_860;
    }

    private static final int CPU_SUBTYPE_POWERPC_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_ALL() {
        return CPU_SUBTYPE_POWERPC_ALL;
    }

    private static final int CPU_SUBTYPE_POWERPC_601 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_601 1
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_601() {
        return CPU_SUBTYPE_POWERPC_601;
    }

    private static final int CPU_SUBTYPE_POWERPC_602 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_602 2
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_602() {
        return CPU_SUBTYPE_POWERPC_602;
    }

    private static final int CPU_SUBTYPE_POWERPC_603 = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_603 3
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_603() {
        return CPU_SUBTYPE_POWERPC_603;
    }

    private static final int CPU_SUBTYPE_POWERPC_603e = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_603e 4
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_603e() {
        return CPU_SUBTYPE_POWERPC_603e;
    }

    private static final int CPU_SUBTYPE_POWERPC_603ev = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_603ev 5
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_603ev() {
        return CPU_SUBTYPE_POWERPC_603ev;
    }

    private static final int CPU_SUBTYPE_POWERPC_604 = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_604 6
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_604() {
        return CPU_SUBTYPE_POWERPC_604;
    }

    private static final int CPU_SUBTYPE_POWERPC_604e = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_604e 7
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_604e() {
        return CPU_SUBTYPE_POWERPC_604e;
    }

    private static final int CPU_SUBTYPE_POWERPC_620 = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_620 8
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_620() {
        return CPU_SUBTYPE_POWERPC_620;
    }

    private static final int CPU_SUBTYPE_POWERPC_750 = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_750 9
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_750() {
        return CPU_SUBTYPE_POWERPC_750;
    }

    private static final int CPU_SUBTYPE_POWERPC_7400 = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_7400 10
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_7400() {
        return CPU_SUBTYPE_POWERPC_7400;
    }

    private static final int CPU_SUBTYPE_POWERPC_7450 = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_7450 11
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_7450() {
        return CPU_SUBTYPE_POWERPC_7450;
    }

    private static final int CPU_SUBTYPE_POWERPC_970 = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_POWERPC_970 100
     * }
     */
    public static int CPU_SUBTYPE_POWERPC_970() {
        return CPU_SUBTYPE_POWERPC_970;
    }

    private static final int CPU_SUBTYPE_ARM_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_ARM_ALL() {
        return CPU_SUBTYPE_ARM_ALL;
    }

    private static final int CPU_SUBTYPE_ARM_V4T = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V4T 5
     * }
     */
    public static int CPU_SUBTYPE_ARM_V4T() {
        return CPU_SUBTYPE_ARM_V4T;
    }

    private static final int CPU_SUBTYPE_ARM_V6 = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V6 6
     * }
     */
    public static int CPU_SUBTYPE_ARM_V6() {
        return CPU_SUBTYPE_ARM_V6;
    }

    private static final int CPU_SUBTYPE_ARM_V5TEJ = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V5TEJ 7
     * }
     */
    public static int CPU_SUBTYPE_ARM_V5TEJ() {
        return CPU_SUBTYPE_ARM_V5TEJ;
    }

    private static final int CPU_SUBTYPE_ARM_XSCALE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_XSCALE 8
     * }
     */
    public static int CPU_SUBTYPE_ARM_XSCALE() {
        return CPU_SUBTYPE_ARM_XSCALE;
    }

    private static final int CPU_SUBTYPE_ARM_V7 = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7 9
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7() {
        return CPU_SUBTYPE_ARM_V7;
    }

    private static final int CPU_SUBTYPE_ARM_V7F = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7F 10
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7F() {
        return CPU_SUBTYPE_ARM_V7F;
    }

    private static final int CPU_SUBTYPE_ARM_V7S = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7S 11
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7S() {
        return CPU_SUBTYPE_ARM_V7S;
    }

    private static final int CPU_SUBTYPE_ARM_V7K = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7K 12
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7K() {
        return CPU_SUBTYPE_ARM_V7K;
    }

    private static final int CPU_SUBTYPE_ARM_V8 = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V8 13
     * }
     */
    public static int CPU_SUBTYPE_ARM_V8() {
        return CPU_SUBTYPE_ARM_V8;
    }

    private static final int CPU_SUBTYPE_ARM_V6M = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V6M 14
     * }
     */
    public static int CPU_SUBTYPE_ARM_V6M() {
        return CPU_SUBTYPE_ARM_V6M;
    }

    private static final int CPU_SUBTYPE_ARM_V7M = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7M 15
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7M() {
        return CPU_SUBTYPE_ARM_V7M;
    }

    private static final int CPU_SUBTYPE_ARM_V7EM = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V7EM 16
     * }
     */
    public static int CPU_SUBTYPE_ARM_V7EM() {
        return CPU_SUBTYPE_ARM_V7EM;
    }

    private static final int CPU_SUBTYPE_ARM_V8M = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM_V8M 17
     * }
     */
    public static int CPU_SUBTYPE_ARM_V8M() {
        return CPU_SUBTYPE_ARM_V8M;
    }

    private static final int CPU_SUBTYPE_ARM64_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM64_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_ARM64_ALL() {
        return CPU_SUBTYPE_ARM64_ALL;
    }

    private static final int CPU_SUBTYPE_ARM64_V8 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM64_V8 1
     * }
     */
    public static int CPU_SUBTYPE_ARM64_V8() {
        return CPU_SUBTYPE_ARM64_V8;
    }

    private static final int CPU_SUBTYPE_ARM64E = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM64E 2
     * }
     */
    public static int CPU_SUBTYPE_ARM64E() {
        return CPU_SUBTYPE_ARM64E;
    }

    private static final int CPU_SUBTYPE_ARM64_32_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM64_32_ALL 0
     * }
     */
    public static int CPU_SUBTYPE_ARM64_32_ALL() {
        return CPU_SUBTYPE_ARM64_32_ALL;
    }

    private static final int CPU_SUBTYPE_ARM64_32_V8 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CPU_SUBTYPE_ARM64_32_V8 1
     * }
     */
    public static int CPU_SUBTYPE_ARM64_32_V8() {
        return CPU_SUBTYPE_ARM64_32_V8;
    }

    private static final int CPUFAMILY_POWERPC_G3 = (int) 3471054153L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_POWERPC_G3 3471054153
     * }
     */
    public static int CPUFAMILY_POWERPC_G3() {
        return CPUFAMILY_POWERPC_G3;
    }

    private static final int CPUFAMILY_POWERPC_G5 = (int) 3983988906L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_POWERPC_G5 3983988906
     * }
     */
    public static int CPUFAMILY_POWERPC_G5() {
        return CPUFAMILY_POWERPC_G5;
    }

    private static final int CPUFAMILY_INTEL_6_13 = (int) 2855483691L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_INTEL_6_13 2855483691
     * }
     */
    public static int CPUFAMILY_INTEL_6_13() {
        return CPUFAMILY_INTEL_6_13;
    }

    private static final int CPUFAMILY_ARM_9 = (int) 3878847406L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_9 3878847406
     * }
     */
    public static int CPUFAMILY_ARM_9() {
        return CPUFAMILY_ARM_9;
    }

    private static final int CPUFAMILY_ARM_11 = (int) 2415272152L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_11 2415272152
     * }
     */
    public static int CPUFAMILY_ARM_11() {
        return CPUFAMILY_ARM_11;
    }

    private static final int CPUFAMILY_ARM_12 = (int) 3172666089L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_12 3172666089
     * }
     */
    public static int CPUFAMILY_ARM_12() {
        return CPUFAMILY_ARM_12;
    }

    private static final int CPUFAMILY_ARM_14 = (int) 2517073649L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_14 2517073649
     * }
     */
    public static int CPUFAMILY_ARM_14() {
        return CPUFAMILY_ARM_14;
    }

    private static final int CPUFAMILY_ARM_15 = (int) 2823887818L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_15 2823887818
     * }
     */
    public static int CPUFAMILY_ARM_15() {
        return CPUFAMILY_ARM_15;
    }

    private static final int CPUFAMILY_ARM_TWISTER = (int) 2465937352L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_TWISTER 2465937352
     * }
     */
    public static int CPUFAMILY_ARM_TWISTER() {
        return CPUFAMILY_ARM_TWISTER;
    }

    private static final int CPUFAMILY_ARM_MONSOON_MISTRAL = (int) 3894312694L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_MONSOON_MISTRAL 3894312694
     * }
     */
    public static int CPUFAMILY_ARM_MONSOON_MISTRAL() {
        return CPUFAMILY_ARM_MONSOON_MISTRAL;
    }

    private static final int CPUFAMILY_ARM_BLIZZARD_AVALANCHE = (int) 3660830781L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_BLIZZARD_AVALANCHE 3660830781
     * }
     */
    public static int CPUFAMILY_ARM_BLIZZARD_AVALANCHE() {
        return CPUFAMILY_ARM_BLIZZARD_AVALANCHE;
    }

    private static final int CPUFAMILY_ARM_EVEREST_SAWTOOTH = (int) 2271604202L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_EVEREST_SAWTOOTH 2271604202
     * }
     */
    public static int CPUFAMILY_ARM_EVEREST_SAWTOOTH() {
        return CPUFAMILY_ARM_EVEREST_SAWTOOTH;
    }

    private static final int CPUFAMILY_ARM_IBIZA = (int) 4197663070L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_ARM_IBIZA 4197663070
     * }
     */
    public static int CPUFAMILY_ARM_IBIZA() {
        return CPUFAMILY_ARM_IBIZA;
    }

    private static final int CPUFAMILY_INTEL_6_23 = (int) 2028621756L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_INTEL_6_23 2028621756
     * }
     */
    public static int CPUFAMILY_INTEL_6_23() {
        return CPUFAMILY_INTEL_6_23;
    }

    private static final int CPUFAMILY_INTEL_6_26 = (int) 1801080018L;
    /**
     * {@snippet lang=c :
     * #define CPUFAMILY_INTEL_6_26 1801080018
     * }
     */
    public static int CPUFAMILY_INTEL_6_26() {
        return CPUFAMILY_INTEL_6_26;
    }

    private static final int PROC_FI_GUARD_CLOSE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define PROC_FI_GUARD_CLOSE 1
     * }
     */
    public static int PROC_FI_GUARD_CLOSE() {
        return PROC_FI_GUARD_CLOSE;
    }

    private static final int PROC_FI_GUARD_DUP = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define PROC_FI_GUARD_DUP 2
     * }
     */
    public static int PROC_FI_GUARD_DUP() {
        return PROC_FI_GUARD_DUP;
    }

    private static final int PROC_FI_GUARD_SOCKET_IPC = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PROC_FI_GUARD_SOCKET_IPC 4
     * }
     */
    public static int PROC_FI_GUARD_SOCKET_IPC() {
        return PROC_FI_GUARD_SOCKET_IPC;
    }

    private static final int PROC_FI_GUARD_FILEPORT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define PROC_FI_GUARD_FILEPORT 8
     * }
     */
    public static int PROC_FI_GUARD_FILEPORT() {
        return PROC_FI_GUARD_FILEPORT;
    }

    private static final int PROC_CHANNEL_FLAGS_MONITOR = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define PROC_CHANNEL_FLAGS_MONITOR 3
     * }
     */
    public static int PROC_CHANNEL_FLAGS_MONITOR() {
        return PROC_CHANNEL_FLAGS_MONITOR;
    }

    private static final long PROC_PIDLISTFD_SIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDLISTFD_SIZE 8
     * }
     */
    public static long PROC_PIDLISTFD_SIZE() {
        return PROC_PIDLISTFD_SIZE;
    }

    private static final long PROC_PIDTASKALLINFO_SIZE = 232L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTASKALLINFO_SIZE 232
     * }
     */
    public static long PROC_PIDTASKALLINFO_SIZE() {
        return PROC_PIDTASKALLINFO_SIZE;
    }

    private static final long PROC_PIDTBSDINFO_SIZE = 136L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTBSDINFO_SIZE 136
     * }
     */
    public static long PROC_PIDTBSDINFO_SIZE() {
        return PROC_PIDTBSDINFO_SIZE;
    }

    private static final long PROC_PIDTASKINFO_SIZE = 96L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTASKINFO_SIZE 96
     * }
     */
    public static long PROC_PIDTASKINFO_SIZE() {
        return PROC_PIDTASKINFO_SIZE;
    }

    private static final long PROC_PIDTHREADINFO_SIZE = 112L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTHREADINFO_SIZE 112
     * }
     */
    public static long PROC_PIDTHREADINFO_SIZE() {
        return PROC_PIDTHREADINFO_SIZE;
    }

    private static final long PROC_PIDLISTTHREADS_SIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDLISTTHREADS_SIZE 8
     * }
     */
    public static long PROC_PIDLISTTHREADS_SIZE() {
        return PROC_PIDLISTTHREADS_SIZE;
    }

    private static final long PROC_PIDREGIONINFO_SIZE = 96L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDREGIONINFO_SIZE 96
     * }
     */
    public static long PROC_PIDREGIONINFO_SIZE() {
        return PROC_PIDREGIONINFO_SIZE;
    }

    private static final long PROC_PIDREGIONPATHINFO_SIZE = 1272L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDREGIONPATHINFO_SIZE 1272
     * }
     */
    public static long PROC_PIDREGIONPATHINFO_SIZE() {
        return PROC_PIDREGIONPATHINFO_SIZE;
    }

    private static final long PROC_PIDVNODEPATHINFO_SIZE = 2352L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDVNODEPATHINFO_SIZE 2352
     * }
     */
    public static long PROC_PIDVNODEPATHINFO_SIZE() {
        return PROC_PIDVNODEPATHINFO_SIZE;
    }

    private static final long PROC_PIDTHREADPATHINFO_SIZE = 1288L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTHREADPATHINFO_SIZE 1288
     * }
     */
    public static long PROC_PIDTHREADPATHINFO_SIZE() {
        return PROC_PIDTHREADPATHINFO_SIZE;
    }

    private static final int PROC_PIDPATHINFO_SIZE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDPATHINFO_SIZE 1024
     * }
     */
    public static int PROC_PIDPATHINFO_SIZE() {
        return PROC_PIDPATHINFO_SIZE;
    }

    private static final int PROC_PIDPATHINFO_MAXSIZE = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDPATHINFO_MAXSIZE 4096
     * }
     */
    public static int PROC_PIDPATHINFO_MAXSIZE() {
        return PROC_PIDPATHINFO_MAXSIZE;
    }

    private static final long PROC_PIDWORKQUEUEINFO_SIZE = 16L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDWORKQUEUEINFO_SIZE 16
     * }
     */
    public static long PROC_PIDWORKQUEUEINFO_SIZE() {
        return PROC_PIDWORKQUEUEINFO_SIZE;
    }

    private static final long PROC_PIDT_SHORTBSDINFO_SIZE = 64L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDT_SHORTBSDINFO_SIZE 64
     * }
     */
    public static long PROC_PIDT_SHORTBSDINFO_SIZE() {
        return PROC_PIDT_SHORTBSDINFO_SIZE;
    }

    private static final long PROC_PIDLISTFILEPORTS_SIZE = 8L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDLISTFILEPORTS_SIZE 8
     * }
     */
    public static long PROC_PIDLISTFILEPORTS_SIZE() {
        return PROC_PIDLISTFILEPORTS_SIZE;
    }

    private static final long PROC_PIDTHREADID64INFO_SIZE = 112L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDTHREADID64INFO_SIZE 112
     * }
     */
    public static long PROC_PIDTHREADID64INFO_SIZE() {
        return PROC_PIDTHREADID64INFO_SIZE;
    }

    private static final long PROC_PIDFDVNODEINFO_SIZE = 176L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDVNODEINFO_SIZE 176
     * }
     */
    public static long PROC_PIDFDVNODEINFO_SIZE() {
        return PROC_PIDFDVNODEINFO_SIZE;
    }

    private static final long PROC_PIDFDVNODEPATHINFO_SIZE = 1200L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDVNODEPATHINFO_SIZE 1200
     * }
     */
    public static long PROC_PIDFDVNODEPATHINFO_SIZE() {
        return PROC_PIDFDVNODEPATHINFO_SIZE;
    }

    private static final long PROC_PIDFDSOCKETINFO_SIZE = 792L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDSOCKETINFO_SIZE 792
     * }
     */
    public static long PROC_PIDFDSOCKETINFO_SIZE() {
        return PROC_PIDFDSOCKETINFO_SIZE;
    }

    private static final long PROC_PIDFDPSEMINFO_SIZE = 1184L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDPSEMINFO_SIZE 1184
     * }
     */
    public static long PROC_PIDFDPSEMINFO_SIZE() {
        return PROC_PIDFDPSEMINFO_SIZE;
    }

    private static final long PROC_PIDFDPSHMINFO_SIZE = 1192L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDPSHMINFO_SIZE 1192
     * }
     */
    public static long PROC_PIDFDPSHMINFO_SIZE() {
        return PROC_PIDFDPSHMINFO_SIZE;
    }

    private static final long PROC_PIDFDPIPEINFO_SIZE = 184L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDPIPEINFO_SIZE 184
     * }
     */
    public static long PROC_PIDFDPIPEINFO_SIZE() {
        return PROC_PIDFDPIPEINFO_SIZE;
    }

    private static final long PROC_PIDFDKQUEUEINFO_SIZE = 168L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDKQUEUEINFO_SIZE 168
     * }
     */
    public static long PROC_PIDFDKQUEUEINFO_SIZE() {
        return PROC_PIDFDKQUEUEINFO_SIZE;
    }

    private static final long PROC_PIDFDATALKINFO_SIZE = 160L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDATALKINFO_SIZE 160
     * }
     */
    public static long PROC_PIDFDATALKINFO_SIZE() {
        return PROC_PIDFDATALKINFO_SIZE;
    }

    private static final long PROC_PIDFDCHANNELINFO_SIZE = 56L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFDCHANNELINFO_SIZE 56
     * }
     */
    public static long PROC_PIDFDCHANNELINFO_SIZE() {
        return PROC_PIDFDCHANNELINFO_SIZE;
    }

    private static final long PROC_PIDFILEPORTVNODEPATHINFO_SIZE = 1200L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFILEPORTVNODEPATHINFO_SIZE 1200
     * }
     */
    public static long PROC_PIDFILEPORTVNODEPATHINFO_SIZE() {
        return PROC_PIDFILEPORTVNODEPATHINFO_SIZE;
    }

    private static final long PROC_PIDFILEPORTSOCKETINFO_SIZE = 792L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFILEPORTSOCKETINFO_SIZE 792
     * }
     */
    public static long PROC_PIDFILEPORTSOCKETINFO_SIZE() {
        return PROC_PIDFILEPORTSOCKETINFO_SIZE;
    }

    private static final long PROC_PIDFILEPORTPSHMINFO_SIZE = 1192L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFILEPORTPSHMINFO_SIZE 1192
     * }
     */
    public static long PROC_PIDFILEPORTPSHMINFO_SIZE() {
        return PROC_PIDFILEPORTPSHMINFO_SIZE;
    }

    private static final long PROC_PIDFILEPORTPIPEINFO_SIZE = 184L;
    /**
     * {@snippet lang=c :
     * #define PROC_PIDFILEPORTPIPEINFO_SIZE 184
     * }
     */
    public static long PROC_PIDFILEPORTPIPEINFO_SIZE() {
        return PROC_PIDFILEPORTPIPEINFO_SIZE;
    }

    private static final int PROC_SELFSET_THREADNAME_SIZE = (int) 63L;
    /**
     * {@snippet lang=c :
     * #define PROC_SELFSET_THREADNAME_SIZE 63
     * }
     */
    public static int PROC_SELFSET_THREADNAME_SIZE() {
        return PROC_SELFSET_THREADNAME_SIZE;
    }
}
