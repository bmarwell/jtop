/*
 * Copyright (C) 2024.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.bmarwell.jtop.lib.osx.ffm; // Generated by jextract

import static java.lang.foreign.ValueLayout.JAVA_BYTE;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.Arena;
import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.GroupLayout;
import java.lang.foreign.Linker;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.PaddingLayout;
import java.lang.foreign.SequenceLayout;
import java.lang.foreign.StructLayout;
import java.lang.foreign.SymbolLookup;
import java.lang.foreign.ValueLayout;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.util.Arrays;
import java.util.stream.Collectors;

public class sysctl_h_1 {

    sysctl_h_1() {
        // Should not be called directly
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();
    static final boolean TRACE_DOWNCALLS = Boolean.getBoolean("jextract.trace.downcalls");

    static void traceDowncall(String name, Object... args) {
        String traceArgs = Arrays.stream(args).map(Object::toString).collect(Collectors.joining(", "));
        System.out.printf("%s(%s)\n", name, traceArgs);
    }

    static MemorySegment findOrThrow(String symbol) {
        return SYMBOL_LOOKUP.find(symbol).orElseThrow(() -> new UnsatisfiedLinkError("unresolved symbol: " + symbol));
    }

    static MethodHandle upcallHandle(Class<?> fi, String name, FunctionDescriptor fdesc) {
        try {
            return MethodHandles.lookup().findVirtual(fi, name, fdesc.toMethodType());
        } catch (ReflectiveOperationException ex) {
            throw new AssertionError(ex);
        }
    }

    static MemoryLayout align(MemoryLayout layout, long align) {
        return switch (layout) {
            case PaddingLayout p -> p;
            case ValueLayout v -> v.withByteAlignment(align);
            case GroupLayout g -> {
                MemoryLayout[] alignedMembers =
                        g.memberLayouts().stream().map(m -> align(m, align)).toArray(MemoryLayout[]::new);
                yield g instanceof StructLayout
                        ? MemoryLayout.structLayout(alignedMembers)
                        : MemoryLayout.unionLayout(alignedMembers);
            }
            case SequenceLayout s -> MemoryLayout.sequenceLayout(s.elementCount(), align(s.elementLayout(), align));
        };
    }

    static final SymbolLookup SYMBOL_LOOKUP =
            SymbolLookup.loaderLookup().or(Linker.nativeLinker().defaultLookup());

    public static final ValueLayout.OfBoolean C_BOOL = ValueLayout.JAVA_BOOLEAN;
    public static final ValueLayout.OfByte C_CHAR = ValueLayout.JAVA_BYTE;
    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT;
    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT;
    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG;
    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT;
    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE;
    public static final AddressLayout C_POINTER =
            ValueLayout.ADDRESS.withTargetLayout(MemoryLayout.sequenceLayout(java.lang.Long.MAX_VALUE, JAVA_BYTE));
    public static final ValueLayout.OfLong C_LONG = ValueLayout.JAVA_LONG;
    private static final int __has_safe_buffers = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __has_safe_buffers 0
     * }
     */
    public static int __has_safe_buffers() {
        return __has_safe_buffers;
    }

    private static final int __DARWIN_ONLY_64_BIT_INO_T = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_ONLY_64_BIT_INO_T() {
        return __DARWIN_ONLY_64_BIT_INO_T;
    }

    private static final int __DARWIN_ONLY_UNIX_CONFORMANCE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int __DARWIN_ONLY_UNIX_CONFORMANCE() {
        return __DARWIN_ONLY_UNIX_CONFORMANCE;
    }

    private static final int __DARWIN_ONLY_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_VERS_1050 1
     * }
     */
    public static int __DARWIN_ONLY_VERS_1050() {
        return __DARWIN_ONLY_VERS_1050;
    }

    private static final int __DARWIN_UNIX03 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_UNIX03 1
     * }
     */
    public static int __DARWIN_UNIX03() {
        return __DARWIN_UNIX03;
    }

    private static final int __DARWIN_64_BIT_INO_T = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_64_BIT_INO_T() {
        return __DARWIN_64_BIT_INO_T;
    }

    private static final int __DARWIN_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_VERS_1050 1
     * }
     */
    public static int __DARWIN_VERS_1050() {
        return __DARWIN_VERS_1050;
    }

    private static final int __DARWIN_NON_CANCELABLE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NON_CANCELABLE 0
     * }
     */
    public static int __DARWIN_NON_CANCELABLE() {
        return __DARWIN_NON_CANCELABLE;
    }

    private static final int __STDC_WANT_LIB_EXT1__ = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __STDC_WANT_LIB_EXT1__ 1
     * }
     */
    public static int __STDC_WANT_LIB_EXT1__() {
        return __STDC_WANT_LIB_EXT1__;
    }

    private static final int __DARWIN_NO_LONG_LONG = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NO_LONG_LONG 0
     * }
     */
    public static int __DARWIN_NO_LONG_LONG() {
        return __DARWIN_NO_LONG_LONG;
    }

    private static final int _DARWIN_FEATURE_64_BIT_INODE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_64_BIT_INODE() {
        return _DARWIN_FEATURE_64_BIT_INODE;
    }

    private static final int _DARWIN_FEATURE_ONLY_64_BIT_INODE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_64_BIT_INODE() {
        return _DARWIN_FEATURE_ONLY_64_BIT_INODE;
    }

    private static final int _DARWIN_FEATURE_ONLY_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_VERS_1050 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_VERS_1050() {
        return _DARWIN_FEATURE_ONLY_VERS_1050;
    }

    private static final int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE;
    }

    private static final int _DARWIN_FEATURE_UNIX_CONFORMANCE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_UNIX_CONFORMANCE 3
     * }
     */
    public static int _DARWIN_FEATURE_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_UNIX_CONFORMANCE;
    }

    private static final int __has_ptrcheck = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __has_ptrcheck 0
     * }
     */
    public static int __has_ptrcheck() {
        return __has_ptrcheck;
    }

    private static final int __PTHREAD_SIZE__ = (int) 8176L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_SIZE__ 8176
     * }
     */
    public static int __PTHREAD_SIZE__() {
        return __PTHREAD_SIZE__;
    }

    private static final int __PTHREAD_ATTR_SIZE__ = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ATTR_SIZE__ 56
     * }
     */
    public static int __PTHREAD_ATTR_SIZE__() {
        return __PTHREAD_ATTR_SIZE__;
    }

    private static final int __PTHREAD_MUTEXATTR_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEXATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_MUTEXATTR_SIZE__() {
        return __PTHREAD_MUTEXATTR_SIZE__;
    }

    private static final int __PTHREAD_MUTEX_SIZE__ = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEX_SIZE__ 56
     * }
     */
    public static int __PTHREAD_MUTEX_SIZE__() {
        return __PTHREAD_MUTEX_SIZE__;
    }

    private static final int __PTHREAD_CONDATTR_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_CONDATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_CONDATTR_SIZE__() {
        return __PTHREAD_CONDATTR_SIZE__;
    }

    private static final int __PTHREAD_COND_SIZE__ = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_COND_SIZE__ 40
     * }
     */
    public static int __PTHREAD_COND_SIZE__() {
        return __PTHREAD_COND_SIZE__;
    }

    private static final int __PTHREAD_ONCE_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ONCE_SIZE__ 8
     * }
     */
    public static int __PTHREAD_ONCE_SIZE__() {
        return __PTHREAD_ONCE_SIZE__;
    }

    private static final int __PTHREAD_RWLOCK_SIZE__ = (int) 192L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCK_SIZE__ 192
     * }
     */
    public static int __PTHREAD_RWLOCK_SIZE__() {
        return __PTHREAD_RWLOCK_SIZE__;
    }

    private static final int __PTHREAD_RWLOCKATTR_SIZE__ = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCKATTR_SIZE__ 16
     * }
     */
    public static int __PTHREAD_RWLOCKATTR_SIZE__() {
        return __PTHREAD_RWLOCKATTR_SIZE__;
    }

    private static final int __API_TO_BE_DEPRECATED = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED() {
        return __API_TO_BE_DEPRECATED;
    }

    private static final int __API_TO_BE_DEPRECATED_MACOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACOS() {
        return __API_TO_BE_DEPRECATED_MACOS;
    }

    private static final int __API_TO_BE_DEPRECATED_IOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_IOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_IOS() {
        return __API_TO_BE_DEPRECATED_IOS;
    }

    private static final int __API_TO_BE_DEPRECATED_MACCATALYST = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACCATALYST 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACCATALYST() {
        return __API_TO_BE_DEPRECATED_MACCATALYST;
    }

    private static final int __API_TO_BE_DEPRECATED_WATCHOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_WATCHOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_WATCHOS() {
        return __API_TO_BE_DEPRECATED_WATCHOS;
    }

    private static final int __API_TO_BE_DEPRECATED_TVOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_TVOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_TVOS() {
        return __API_TO_BE_DEPRECATED_TVOS;
    }

    private static final int __API_TO_BE_DEPRECATED_DRIVERKIT = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_DRIVERKIT 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_DRIVERKIT() {
        return __API_TO_BE_DEPRECATED_DRIVERKIT;
    }

    private static final int __API_TO_BE_DEPRECATED_VISIONOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_VISIONOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_VISIONOS() {
        return __API_TO_BE_DEPRECATED_VISIONOS;
    }

    private static final int __MAC_10_0 = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_0 1000
     * }
     */
    public static int __MAC_10_0() {
        return __MAC_10_0;
    }

    private static final int __MAC_10_1 = (int) 1010L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_1 1010
     * }
     */
    public static int __MAC_10_1() {
        return __MAC_10_1;
    }

    private static final int __MAC_10_2 = (int) 1020L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_2 1020
     * }
     */
    public static int __MAC_10_2() {
        return __MAC_10_2;
    }

    private static final int __MAC_10_3 = (int) 1030L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_3 1030
     * }
     */
    public static int __MAC_10_3() {
        return __MAC_10_3;
    }

    private static final int __MAC_10_4 = (int) 1040L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_4 1040
     * }
     */
    public static int __MAC_10_4() {
        return __MAC_10_4;
    }

    private static final int __MAC_10_5 = (int) 1050L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_5 1050
     * }
     */
    public static int __MAC_10_5() {
        return __MAC_10_5;
    }

    private static final int __MAC_10_6 = (int) 1060L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_6 1060
     * }
     */
    public static int __MAC_10_6() {
        return __MAC_10_6;
    }

    private static final int __MAC_10_7 = (int) 1070L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_7 1070
     * }
     */
    public static int __MAC_10_7() {
        return __MAC_10_7;
    }

    private static final int __MAC_10_8 = (int) 1080L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_8 1080
     * }
     */
    public static int __MAC_10_8() {
        return __MAC_10_8;
    }

    private static final int __MAC_10_9 = (int) 1090L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_9 1090
     * }
     */
    public static int __MAC_10_9() {
        return __MAC_10_9;
    }

    private static final int __MAC_10_10 = (int) 101000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10 101000
     * }
     */
    public static int __MAC_10_10() {
        return __MAC_10_10;
    }

    private static final int __MAC_10_10_2 = (int) 101002L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_2 101002
     * }
     */
    public static int __MAC_10_10_2() {
        return __MAC_10_10_2;
    }

    private static final int __MAC_10_10_3 = (int) 101003L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_3 101003
     * }
     */
    public static int __MAC_10_10_3() {
        return __MAC_10_10_3;
    }

    private static final int __MAC_10_11 = (int) 101100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11 101100
     * }
     */
    public static int __MAC_10_11() {
        return __MAC_10_11;
    }

    private static final int __MAC_10_11_2 = (int) 101102L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_2 101102
     * }
     */
    public static int __MAC_10_11_2() {
        return __MAC_10_11_2;
    }

    private static final int __MAC_10_11_3 = (int) 101103L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_3 101103
     * }
     */
    public static int __MAC_10_11_3() {
        return __MAC_10_11_3;
    }

    private static final int __MAC_10_11_4 = (int) 101104L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_4 101104
     * }
     */
    public static int __MAC_10_11_4() {
        return __MAC_10_11_4;
    }

    private static final int __MAC_10_12 = (int) 101200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12 101200
     * }
     */
    public static int __MAC_10_12() {
        return __MAC_10_12;
    }

    private static final int __MAC_10_12_1 = (int) 101201L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_1 101201
     * }
     */
    public static int __MAC_10_12_1() {
        return __MAC_10_12_1;
    }

    private static final int __MAC_10_12_2 = (int) 101202L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_2 101202
     * }
     */
    public static int __MAC_10_12_2() {
        return __MAC_10_12_2;
    }

    private static final int __MAC_10_12_4 = (int) 101204L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_4 101204
     * }
     */
    public static int __MAC_10_12_4() {
        return __MAC_10_12_4;
    }

    private static final int __MAC_10_13 = (int) 101300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13 101300
     * }
     */
    public static int __MAC_10_13() {
        return __MAC_10_13;
    }

    private static final int __MAC_10_13_1 = (int) 101301L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_1 101301
     * }
     */
    public static int __MAC_10_13_1() {
        return __MAC_10_13_1;
    }

    private static final int __MAC_10_13_2 = (int) 101302L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_2 101302
     * }
     */
    public static int __MAC_10_13_2() {
        return __MAC_10_13_2;
    }

    private static final int __MAC_10_13_4 = (int) 101304L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_4 101304
     * }
     */
    public static int __MAC_10_13_4() {
        return __MAC_10_13_4;
    }

    private static final int __MAC_10_14 = (int) 101400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14 101400
     * }
     */
    public static int __MAC_10_14() {
        return __MAC_10_14;
    }

    private static final int __MAC_10_14_1 = (int) 101401L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_1 101401
     * }
     */
    public static int __MAC_10_14_1() {
        return __MAC_10_14_1;
    }

    private static final int __MAC_10_14_4 = (int) 101404L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_4 101404
     * }
     */
    public static int __MAC_10_14_4() {
        return __MAC_10_14_4;
    }

    private static final int __MAC_10_14_5 = (int) 101405L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_5 101405
     * }
     */
    public static int __MAC_10_14_5() {
        return __MAC_10_14_5;
    }

    private static final int __MAC_10_14_6 = (int) 101406L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_6 101406
     * }
     */
    public static int __MAC_10_14_6() {
        return __MAC_10_14_6;
    }

    private static final int __MAC_10_15 = (int) 101500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15 101500
     * }
     */
    public static int __MAC_10_15() {
        return __MAC_10_15;
    }

    private static final int __MAC_10_15_1 = (int) 101501L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_1 101501
     * }
     */
    public static int __MAC_10_15_1() {
        return __MAC_10_15_1;
    }

    private static final int __MAC_10_15_4 = (int) 101504L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_4 101504
     * }
     */
    public static int __MAC_10_15_4() {
        return __MAC_10_15_4;
    }

    private static final int __MAC_10_16 = (int) 101600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_16 101600
     * }
     */
    public static int __MAC_10_16() {
        return __MAC_10_16;
    }

    private static final int __MAC_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_0 110000
     * }
     */
    public static int __MAC_11_0() {
        return __MAC_11_0;
    }

    private static final int __MAC_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_1 110100
     * }
     */
    public static int __MAC_11_1() {
        return __MAC_11_1;
    }

    private static final int __MAC_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_3 110300
     * }
     */
    public static int __MAC_11_3() {
        return __MAC_11_3;
    }

    private static final int __MAC_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_4 110400
     * }
     */
    public static int __MAC_11_4() {
        return __MAC_11_4;
    }

    private static final int __MAC_11_5 = (int) 110500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_5 110500
     * }
     */
    public static int __MAC_11_5() {
        return __MAC_11_5;
    }

    private static final int __MAC_11_6 = (int) 110600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_6 110600
     * }
     */
    public static int __MAC_11_6() {
        return __MAC_11_6;
    }

    private static final int __MAC_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_0 120000
     * }
     */
    public static int __MAC_12_0() {
        return __MAC_12_0;
    }

    private static final int __MAC_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_1 120100
     * }
     */
    public static int __MAC_12_1() {
        return __MAC_12_1;
    }

    private static final int __MAC_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_2 120200
     * }
     */
    public static int __MAC_12_2() {
        return __MAC_12_2;
    }

    private static final int __MAC_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_3 120300
     * }
     */
    public static int __MAC_12_3() {
        return __MAC_12_3;
    }

    private static final int __MAC_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_4 120400
     * }
     */
    public static int __MAC_12_4() {
        return __MAC_12_4;
    }

    private static final int __MAC_12_5 = (int) 120500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_5 120500
     * }
     */
    public static int __MAC_12_5() {
        return __MAC_12_5;
    }

    private static final int __MAC_12_6 = (int) 120600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_6 120600
     * }
     */
    public static int __MAC_12_6() {
        return __MAC_12_6;
    }

    private static final int __MAC_12_7 = (int) 120700L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_7 120700
     * }
     */
    public static int __MAC_12_7() {
        return __MAC_12_7;
    }

    private static final int __MAC_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_0 130000
     * }
     */
    public static int __MAC_13_0() {
        return __MAC_13_0;
    }

    private static final int __MAC_13_1 = (int) 130100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_1 130100
     * }
     */
    public static int __MAC_13_1() {
        return __MAC_13_1;
    }

    private static final int __MAC_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_2 130200
     * }
     */
    public static int __MAC_13_2() {
        return __MAC_13_2;
    }

    private static final int __MAC_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_3 130300
     * }
     */
    public static int __MAC_13_3() {
        return __MAC_13_3;
    }

    private static final int __MAC_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_4 130400
     * }
     */
    public static int __MAC_13_4() {
        return __MAC_13_4;
    }

    private static final int __MAC_13_5 = (int) 130500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_5 130500
     * }
     */
    public static int __MAC_13_5() {
        return __MAC_13_5;
    }

    private static final int __MAC_13_6 = (int) 130600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_6 130600
     * }
     */
    public static int __MAC_13_6() {
        return __MAC_13_6;
    }

    private static final int __MAC_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_0 140000
     * }
     */
    public static int __MAC_14_0() {
        return __MAC_14_0;
    }

    private static final int __MAC_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_1 140100
     * }
     */
    public static int __MAC_14_1() {
        return __MAC_14_1;
    }

    private static final int __MAC_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_2 140200
     * }
     */
    public static int __MAC_14_2() {
        return __MAC_14_2;
    }

    private static final int __MAC_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_3 140300
     * }
     */
    public static int __MAC_14_3() {
        return __MAC_14_3;
    }

    private static final int __MAC_14_4 = (int) 140400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_4 140400
     * }
     */
    public static int __MAC_14_4() {
        return __MAC_14_4;
    }

    private static final int __IPHONE_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_0 20000
     * }
     */
    public static int __IPHONE_2_0() {
        return __IPHONE_2_0;
    }

    private static final int __IPHONE_2_1 = (int) 20100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_1 20100
     * }
     */
    public static int __IPHONE_2_1() {
        return __IPHONE_2_1;
    }

    private static final int __IPHONE_2_2 = (int) 20200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_2 20200
     * }
     */
    public static int __IPHONE_2_2() {
        return __IPHONE_2_2;
    }

    private static final int __IPHONE_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_0 30000
     * }
     */
    public static int __IPHONE_3_0() {
        return __IPHONE_3_0;
    }

    private static final int __IPHONE_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_1 30100
     * }
     */
    public static int __IPHONE_3_1() {
        return __IPHONE_3_1;
    }

    private static final int __IPHONE_3_2 = (int) 30200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_2 30200
     * }
     */
    public static int __IPHONE_3_2() {
        return __IPHONE_3_2;
    }

    private static final int __IPHONE_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_0 40000
     * }
     */
    public static int __IPHONE_4_0() {
        return __IPHONE_4_0;
    }

    private static final int __IPHONE_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_1 40100
     * }
     */
    public static int __IPHONE_4_1() {
        return __IPHONE_4_1;
    }

    private static final int __IPHONE_4_2 = (int) 40200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_2 40200
     * }
     */
    public static int __IPHONE_4_2() {
        return __IPHONE_4_2;
    }

    private static final int __IPHONE_4_3 = (int) 40300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_3 40300
     * }
     */
    public static int __IPHONE_4_3() {
        return __IPHONE_4_3;
    }

    private static final int __IPHONE_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_0 50000
     * }
     */
    public static int __IPHONE_5_0() {
        return __IPHONE_5_0;
    }

    private static final int __IPHONE_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_1 50100
     * }
     */
    public static int __IPHONE_5_1() {
        return __IPHONE_5_1;
    }

    private static final int __IPHONE_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_0 60000
     * }
     */
    public static int __IPHONE_6_0() {
        return __IPHONE_6_0;
    }

    private static final int __IPHONE_6_1 = (int) 60100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_1 60100
     * }
     */
    public static int __IPHONE_6_1() {
        return __IPHONE_6_1;
    }

    private static final int __IPHONE_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_0 70000
     * }
     */
    public static int __IPHONE_7_0() {
        return __IPHONE_7_0;
    }

    private static final int __IPHONE_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_1 70100
     * }
     */
    public static int __IPHONE_7_1() {
        return __IPHONE_7_1;
    }

    private static final int __IPHONE_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_0 80000
     * }
     */
    public static int __IPHONE_8_0() {
        return __IPHONE_8_0;
    }

    private static final int __IPHONE_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_1 80100
     * }
     */
    public static int __IPHONE_8_1() {
        return __IPHONE_8_1;
    }

    private static final int __IPHONE_8_2 = (int) 80200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_2 80200
     * }
     */
    public static int __IPHONE_8_2() {
        return __IPHONE_8_2;
    }

    private static final int __IPHONE_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_3 80300
     * }
     */
    public static int __IPHONE_8_3() {
        return __IPHONE_8_3;
    }

    private static final int __IPHONE_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_4 80400
     * }
     */
    public static int __IPHONE_8_4() {
        return __IPHONE_8_4;
    }

    private static final int __IPHONE_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_0 90000
     * }
     */
    public static int __IPHONE_9_0() {
        return __IPHONE_9_0;
    }

    private static final int __IPHONE_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_1 90100
     * }
     */
    public static int __IPHONE_9_1() {
        return __IPHONE_9_1;
    }

    private static final int __IPHONE_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_2 90200
     * }
     */
    public static int __IPHONE_9_2() {
        return __IPHONE_9_2;
    }

    private static final int __IPHONE_9_3 = (int) 90300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_3 90300
     * }
     */
    public static int __IPHONE_9_3() {
        return __IPHONE_9_3;
    }

    private static final int __IPHONE_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_0 100000
     * }
     */
    public static int __IPHONE_10_0() {
        return __IPHONE_10_0;
    }

    private static final int __IPHONE_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_1 100100
     * }
     */
    public static int __IPHONE_10_1() {
        return __IPHONE_10_1;
    }

    private static final int __IPHONE_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_2 100200
     * }
     */
    public static int __IPHONE_10_2() {
        return __IPHONE_10_2;
    }

    private static final int __IPHONE_10_3 = (int) 100300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_3 100300
     * }
     */
    public static int __IPHONE_10_3() {
        return __IPHONE_10_3;
    }

    private static final int __IPHONE_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_0 110000
     * }
     */
    public static int __IPHONE_11_0() {
        return __IPHONE_11_0;
    }

    private static final int __IPHONE_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_1 110100
     * }
     */
    public static int __IPHONE_11_1() {
        return __IPHONE_11_1;
    }

    private static final int __IPHONE_11_2 = (int) 110200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_2 110200
     * }
     */
    public static int __IPHONE_11_2() {
        return __IPHONE_11_2;
    }

    private static final int __IPHONE_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_3 110300
     * }
     */
    public static int __IPHONE_11_3() {
        return __IPHONE_11_3;
    }

    private static final int __IPHONE_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_4 110400
     * }
     */
    public static int __IPHONE_11_4() {
        return __IPHONE_11_4;
    }

    private static final int __IPHONE_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_0 120000
     * }
     */
    public static int __IPHONE_12_0() {
        return __IPHONE_12_0;
    }

    private static final int __IPHONE_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_1 120100
     * }
     */
    public static int __IPHONE_12_1() {
        return __IPHONE_12_1;
    }

    private static final int __IPHONE_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_2 120200
     * }
     */
    public static int __IPHONE_12_2() {
        return __IPHONE_12_2;
    }

    private static final int __IPHONE_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_3 120300
     * }
     */
    public static int __IPHONE_12_3() {
        return __IPHONE_12_3;
    }

    private static final int __IPHONE_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_4 120400
     * }
     */
    public static int __IPHONE_12_4() {
        return __IPHONE_12_4;
    }

    private static final int __IPHONE_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_0 130000
     * }
     */
    public static int __IPHONE_13_0() {
        return __IPHONE_13_0;
    }

    private static final int __IPHONE_13_1 = (int) 130100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_1 130100
     * }
     */
    public static int __IPHONE_13_1() {
        return __IPHONE_13_1;
    }

    private static final int __IPHONE_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_2 130200
     * }
     */
    public static int __IPHONE_13_2() {
        return __IPHONE_13_2;
    }

    private static final int __IPHONE_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_3 130300
     * }
     */
    public static int __IPHONE_13_3() {
        return __IPHONE_13_3;
    }

    private static final int __IPHONE_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_4 130400
     * }
     */
    public static int __IPHONE_13_4() {
        return __IPHONE_13_4;
    }

    private static final int __IPHONE_13_5 = (int) 130500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_5 130500
     * }
     */
    public static int __IPHONE_13_5() {
        return __IPHONE_13_5;
    }

    private static final int __IPHONE_13_6 = (int) 130600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_6 130600
     * }
     */
    public static int __IPHONE_13_6() {
        return __IPHONE_13_6;
    }

    private static final int __IPHONE_13_7 = (int) 130700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_7 130700
     * }
     */
    public static int __IPHONE_13_7() {
        return __IPHONE_13_7;
    }

    private static final int __IPHONE_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_0 140000
     * }
     */
    public static int __IPHONE_14_0() {
        return __IPHONE_14_0;
    }

    private static final int __IPHONE_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_1 140100
     * }
     */
    public static int __IPHONE_14_1() {
        return __IPHONE_14_1;
    }

    private static final int __IPHONE_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_2 140200
     * }
     */
    public static int __IPHONE_14_2() {
        return __IPHONE_14_2;
    }

    private static final int __IPHONE_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_3 140300
     * }
     */
    public static int __IPHONE_14_3() {
        return __IPHONE_14_3;
    }

    private static final int __IPHONE_14_5 = (int) 140500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_5 140500
     * }
     */
    public static int __IPHONE_14_5() {
        return __IPHONE_14_5;
    }

    private static final int __IPHONE_14_4 = (int) 140400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_4 140400
     * }
     */
    public static int __IPHONE_14_4() {
        return __IPHONE_14_4;
    }

    private static final int __IPHONE_14_6 = (int) 140600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_6 140600
     * }
     */
    public static int __IPHONE_14_6() {
        return __IPHONE_14_6;
    }

    private static final int __IPHONE_14_7 = (int) 140700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_7 140700
     * }
     */
    public static int __IPHONE_14_7() {
        return __IPHONE_14_7;
    }

    private static final int __IPHONE_14_8 = (int) 140800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_8 140800
     * }
     */
    public static int __IPHONE_14_8() {
        return __IPHONE_14_8;
    }

    private static final int __IPHONE_15_0 = (int) 150000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_0 150000
     * }
     */
    public static int __IPHONE_15_0() {
        return __IPHONE_15_0;
    }

    private static final int __IPHONE_15_1 = (int) 150100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_1 150100
     * }
     */
    public static int __IPHONE_15_1() {
        return __IPHONE_15_1;
    }

    private static final int __IPHONE_15_2 = (int) 150200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_2 150200
     * }
     */
    public static int __IPHONE_15_2() {
        return __IPHONE_15_2;
    }

    private static final int __IPHONE_15_3 = (int) 150300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_3 150300
     * }
     */
    public static int __IPHONE_15_3() {
        return __IPHONE_15_3;
    }

    private static final int __IPHONE_15_4 = (int) 150400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_4 150400
     * }
     */
    public static int __IPHONE_15_4() {
        return __IPHONE_15_4;
    }

    private static final int __IPHONE_15_5 = (int) 150500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_5 150500
     * }
     */
    public static int __IPHONE_15_5() {
        return __IPHONE_15_5;
    }

    private static final int __IPHONE_15_6 = (int) 150600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_6 150600
     * }
     */
    public static int __IPHONE_15_6() {
        return __IPHONE_15_6;
    }

    private static final int __IPHONE_15_7 = (int) 150700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_7 150700
     * }
     */
    public static int __IPHONE_15_7() {
        return __IPHONE_15_7;
    }

    private static final int __IPHONE_15_8 = (int) 150800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_8 150800
     * }
     */
    public static int __IPHONE_15_8() {
        return __IPHONE_15_8;
    }

    private static final int __IPHONE_16_0 = (int) 160000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_0 160000
     * }
     */
    public static int __IPHONE_16_0() {
        return __IPHONE_16_0;
    }

    private static final int __IPHONE_16_1 = (int) 160100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_1 160100
     * }
     */
    public static int __IPHONE_16_1() {
        return __IPHONE_16_1;
    }

    private static final int __IPHONE_16_2 = (int) 160200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_2 160200
     * }
     */
    public static int __IPHONE_16_2() {
        return __IPHONE_16_2;
    }

    private static final int __IPHONE_16_3 = (int) 160300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_3 160300
     * }
     */
    public static int __IPHONE_16_3() {
        return __IPHONE_16_3;
    }

    private static final int __IPHONE_16_4 = (int) 160400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_4 160400
     * }
     */
    public static int __IPHONE_16_4() {
        return __IPHONE_16_4;
    }

    private static final int __IPHONE_16_5 = (int) 160500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_5 160500
     * }
     */
    public static int __IPHONE_16_5() {
        return __IPHONE_16_5;
    }

    private static final int __IPHONE_16_6 = (int) 160600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_6 160600
     * }
     */
    public static int __IPHONE_16_6() {
        return __IPHONE_16_6;
    }

    private static final int __IPHONE_16_7 = (int) 160700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_7 160700
     * }
     */
    public static int __IPHONE_16_7() {
        return __IPHONE_16_7;
    }

    private static final int __IPHONE_17_0 = (int) 170000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_0 170000
     * }
     */
    public static int __IPHONE_17_0() {
        return __IPHONE_17_0;
    }

    private static final int __IPHONE_17_1 = (int) 170100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_1 170100
     * }
     */
    public static int __IPHONE_17_1() {
        return __IPHONE_17_1;
    }

    private static final int __IPHONE_17_2 = (int) 170200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_2 170200
     * }
     */
    public static int __IPHONE_17_2() {
        return __IPHONE_17_2;
    }

    private static final int __IPHONE_17_3 = (int) 170300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_3 170300
     * }
     */
    public static int __IPHONE_17_3() {
        return __IPHONE_17_3;
    }

    private static final int __IPHONE_17_4 = (int) 170400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_4 170400
     * }
     */
    public static int __IPHONE_17_4() {
        return __IPHONE_17_4;
    }

    private static final int __WATCHOS_1_0 = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_1_0 10000
     * }
     */
    public static int __WATCHOS_1_0() {
        return __WATCHOS_1_0;
    }

    private static final int __WATCHOS_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_0 20000
     * }
     */
    public static int __WATCHOS_2_0() {
        return __WATCHOS_2_0;
    }

    private static final int __WATCHOS_2_1 = (int) 20100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_1 20100
     * }
     */
    public static int __WATCHOS_2_1() {
        return __WATCHOS_2_1;
    }

    private static final int __WATCHOS_2_2 = (int) 20200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_2 20200
     * }
     */
    public static int __WATCHOS_2_2() {
        return __WATCHOS_2_2;
    }

    private static final int __WATCHOS_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_0 30000
     * }
     */
    public static int __WATCHOS_3_0() {
        return __WATCHOS_3_0;
    }

    private static final int __WATCHOS_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1 30100
     * }
     */
    public static int __WATCHOS_3_1() {
        return __WATCHOS_3_1;
    }

    private static final int __WATCHOS_3_1_1 = (int) 30101L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1_1 30101
     * }
     */
    public static int __WATCHOS_3_1_1() {
        return __WATCHOS_3_1_1;
    }

    private static final int __WATCHOS_3_2 = (int) 30200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_2 30200
     * }
     */
    public static int __WATCHOS_3_2() {
        return __WATCHOS_3_2;
    }

    private static final int __WATCHOS_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_0 40000
     * }
     */
    public static int __WATCHOS_4_0() {
        return __WATCHOS_4_0;
    }

    private static final int __WATCHOS_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_1 40100
     * }
     */
    public static int __WATCHOS_4_1() {
        return __WATCHOS_4_1;
    }

    private static final int __WATCHOS_4_2 = (int) 40200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_2 40200
     * }
     */
    public static int __WATCHOS_4_2() {
        return __WATCHOS_4_2;
    }

    private static final int __WATCHOS_4_3 = (int) 40300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_3 40300
     * }
     */
    public static int __WATCHOS_4_3() {
        return __WATCHOS_4_3;
    }

    private static final int __WATCHOS_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_0 50000
     * }
     */
    public static int __WATCHOS_5_0() {
        return __WATCHOS_5_0;
    }

    private static final int __WATCHOS_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_1 50100
     * }
     */
    public static int __WATCHOS_5_1() {
        return __WATCHOS_5_1;
    }

    private static final int __WATCHOS_5_2 = (int) 50200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_2 50200
     * }
     */
    public static int __WATCHOS_5_2() {
        return __WATCHOS_5_2;
    }

    private static final int __WATCHOS_5_3 = (int) 50300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_3 50300
     * }
     */
    public static int __WATCHOS_5_3() {
        return __WATCHOS_5_3;
    }

    private static final int __WATCHOS_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_0 60000
     * }
     */
    public static int __WATCHOS_6_0() {
        return __WATCHOS_6_0;
    }

    private static final int __WATCHOS_6_1 = (int) 60100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_1 60100
     * }
     */
    public static int __WATCHOS_6_1() {
        return __WATCHOS_6_1;
    }

    private static final int __WATCHOS_6_2 = (int) 60200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_2 60200
     * }
     */
    public static int __WATCHOS_6_2() {
        return __WATCHOS_6_2;
    }

    private static final int __WATCHOS_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_0 70000
     * }
     */
    public static int __WATCHOS_7_0() {
        return __WATCHOS_7_0;
    }

    private static final int __WATCHOS_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_1 70100
     * }
     */
    public static int __WATCHOS_7_1() {
        return __WATCHOS_7_1;
    }

    private static final int __WATCHOS_7_2 = (int) 70200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_2 70200
     * }
     */
    public static int __WATCHOS_7_2() {
        return __WATCHOS_7_2;
    }

    private static final int __WATCHOS_7_3 = (int) 70300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_3 70300
     * }
     */
    public static int __WATCHOS_7_3() {
        return __WATCHOS_7_3;
    }

    private static final int __WATCHOS_7_4 = (int) 70400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_4 70400
     * }
     */
    public static int __WATCHOS_7_4() {
        return __WATCHOS_7_4;
    }

    private static final int __WATCHOS_7_5 = (int) 70500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_5 70500
     * }
     */
    public static int __WATCHOS_7_5() {
        return __WATCHOS_7_5;
    }

    private static final int __WATCHOS_7_6 = (int) 70600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_6 70600
     * }
     */
    public static int __WATCHOS_7_6() {
        return __WATCHOS_7_6;
    }

    private static final int __WATCHOS_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_0 80000
     * }
     */
    public static int __WATCHOS_8_0() {
        return __WATCHOS_8_0;
    }

    private static final int __WATCHOS_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_1 80100
     * }
     */
    public static int __WATCHOS_8_1() {
        return __WATCHOS_8_1;
    }

    private static final int __WATCHOS_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_3 80300
     * }
     */
    public static int __WATCHOS_8_3() {
        return __WATCHOS_8_3;
    }

    private static final int __WATCHOS_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_4 80400
     * }
     */
    public static int __WATCHOS_8_4() {
        return __WATCHOS_8_4;
    }

    private static final int __WATCHOS_8_5 = (int) 80500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_5 80500
     * }
     */
    public static int __WATCHOS_8_5() {
        return __WATCHOS_8_5;
    }

    private static final int __WATCHOS_8_6 = (int) 80600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_6 80600
     * }
     */
    public static int __WATCHOS_8_6() {
        return __WATCHOS_8_6;
    }

    private static final int __WATCHOS_8_7 = (int) 80700L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_7 80700
     * }
     */
    public static int __WATCHOS_8_7() {
        return __WATCHOS_8_7;
    }

    private static final int __WATCHOS_8_8 = (int) 80800L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_8 80800
     * }
     */
    public static int __WATCHOS_8_8() {
        return __WATCHOS_8_8;
    }

    private static final int __WATCHOS_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_0 90000
     * }
     */
    public static int __WATCHOS_9_0() {
        return __WATCHOS_9_0;
    }

    private static final int __WATCHOS_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_1 90100
     * }
     */
    public static int __WATCHOS_9_1() {
        return __WATCHOS_9_1;
    }

    private static final int __WATCHOS_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_2 90200
     * }
     */
    public static int __WATCHOS_9_2() {
        return __WATCHOS_9_2;
    }

    private static final int __WATCHOS_9_3 = (int) 90300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_3 90300
     * }
     */
    public static int __WATCHOS_9_3() {
        return __WATCHOS_9_3;
    }

    private static final int __WATCHOS_9_4 = (int) 90400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_4 90400
     * }
     */
    public static int __WATCHOS_9_4() {
        return __WATCHOS_9_4;
    }

    private static final int __WATCHOS_9_5 = (int) 90500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_5 90500
     * }
     */
    public static int __WATCHOS_9_5() {
        return __WATCHOS_9_5;
    }

    private static final int __WATCHOS_9_6 = (int) 90600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_6 90600
     * }
     */
    public static int __WATCHOS_9_6() {
        return __WATCHOS_9_6;
    }

    private static final int __WATCHOS_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_0 100000
     * }
     */
    public static int __WATCHOS_10_0() {
        return __WATCHOS_10_0;
    }

    private static final int __WATCHOS_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_1 100100
     * }
     */
    public static int __WATCHOS_10_1() {
        return __WATCHOS_10_1;
    }

    private static final int __WATCHOS_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_2 100200
     * }
     */
    public static int __WATCHOS_10_2() {
        return __WATCHOS_10_2;
    }

    private static final int __WATCHOS_10_3 = (int) 100300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_3 100300
     * }
     */
    public static int __WATCHOS_10_3() {
        return __WATCHOS_10_3;
    }

    private static final int __WATCHOS_10_4 = (int) 100400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_4 100400
     * }
     */
    public static int __WATCHOS_10_4() {
        return __WATCHOS_10_4;
    }

    private static final int __TVOS_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_0 90000
     * }
     */
    public static int __TVOS_9_0() {
        return __TVOS_9_0;
    }

    private static final int __TVOS_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_1 90100
     * }
     */
    public static int __TVOS_9_1() {
        return __TVOS_9_1;
    }

    private static final int __TVOS_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_2 90200
     * }
     */
    public static int __TVOS_9_2() {
        return __TVOS_9_2;
    }

    private static final int __TVOS_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0 100000
     * }
     */
    public static int __TVOS_10_0() {
        return __TVOS_10_0;
    }

    private static final int __TVOS_10_0_1 = (int) 100001L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0_1 100001
     * }
     */
    public static int __TVOS_10_0_1() {
        return __TVOS_10_0_1;
    }

    private static final int __TVOS_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_1 100100
     * }
     */
    public static int __TVOS_10_1() {
        return __TVOS_10_1;
    }

    private static final int __TVOS_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_2 100200
     * }
     */
    public static int __TVOS_10_2() {
        return __TVOS_10_2;
    }

    private static final int __TVOS_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_0 110000
     * }
     */
    public static int __TVOS_11_0() {
        return __TVOS_11_0;
    }

    private static final int __TVOS_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_1 110100
     * }
     */
    public static int __TVOS_11_1() {
        return __TVOS_11_1;
    }

    private static final int __TVOS_11_2 = (int) 110200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_2 110200
     * }
     */
    public static int __TVOS_11_2() {
        return __TVOS_11_2;
    }

    private static final int __TVOS_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_3 110300
     * }
     */
    public static int __TVOS_11_3() {
        return __TVOS_11_3;
    }

    private static final int __TVOS_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_4 110400
     * }
     */
    public static int __TVOS_11_4() {
        return __TVOS_11_4;
    }

    private static final int __TVOS_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_0 120000
     * }
     */
    public static int __TVOS_12_0() {
        return __TVOS_12_0;
    }

    private static final int __TVOS_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_1 120100
     * }
     */
    public static int __TVOS_12_1() {
        return __TVOS_12_1;
    }

    private static final int __TVOS_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_2 120200
     * }
     */
    public static int __TVOS_12_2() {
        return __TVOS_12_2;
    }

    private static final int __TVOS_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_3 120300
     * }
     */
    public static int __TVOS_12_3() {
        return __TVOS_12_3;
    }

    private static final int __TVOS_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_4 120400
     * }
     */
    public static int __TVOS_12_4() {
        return __TVOS_12_4;
    }

    private static final int __TVOS_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_0 130000
     * }
     */
    public static int __TVOS_13_0() {
        return __TVOS_13_0;
    }

    private static final int __TVOS_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_2 130200
     * }
     */
    public static int __TVOS_13_2() {
        return __TVOS_13_2;
    }

    private static final int __TVOS_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_3 130300
     * }
     */
    public static int __TVOS_13_3() {
        return __TVOS_13_3;
    }

    private static final int __TVOS_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_4 130400
     * }
     */
    public static int __TVOS_13_4() {
        return __TVOS_13_4;
    }

    private static final int __TVOS_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_0 140000
     * }
     */
    public static int __TVOS_14_0() {
        return __TVOS_14_0;
    }

    private static final int __TVOS_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_1 140100
     * }
     */
    public static int __TVOS_14_1() {
        return __TVOS_14_1;
    }

    private static final int __TVOS_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_2 140200
     * }
     */
    public static int __TVOS_14_2() {
        return __TVOS_14_2;
    }

    private static final int __TVOS_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_3 140300
     * }
     */
    public static int __TVOS_14_3() {
        return __TVOS_14_3;
    }

    private static final int __TVOS_14_5 = (int) 140500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_5 140500
     * }
     */
    public static int __TVOS_14_5() {
        return __TVOS_14_5;
    }

    private static final int __TVOS_14_6 = (int) 140600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_6 140600
     * }
     */
    public static int __TVOS_14_6() {
        return __TVOS_14_6;
    }

    private static final int __TVOS_14_7 = (int) 140700L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_7 140700
     * }
     */
    public static int __TVOS_14_7() {
        return __TVOS_14_7;
    }

    private static final int __TVOS_15_0 = (int) 150000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_0 150000
     * }
     */
    public static int __TVOS_15_0() {
        return __TVOS_15_0;
    }

    private static final int __TVOS_15_1 = (int) 150100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_1 150100
     * }
     */
    public static int __TVOS_15_1() {
        return __TVOS_15_1;
    }

    private static final int __TVOS_15_2 = (int) 150200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_2 150200
     * }
     */
    public static int __TVOS_15_2() {
        return __TVOS_15_2;
    }

    private static final int __TVOS_15_3 = (int) 150300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_3 150300
     * }
     */
    public static int __TVOS_15_3() {
        return __TVOS_15_3;
    }

    private static final int __TVOS_15_4 = (int) 150400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_4 150400
     * }
     */
    public static int __TVOS_15_4() {
        return __TVOS_15_4;
    }

    private static final int __TVOS_15_5 = (int) 150500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_5 150500
     * }
     */
    public static int __TVOS_15_5() {
        return __TVOS_15_5;
    }

    private static final int __TVOS_15_6 = (int) 150600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_6 150600
     * }
     */
    public static int __TVOS_15_6() {
        return __TVOS_15_6;
    }

    private static final int __TVOS_16_0 = (int) 160000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_0 160000
     * }
     */
    public static int __TVOS_16_0() {
        return __TVOS_16_0;
    }

    private static final int __TVOS_16_1 = (int) 160100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_1 160100
     * }
     */
    public static int __TVOS_16_1() {
        return __TVOS_16_1;
    }

    private static final int __TVOS_16_2 = (int) 160200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_2 160200
     * }
     */
    public static int __TVOS_16_2() {
        return __TVOS_16_2;
    }

    private static final int __TVOS_16_3 = (int) 160300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_3 160300
     * }
     */
    public static int __TVOS_16_3() {
        return __TVOS_16_3;
    }

    private static final int __TVOS_16_4 = (int) 160400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_4 160400
     * }
     */
    public static int __TVOS_16_4() {
        return __TVOS_16_4;
    }

    private static final int __TVOS_16_5 = (int) 160500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_5 160500
     * }
     */
    public static int __TVOS_16_5() {
        return __TVOS_16_5;
    }

    private static final int __TVOS_16_6 = (int) 160600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_6 160600
     * }
     */
    public static int __TVOS_16_6() {
        return __TVOS_16_6;
    }

    private static final int __TVOS_17_0 = (int) 170000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_0 170000
     * }
     */
    public static int __TVOS_17_0() {
        return __TVOS_17_0;
    }

    private static final int __TVOS_17_1 = (int) 170100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_1 170100
     * }
     */
    public static int __TVOS_17_1() {
        return __TVOS_17_1;
    }

    private static final int __TVOS_17_2 = (int) 170200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_2 170200
     * }
     */
    public static int __TVOS_17_2() {
        return __TVOS_17_2;
    }

    private static final int __TVOS_17_3 = (int) 170300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_3 170300
     * }
     */
    public static int __TVOS_17_3() {
        return __TVOS_17_3;
    }

    private static final int __TVOS_17_4 = (int) 170400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_4 170400
     * }
     */
    public static int __TVOS_17_4() {
        return __TVOS_17_4;
    }

    private static final int __BRIDGEOS_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_2_0 20000
     * }
     */
    public static int __BRIDGEOS_2_0() {
        return __BRIDGEOS_2_0;
    }

    private static final int __BRIDGEOS_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_0 30000
     * }
     */
    public static int __BRIDGEOS_3_0() {
        return __BRIDGEOS_3_0;
    }

    private static final int __BRIDGEOS_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_1 30100
     * }
     */
    public static int __BRIDGEOS_3_1() {
        return __BRIDGEOS_3_1;
    }

    private static final int __BRIDGEOS_3_4 = (int) 30400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_4 30400
     * }
     */
    public static int __BRIDGEOS_3_4() {
        return __BRIDGEOS_3_4;
    }

    private static final int __BRIDGEOS_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_0 40000
     * }
     */
    public static int __BRIDGEOS_4_0() {
        return __BRIDGEOS_4_0;
    }

    private static final int __BRIDGEOS_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_1 40100
     * }
     */
    public static int __BRIDGEOS_4_1() {
        return __BRIDGEOS_4_1;
    }

    private static final int __BRIDGEOS_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_0 50000
     * }
     */
    public static int __BRIDGEOS_5_0() {
        return __BRIDGEOS_5_0;
    }

    private static final int __BRIDGEOS_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_1 50100
     * }
     */
    public static int __BRIDGEOS_5_1() {
        return __BRIDGEOS_5_1;
    }

    private static final int __BRIDGEOS_5_3 = (int) 50300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_3 50300
     * }
     */
    public static int __BRIDGEOS_5_3() {
        return __BRIDGEOS_5_3;
    }

    private static final int __BRIDGEOS_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_0 60000
     * }
     */
    public static int __BRIDGEOS_6_0() {
        return __BRIDGEOS_6_0;
    }

    private static final int __BRIDGEOS_6_2 = (int) 60200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_2 60200
     * }
     */
    public static int __BRIDGEOS_6_2() {
        return __BRIDGEOS_6_2;
    }

    private static final int __BRIDGEOS_6_4 = (int) 60400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_4 60400
     * }
     */
    public static int __BRIDGEOS_6_4() {
        return __BRIDGEOS_6_4;
    }

    private static final int __BRIDGEOS_6_5 = (int) 60500L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_5 60500
     * }
     */
    public static int __BRIDGEOS_6_5() {
        return __BRIDGEOS_6_5;
    }

    private static final int __BRIDGEOS_6_6 = (int) 60600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_6 60600
     * }
     */
    public static int __BRIDGEOS_6_6() {
        return __BRIDGEOS_6_6;
    }

    private static final int __BRIDGEOS_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_0 70000
     * }
     */
    public static int __BRIDGEOS_7_0() {
        return __BRIDGEOS_7_0;
    }

    private static final int __BRIDGEOS_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_1 70100
     * }
     */
    public static int __BRIDGEOS_7_1() {
        return __BRIDGEOS_7_1;
    }

    private static final int __BRIDGEOS_7_2 = (int) 70200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_2 70200
     * }
     */
    public static int __BRIDGEOS_7_2() {
        return __BRIDGEOS_7_2;
    }

    private static final int __BRIDGEOS_7_3 = (int) 70300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_3 70300
     * }
     */
    public static int __BRIDGEOS_7_3() {
        return __BRIDGEOS_7_3;
    }

    private static final int __BRIDGEOS_7_4 = (int) 70400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_4 70400
     * }
     */
    public static int __BRIDGEOS_7_4() {
        return __BRIDGEOS_7_4;
    }

    private static final int __BRIDGEOS_7_6 = (int) 70600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_6 70600
     * }
     */
    public static int __BRIDGEOS_7_6() {
        return __BRIDGEOS_7_6;
    }

    private static final int __BRIDGEOS_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_0 80000
     * }
     */
    public static int __BRIDGEOS_8_0() {
        return __BRIDGEOS_8_0;
    }

    private static final int __BRIDGEOS_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_1 80100
     * }
     */
    public static int __BRIDGEOS_8_1() {
        return __BRIDGEOS_8_1;
    }

    private static final int __BRIDGEOS_8_2 = (int) 80200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_2 80200
     * }
     */
    public static int __BRIDGEOS_8_2() {
        return __BRIDGEOS_8_2;
    }

    private static final int __BRIDGEOS_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_3 80300
     * }
     */
    public static int __BRIDGEOS_8_3() {
        return __BRIDGEOS_8_3;
    }

    private static final int __BRIDGEOS_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_4 80400
     * }
     */
    public static int __BRIDGEOS_8_4() {
        return __BRIDGEOS_8_4;
    }

    private static final int __DRIVERKIT_19_0 = (int) 190000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_19_0 190000
     * }
     */
    public static int __DRIVERKIT_19_0() {
        return __DRIVERKIT_19_0;
    }

    private static final int __DRIVERKIT_20_0 = (int) 200000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_20_0 200000
     * }
     */
    public static int __DRIVERKIT_20_0() {
        return __DRIVERKIT_20_0;
    }

    private static final int __DRIVERKIT_21_0 = (int) 210000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_21_0 210000
     * }
     */
    public static int __DRIVERKIT_21_0() {
        return __DRIVERKIT_21_0;
    }

    private static final int __DRIVERKIT_22_0 = (int) 220000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_0 220000
     * }
     */
    public static int __DRIVERKIT_22_0() {
        return __DRIVERKIT_22_0;
    }

    private static final int __DRIVERKIT_22_4 = (int) 220400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_4 220400
     * }
     */
    public static int __DRIVERKIT_22_4() {
        return __DRIVERKIT_22_4;
    }

    private static final int __DRIVERKIT_22_5 = (int) 220500L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_5 220500
     * }
     */
    public static int __DRIVERKIT_22_5() {
        return __DRIVERKIT_22_5;
    }

    private static final int __DRIVERKIT_22_6 = (int) 220600L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_6 220600
     * }
     */
    public static int __DRIVERKIT_22_6() {
        return __DRIVERKIT_22_6;
    }

    private static final int __DRIVERKIT_23_0 = (int) 230000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_0 230000
     * }
     */
    public static int __DRIVERKIT_23_0() {
        return __DRIVERKIT_23_0;
    }

    private static final int __DRIVERKIT_23_1 = (int) 230100L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_1 230100
     * }
     */
    public static int __DRIVERKIT_23_1() {
        return __DRIVERKIT_23_1;
    }

    private static final int __DRIVERKIT_23_2 = (int) 230200L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_2 230200
     * }
     */
    public static int __DRIVERKIT_23_2() {
        return __DRIVERKIT_23_2;
    }

    private static final int __DRIVERKIT_23_3 = (int) 230300L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_3 230300
     * }
     */
    public static int __DRIVERKIT_23_3() {
        return __DRIVERKIT_23_3;
    }

    private static final int __DRIVERKIT_23_4 = (int) 230400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_4 230400
     * }
     */
    public static int __DRIVERKIT_23_4() {
        return __DRIVERKIT_23_4;
    }

    private static final int __VISIONOS_1_0 = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_0 10000
     * }
     */
    public static int __VISIONOS_1_0() {
        return __VISIONOS_1_0;
    }

    private static final int __VISIONOS_1_1 = (int) 10100L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_1 10100
     * }
     */
    public static int __VISIONOS_1_1() {
        return __VISIONOS_1_1;
    }

    private static final int __ENABLE_LEGACY_MAC_AVAILABILITY = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __ENABLE_LEGACY_MAC_AVAILABILITY 1
     * }
     */
    public static int __ENABLE_LEGACY_MAC_AVAILABILITY() {
        return __ENABLE_LEGACY_MAC_AVAILABILITY;
    }

    private static final int __DARWIN_FD_SETSIZE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_FD_SETSIZE 1024
     * }
     */
    public static int __DARWIN_FD_SETSIZE() {
        return __DARWIN_FD_SETSIZE;
    }

    private static final int __DARWIN_NBBY = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NBBY 8
     * }
     */
    public static int __DARWIN_NBBY() {
        return __DARWIN_NBBY;
    }

    private static final int ITIMER_REAL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_REAL 0
     * }
     */
    public static int ITIMER_REAL() {
        return ITIMER_REAL;
    }

    private static final int ITIMER_VIRTUAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_VIRTUAL 1
     * }
     */
    public static int ITIMER_VIRTUAL() {
        return ITIMER_VIRTUAL;
    }

    private static final int ITIMER_PROF = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_PROF 2
     * }
     */
    public static int ITIMER_PROF() {
        return ITIMER_PROF;
    }

    private static final int DST_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define DST_NONE 0
     * }
     */
    public static int DST_NONE() {
        return DST_NONE;
    }

    private static final int DST_USA = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define DST_USA 1
     * }
     */
    public static int DST_USA() {
        return DST_USA;
    }

    private static final int DST_AUST = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define DST_AUST 2
     * }
     */
    public static int DST_AUST() {
        return DST_AUST;
    }

    private static final int DST_WET = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define DST_WET 3
     * }
     */
    public static int DST_WET() {
        return DST_WET;
    }

    private static final int DST_MET = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define DST_MET 4
     * }
     */
    public static int DST_MET() {
        return DST_MET;
    }

    private static final int DST_EET = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define DST_EET 5
     * }
     */
    public static int DST_EET() {
        return DST_EET;
    }

    private static final int DST_CAN = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define DST_CAN 6
     * }
     */
    public static int DST_CAN() {
        return DST_CAN;
    }

    private static final int _FORTIFY_SOURCE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _FORTIFY_SOURCE 2
     * }
     */
    public static int _FORTIFY_SOURCE() {
        return _FORTIFY_SOURCE;
    }

    private static final int TIME_UTC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TIME_UTC 1
     * }
     */
    public static int TIME_UTC() {
        return TIME_UTC;
    }

    private static final int BSD = (int) 199506L;
    /**
     * {@snippet lang=c :
     * #define BSD 199506
     * }
     */
    public static int BSD() {
        return BSD;
    }

    private static final int BSD4_3 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BSD4_3 1
     * }
     */
    public static int BSD4_3() {
        return BSD4_3;
    }

    private static final int BSD4_4 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BSD4_4 1
     * }
     */
    public static int BSD4_4() {
        return BSD4_4;
    }

    private static final int NeXTBSD = (int) 1995064L;
    /**
     * {@snippet lang=c :
     * #define NeXTBSD 1995064
     * }
     */
    public static int NeXTBSD() {
        return NeXTBSD;
    }

    private static final int NeXTBSD4_0 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define NeXTBSD4_0 0
     * }
     */
    public static int NeXTBSD4_0() {
        return NeXTBSD4_0;
    }

    private static final int _QUAD_HIGHWORD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_HIGHWORD 1
     * }
     */
    public static int _QUAD_HIGHWORD() {
        return _QUAD_HIGHWORD;
    }

    private static final int _QUAD_LOWWORD = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_LOWWORD 0
     * }
     */
    public static int _QUAD_LOWWORD() {
        return _QUAD_LOWWORD;
    }

    private static final int __DARWIN_LITTLE_ENDIAN = (int) 1234L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_LITTLE_ENDIAN 1234
     * }
     */
    public static int __DARWIN_LITTLE_ENDIAN() {
        return __DARWIN_LITTLE_ENDIAN;
    }

    private static final int __DARWIN_BIG_ENDIAN = (int) 4321L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_BIG_ENDIAN 4321
     * }
     */
    public static int __DARWIN_BIG_ENDIAN() {
        return __DARWIN_BIG_ENDIAN;
    }

    private static final int __DARWIN_PDP_ENDIAN = (int) 3412L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_PDP_ENDIAN 3412
     * }
     */
    public static int __DARWIN_PDP_ENDIAN() {
        return __DARWIN_PDP_ENDIAN;
    }

    private static final int __WORDSIZE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return __WORDSIZE;
    }

    private static final int INT8_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define INT8_MAX 127
     * }
     */
    public static int INT8_MAX() {
        return INT8_MAX;
    }

    private static final int INT16_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define INT16_MAX 32767
     * }
     */
    public static int INT16_MAX() {
        return INT16_MAX;
    }

    private static final int INT32_MAX = (int) 2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return INT32_MAX;
    }

    private static final int UINT8_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define UINT8_MAX 255
     * }
     */
    public static int UINT8_MAX() {
        return UINT8_MAX;
    }

    private static final int UINT16_MAX = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define UINT16_MAX 65535
     * }
     */
    public static int UINT16_MAX() {
        return UINT16_MAX;
    }

    private static final int CHILD_MAX = (int) 266L;
    /**
     * {@snippet lang=c :
     * #define CHILD_MAX 266
     * }
     */
    public static int CHILD_MAX() {
        return CHILD_MAX;
    }

    private static final int LINK_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define LINK_MAX 32767
     * }
     */
    public static int LINK_MAX() {
        return LINK_MAX;
    }

    private static final int MAX_CANON = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MAX_CANON 1024
     * }
     */
    public static int MAX_CANON() {
        return MAX_CANON;
    }

    private static final int MAX_INPUT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MAX_INPUT 1024
     * }
     */
    public static int MAX_INPUT() {
        return MAX_INPUT;
    }

    private static final int NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define NAME_MAX 255
     * }
     */
    public static int NAME_MAX() {
        return NAME_MAX;
    }

    private static final int NGROUPS_MAX = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define NGROUPS_MAX 16
     * }
     */
    public static int NGROUPS_MAX() {
        return NGROUPS_MAX;
    }

    private static final int OPEN_MAX = (int) 10240L;
    /**
     * {@snippet lang=c :
     * #define OPEN_MAX 10240
     * }
     */
    public static int OPEN_MAX() {
        return OPEN_MAX;
    }

    private static final int PATH_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define PATH_MAX 1024
     * }
     */
    public static int PATH_MAX() {
        return PATH_MAX;
    }

    private static final int PIPE_BUF = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PIPE_BUF 512
     * }
     */
    public static int PIPE_BUF() {
        return PIPE_BUF;
    }

    private static final int BC_BASE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define BC_BASE_MAX 99
     * }
     */
    public static int BC_BASE_MAX() {
        return BC_BASE_MAX;
    }

    private static final int BC_DIM_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define BC_DIM_MAX 2048
     * }
     */
    public static int BC_DIM_MAX() {
        return BC_DIM_MAX;
    }

    private static final int BC_SCALE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define BC_SCALE_MAX 99
     * }
     */
    public static int BC_SCALE_MAX() {
        return BC_SCALE_MAX;
    }

    private static final int BC_STRING_MAX = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define BC_STRING_MAX 1000
     * }
     */
    public static int BC_STRING_MAX() {
        return BC_STRING_MAX;
    }

    private static final int CHARCLASS_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define CHARCLASS_NAME_MAX 14
     * }
     */
    public static int CHARCLASS_NAME_MAX() {
        return CHARCLASS_NAME_MAX;
    }

    private static final int COLL_WEIGHTS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define COLL_WEIGHTS_MAX 2
     * }
     */
    public static int COLL_WEIGHTS_MAX() {
        return COLL_WEIGHTS_MAX;
    }

    private static final int EQUIV_CLASS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define EQUIV_CLASS_MAX 2
     * }
     */
    public static int EQUIV_CLASS_MAX() {
        return EQUIV_CLASS_MAX;
    }

    private static final int EXPR_NEST_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define EXPR_NEST_MAX 32
     * }
     */
    public static int EXPR_NEST_MAX() {
        return EXPR_NEST_MAX;
    }

    private static final int LINE_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define LINE_MAX 2048
     * }
     */
    public static int LINE_MAX() {
        return LINE_MAX;
    }

    private static final int RE_DUP_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define RE_DUP_MAX 255
     * }
     */
    public static int RE_DUP_MAX() {
        return RE_DUP_MAX;
    }

    private static final int NZERO = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define NZERO 20
     * }
     */
    public static int NZERO() {
        return NZERO;
    }

    private static final int MAXCOMLEN = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MAXCOMLEN 16
     * }
     */
    public static int MAXCOMLEN() {
        return MAXCOMLEN;
    }

    private static final int MAXINTERP = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MAXINTERP 64
     * }
     */
    public static int MAXINTERP() {
        return MAXINTERP;
    }

    private static final int MAXLOGNAME = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define MAXLOGNAME 255
     * }
     */
    public static int MAXLOGNAME() {
        return MAXLOGNAME;
    }

    private static final int NOFILE = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define NOFILE 256
     * }
     */
    public static int NOFILE() {
        return NOFILE;
    }

    private static final int NOGROUP = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define NOGROUP 65535
     * }
     */
    public static int NOGROUP() {
        return NOGROUP;
    }

    private static final int MAXHOSTNAMELEN = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MAXHOSTNAMELEN 256
     * }
     */
    public static int MAXHOSTNAMELEN() {
        return MAXHOSTNAMELEN;
    }

    private static final int MAXDOMNAMELEN = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MAXDOMNAMELEN 256
     * }
     */
    public static int MAXDOMNAMELEN() {
        return MAXDOMNAMELEN;
    }

    private static final int NBPG = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define NBPG 4096
     * }
     */
    public static int NBPG() {
        return NBPG;
    }

    private static final int PGSHIFT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define PGSHIFT 12
     * }
     */
    public static int PGSHIFT() {
        return PGSHIFT;
    }

    private static final int DEV_BSIZE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define DEV_BSIZE 512
     * }
     */
    public static int DEV_BSIZE() {
        return DEV_BSIZE;
    }

    private static final int DEV_BSHIFT = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define DEV_BSHIFT 9
     * }
     */
    public static int DEV_BSHIFT() {
        return DEV_BSHIFT;
    }

    private static final int BLKDEV_IOSIZE = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define BLKDEV_IOSIZE 2048
     * }
     */
    public static int BLKDEV_IOSIZE() {
        return BLKDEV_IOSIZE;
    }

    private static final int CLSIZE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CLSIZE 1
     * }
     */
    public static int CLSIZE() {
        return CLSIZE;
    }

    private static final int CLSIZELOG2 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CLSIZELOG2 0
     * }
     */
    public static int CLSIZELOG2() {
        return CLSIZELOG2;
    }

    private static final int MSIZESHIFT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MSIZESHIFT 8
     * }
     */
    public static int MSIZESHIFT() {
        return MSIZESHIFT;
    }

    private static final int MCLSHIFT = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define MCLSHIFT 11
     * }
     */
    public static int MCLSHIFT() {
        return MCLSHIFT;
    }

    private static final int MBIGCLSHIFT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define MBIGCLSHIFT 12
     * }
     */
    public static int MBIGCLSHIFT() {
        return MBIGCLSHIFT;
    }

    private static final int M16KCLSHIFT = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define M16KCLSHIFT 14
     * }
     */
    public static int M16KCLSHIFT() {
        return M16KCLSHIFT;
    }

    private static final int __DARWIN_CLK_TCK = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_CLK_TCK 100
     * }
     */
    public static int __DARWIN_CLK_TCK() {
        return __DARWIN_CLK_TCK;
    }

    private static final int MB_LEN_MAX = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define MB_LEN_MAX 6
     * }
     */
    public static int MB_LEN_MAX() {
        return MB_LEN_MAX;
    }

    private static final int CHAR_BIT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CHAR_BIT 8
     * }
     */
    public static int CHAR_BIT() {
        return CHAR_BIT;
    }

    private static final int SCHAR_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define SCHAR_MAX 127
     * }
     */
    public static int SCHAR_MAX() {
        return SCHAR_MAX;
    }

    private static final int UCHAR_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define UCHAR_MAX 255
     * }
     */
    public static int UCHAR_MAX() {
        return UCHAR_MAX;
    }

    private static final int CHAR_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define CHAR_MAX 127
     * }
     */
    public static int CHAR_MAX() {
        return CHAR_MAX;
    }

    private static final int USHRT_MAX = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define USHRT_MAX 65535
     * }
     */
    public static int USHRT_MAX() {
        return USHRT_MAX;
    }

    private static final int SHRT_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define SHRT_MAX 32767
     * }
     */
    public static int SHRT_MAX() {
        return SHRT_MAX;
    }

    private static final int INT_MAX = (int) 2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_MAX 2147483647
     * }
     */
    public static int INT_MAX() {
        return INT_MAX;
    }

    private static final int LONG_BIT = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define LONG_BIT 64
     * }
     */
    public static int LONG_BIT() {
        return LONG_BIT;
    }

    private static final int WORD_BIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define WORD_BIT 32
     * }
     */
    public static int WORD_BIT() {
        return WORD_BIT;
    }

    private static final int _POSIX_ARG_MAX = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_ARG_MAX 4096
     * }
     */
    public static int _POSIX_ARG_MAX() {
        return _POSIX_ARG_MAX;
    }

    private static final int _POSIX_CHILD_MAX = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_CHILD_MAX 25
     * }
     */
    public static int _POSIX_CHILD_MAX() {
        return _POSIX_CHILD_MAX;
    }

    private static final int _POSIX_LINK_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_LINK_MAX 8
     * }
     */
    public static int _POSIX_LINK_MAX() {
        return _POSIX_LINK_MAX;
    }

    private static final int _POSIX_MAX_CANON = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MAX_CANON 255
     * }
     */
    public static int _POSIX_MAX_CANON() {
        return _POSIX_MAX_CANON;
    }

    private static final int _POSIX_MAX_INPUT = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MAX_INPUT 255
     * }
     */
    public static int _POSIX_MAX_INPUT() {
        return _POSIX_MAX_INPUT;
    }

    private static final int _POSIX_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_NAME_MAX 14
     * }
     */
    public static int _POSIX_NAME_MAX() {
        return _POSIX_NAME_MAX;
    }

    private static final int _POSIX_NGROUPS_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_NGROUPS_MAX 8
     * }
     */
    public static int _POSIX_NGROUPS_MAX() {
        return _POSIX_NGROUPS_MAX;
    }

    private static final int _POSIX_OPEN_MAX = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_OPEN_MAX 20
     * }
     */
    public static int _POSIX_OPEN_MAX() {
        return _POSIX_OPEN_MAX;
    }

    private static final int _POSIX_PATH_MAX = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_PATH_MAX 256
     * }
     */
    public static int _POSIX_PATH_MAX() {
        return _POSIX_PATH_MAX;
    }

    private static final int _POSIX_PIPE_BUF = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_PIPE_BUF 512
     * }
     */
    public static int _POSIX_PIPE_BUF() {
        return _POSIX_PIPE_BUF;
    }

    private static final int _POSIX_SSIZE_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SSIZE_MAX 32767
     * }
     */
    public static int _POSIX_SSIZE_MAX() {
        return _POSIX_SSIZE_MAX;
    }

    private static final int _POSIX_STREAM_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_STREAM_MAX 8
     * }
     */
    public static int _POSIX_STREAM_MAX() {
        return _POSIX_STREAM_MAX;
    }

    private static final int _POSIX_TZNAME_MAX = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TZNAME_MAX 6
     * }
     */
    public static int _POSIX_TZNAME_MAX() {
        return _POSIX_TZNAME_MAX;
    }

    private static final int _POSIX2_BC_BASE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_BASE_MAX 99
     * }
     */
    public static int _POSIX2_BC_BASE_MAX() {
        return _POSIX2_BC_BASE_MAX;
    }

    private static final int _POSIX2_BC_DIM_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_DIM_MAX 2048
     * }
     */
    public static int _POSIX2_BC_DIM_MAX() {
        return _POSIX2_BC_DIM_MAX;
    }

    private static final int _POSIX2_BC_SCALE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_SCALE_MAX 99
     * }
     */
    public static int _POSIX2_BC_SCALE_MAX() {
        return _POSIX2_BC_SCALE_MAX;
    }

    private static final int _POSIX2_BC_STRING_MAX = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_STRING_MAX 1000
     * }
     */
    public static int _POSIX2_BC_STRING_MAX() {
        return _POSIX2_BC_STRING_MAX;
    }

    private static final int _POSIX2_EQUIV_CLASS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_EQUIV_CLASS_MAX 2
     * }
     */
    public static int _POSIX2_EQUIV_CLASS_MAX() {
        return _POSIX2_EQUIV_CLASS_MAX;
    }

    private static final int _POSIX2_EXPR_NEST_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_EXPR_NEST_MAX 32
     * }
     */
    public static int _POSIX2_EXPR_NEST_MAX() {
        return _POSIX2_EXPR_NEST_MAX;
    }

    private static final int _POSIX2_LINE_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_LINE_MAX 2048
     * }
     */
    public static int _POSIX2_LINE_MAX() {
        return _POSIX2_LINE_MAX;
    }

    private static final int _POSIX2_RE_DUP_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_RE_DUP_MAX 255
     * }
     */
    public static int _POSIX2_RE_DUP_MAX() {
        return _POSIX2_RE_DUP_MAX;
    }

    private static final int _POSIX_AIO_LISTIO_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_AIO_LISTIO_MAX 2
     * }
     */
    public static int _POSIX_AIO_LISTIO_MAX() {
        return _POSIX_AIO_LISTIO_MAX;
    }

    private static final int _POSIX_AIO_MAX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_AIO_MAX 1
     * }
     */
    public static int _POSIX_AIO_MAX() {
        return _POSIX_AIO_MAX;
    }

    private static final int _POSIX_DELAYTIMER_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_DELAYTIMER_MAX 32
     * }
     */
    public static int _POSIX_DELAYTIMER_MAX() {
        return _POSIX_DELAYTIMER_MAX;
    }

    private static final int _POSIX_MQ_OPEN_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MQ_OPEN_MAX 8
     * }
     */
    public static int _POSIX_MQ_OPEN_MAX() {
        return _POSIX_MQ_OPEN_MAX;
    }

    private static final int _POSIX_MQ_PRIO_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MQ_PRIO_MAX 32
     * }
     */
    public static int _POSIX_MQ_PRIO_MAX() {
        return _POSIX_MQ_PRIO_MAX;
    }

    private static final int _POSIX_RTSIG_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_RTSIG_MAX 8
     * }
     */
    public static int _POSIX_RTSIG_MAX() {
        return _POSIX_RTSIG_MAX;
    }

    private static final int _POSIX_SEM_NSEMS_MAX = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SEM_NSEMS_MAX 256
     * }
     */
    public static int _POSIX_SEM_NSEMS_MAX() {
        return _POSIX_SEM_NSEMS_MAX;
    }

    private static final int _POSIX_SEM_VALUE_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SEM_VALUE_MAX 32767
     * }
     */
    public static int _POSIX_SEM_VALUE_MAX() {
        return _POSIX_SEM_VALUE_MAX;
    }

    private static final int _POSIX_SIGQUEUE_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SIGQUEUE_MAX 32
     * }
     */
    public static int _POSIX_SIGQUEUE_MAX() {
        return _POSIX_SIGQUEUE_MAX;
    }

    private static final int _POSIX_TIMER_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TIMER_MAX 32
     * }
     */
    public static int _POSIX_TIMER_MAX() {
        return _POSIX_TIMER_MAX;
    }

    private static final int _POSIX_CLOCKRES_MIN = (int) 20000000L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_CLOCKRES_MIN 20000000
     * }
     */
    public static int _POSIX_CLOCKRES_MIN() {
        return _POSIX_CLOCKRES_MIN;
    }

    private static final int _POSIX_THREAD_DESTRUCTOR_ITERATIONS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4
     * }
     */
    public static int _POSIX_THREAD_DESTRUCTOR_ITERATIONS() {
        return _POSIX_THREAD_DESTRUCTOR_ITERATIONS;
    }

    private static final int _POSIX_THREAD_KEYS_MAX = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_KEYS_MAX 128
     * }
     */
    public static int _POSIX_THREAD_KEYS_MAX() {
        return _POSIX_THREAD_KEYS_MAX;
    }

    private static final int _POSIX_THREAD_THREADS_MAX = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_THREADS_MAX 64
     * }
     */
    public static int _POSIX_THREAD_THREADS_MAX() {
        return _POSIX_THREAD_THREADS_MAX;
    }

    private static final int PTHREAD_DESTRUCTOR_ITERATIONS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_DESTRUCTOR_ITERATIONS 4
     * }
     */
    public static int PTHREAD_DESTRUCTOR_ITERATIONS() {
        return PTHREAD_DESTRUCTOR_ITERATIONS;
    }

    private static final int PTHREAD_KEYS_MAX = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_KEYS_MAX 512
     * }
     */
    public static int PTHREAD_KEYS_MAX() {
        return PTHREAD_KEYS_MAX;
    }

    private static final int PTHREAD_STACK_MIN = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_STACK_MIN 16384
     * }
     */
    public static int PTHREAD_STACK_MIN() {
        return PTHREAD_STACK_MIN;
    }

    private static final int _POSIX_HOST_NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_HOST_NAME_MAX 255
     * }
     */
    public static int _POSIX_HOST_NAME_MAX() {
        return _POSIX_HOST_NAME_MAX;
    }

    private static final int _POSIX_LOGIN_NAME_MAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_LOGIN_NAME_MAX 9
     * }
     */
    public static int _POSIX_LOGIN_NAME_MAX() {
        return _POSIX_LOGIN_NAME_MAX;
    }

    private static final int _POSIX_SS_REPL_MAX = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SS_REPL_MAX 4
     * }
     */
    public static int _POSIX_SS_REPL_MAX() {
        return _POSIX_SS_REPL_MAX;
    }

    private static final int _POSIX_SYMLINK_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SYMLINK_MAX 255
     * }
     */
    public static int _POSIX_SYMLINK_MAX() {
        return _POSIX_SYMLINK_MAX;
    }

    private static final int _POSIX_SYMLOOP_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SYMLOOP_MAX 8
     * }
     */
    public static int _POSIX_SYMLOOP_MAX() {
        return _POSIX_SYMLOOP_MAX;
    }

    private static final int _POSIX_TRACE_EVENT_NAME_MAX = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_EVENT_NAME_MAX 30
     * }
     */
    public static int _POSIX_TRACE_EVENT_NAME_MAX() {
        return _POSIX_TRACE_EVENT_NAME_MAX;
    }

    private static final int _POSIX_TRACE_NAME_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_NAME_MAX 8
     * }
     */
    public static int _POSIX_TRACE_NAME_MAX() {
        return _POSIX_TRACE_NAME_MAX;
    }

    private static final int _POSIX_TRACE_SYS_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_SYS_MAX 8
     * }
     */
    public static int _POSIX_TRACE_SYS_MAX() {
        return _POSIX_TRACE_SYS_MAX;
    }

    private static final int _POSIX_TRACE_USER_EVENT_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_USER_EVENT_MAX 32
     * }
     */
    public static int _POSIX_TRACE_USER_EVENT_MAX() {
        return _POSIX_TRACE_USER_EVENT_MAX;
    }

    private static final int _POSIX_TTY_NAME_MAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TTY_NAME_MAX 9
     * }
     */
    public static int _POSIX_TTY_NAME_MAX() {
        return _POSIX_TTY_NAME_MAX;
    }

    private static final int _POSIX2_CHARCLASS_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_CHARCLASS_NAME_MAX 14
     * }
     */
    public static int _POSIX2_CHARCLASS_NAME_MAX() {
        return _POSIX2_CHARCLASS_NAME_MAX;
    }

    private static final int _POSIX2_COLL_WEIGHTS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_COLL_WEIGHTS_MAX 2
     * }
     */
    public static int _POSIX2_COLL_WEIGHTS_MAX() {
        return _POSIX2_COLL_WEIGHTS_MAX;
    }

    private static final int PASS_MAX = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define PASS_MAX 128
     * }
     */
    public static int PASS_MAX() {
        return PASS_MAX;
    }

    private static final int NL_ARGMAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define NL_ARGMAX 9
     * }
     */
    public static int NL_ARGMAX() {
        return NL_ARGMAX;
    }

    private static final int NL_LANGMAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define NL_LANGMAX 14
     * }
     */
    public static int NL_LANGMAX() {
        return NL_LANGMAX;
    }

    private static final int NL_MSGMAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define NL_MSGMAX 32767
     * }
     */
    public static int NL_MSGMAX() {
        return NL_MSGMAX;
    }

    private static final int NL_NMAX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NL_NMAX 1
     * }
     */
    public static int NL_NMAX() {
        return NL_NMAX;
    }

    private static final int NL_SETMAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define NL_SETMAX 255
     * }
     */
    public static int NL_SETMAX() {
        return NL_SETMAX;
    }

    private static final int NL_TEXTMAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define NL_TEXTMAX 2048
     * }
     */
    public static int NL_TEXTMAX() {
        return NL_TEXTMAX;
    }

    private static final int _XOPEN_IOV_MAX = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_IOV_MAX 16
     * }
     */
    public static int _XOPEN_IOV_MAX() {
        return _XOPEN_IOV_MAX;
    }

    private static final int IOV_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define IOV_MAX 1024
     * }
     */
    public static int IOV_MAX() {
        return IOV_MAX;
    }

    private static final int _XOPEN_NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_NAME_MAX 255
     * }
     */
    public static int _XOPEN_NAME_MAX() {
        return _XOPEN_NAME_MAX;
    }

    private static final int _XOPEN_PATH_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_PATH_MAX 1024
     * }
     */
    public static int _XOPEN_PATH_MAX() {
        return _XOPEN_PATH_MAX;
    }

    private static final int __DARWIN_NSIG = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NSIG 32
     * }
     */
    public static int __DARWIN_NSIG() {
        return __DARWIN_NSIG;
    }

    private static final int _ARM_SIGNAL_ = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _ARM_SIGNAL_ 1
     * }
     */
    public static int _ARM_SIGNAL_() {
        return _ARM_SIGNAL_;
    }

    private static final int SIGHUP = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIGHUP 1
     * }
     */
    public static int SIGHUP() {
        return SIGHUP;
    }

    private static final int SIGINT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SIGINT 2
     * }
     */
    public static int SIGINT() {
        return SIGINT;
    }

    private static final int SIGQUIT = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIGQUIT 3
     * }
     */
    public static int SIGQUIT() {
        return SIGQUIT;
    }

    private static final int SIGILL = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SIGILL 4
     * }
     */
    public static int SIGILL() {
        return SIGILL;
    }

    private static final int SIGTRAP = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define SIGTRAP 5
     * }
     */
    public static int SIGTRAP() {
        return SIGTRAP;
    }

    private static final int SIGABRT = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define SIGABRT 6
     * }
     */
    public static int SIGABRT() {
        return SIGABRT;
    }

    private static final int SIGEMT = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define SIGEMT 7
     * }
     */
    public static int SIGEMT() {
        return SIGEMT;
    }

    private static final int SIGFPE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SIGFPE 8
     * }
     */
    public static int SIGFPE() {
        return SIGFPE;
    }

    private static final int SIGKILL = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define SIGKILL 9
     * }
     */
    public static int SIGKILL() {
        return SIGKILL;
    }

    private static final int SIGBUS = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define SIGBUS 10
     * }
     */
    public static int SIGBUS() {
        return SIGBUS;
    }

    private static final int SIGSEGV = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define SIGSEGV 11
     * }
     */
    public static int SIGSEGV() {
        return SIGSEGV;
    }

    private static final int SIGSYS = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define SIGSYS 12
     * }
     */
    public static int SIGSYS() {
        return SIGSYS;
    }

    private static final int SIGPIPE = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define SIGPIPE 13
     * }
     */
    public static int SIGPIPE() {
        return SIGPIPE;
    }

    private static final int SIGALRM = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define SIGALRM 14
     * }
     */
    public static int SIGALRM() {
        return SIGALRM;
    }

    private static final int SIGTERM = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define SIGTERM 15
     * }
     */
    public static int SIGTERM() {
        return SIGTERM;
    }

    private static final int SIGURG = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SIGURG 16
     * }
     */
    public static int SIGURG() {
        return SIGURG;
    }

    private static final int SIGSTOP = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define SIGSTOP 17
     * }
     */
    public static int SIGSTOP() {
        return SIGSTOP;
    }

    private static final int SIGTSTP = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define SIGTSTP 18
     * }
     */
    public static int SIGTSTP() {
        return SIGTSTP;
    }

    private static final int SIGCONT = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define SIGCONT 19
     * }
     */
    public static int SIGCONT() {
        return SIGCONT;
    }

    private static final int SIGCHLD = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define SIGCHLD 20
     * }
     */
    public static int SIGCHLD() {
        return SIGCHLD;
    }

    private static final int SIGTTIN = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define SIGTTIN 21
     * }
     */
    public static int SIGTTIN() {
        return SIGTTIN;
    }

    private static final int SIGTTOU = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define SIGTTOU 22
     * }
     */
    public static int SIGTTOU() {
        return SIGTTOU;
    }

    private static final int SIGIO = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define SIGIO 23
     * }
     */
    public static int SIGIO() {
        return SIGIO;
    }

    private static final int SIGXCPU = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define SIGXCPU 24
     * }
     */
    public static int SIGXCPU() {
        return SIGXCPU;
    }

    private static final int SIGXFSZ = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define SIGXFSZ 25
     * }
     */
    public static int SIGXFSZ() {
        return SIGXFSZ;
    }

    private static final int SIGVTALRM = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define SIGVTALRM 26
     * }
     */
    public static int SIGVTALRM() {
        return SIGVTALRM;
    }

    private static final int SIGPROF = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define SIGPROF 27
     * }
     */
    public static int SIGPROF() {
        return SIGPROF;
    }

    private static final int SIGWINCH = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define SIGWINCH 28
     * }
     */
    public static int SIGWINCH() {
        return SIGWINCH;
    }

    private static final int SIGINFO = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define SIGINFO 29
     * }
     */
    public static int SIGINFO() {
        return SIGINFO;
    }

    private static final int SIGUSR1 = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define SIGUSR1 30
     * }
     */
    public static int SIGUSR1() {
        return SIGUSR1;
    }

    private static final int SIGUSR2 = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define SIGUSR2 31
     * }
     */
    public static int SIGUSR2() {
        return SIGUSR2;
    }

    private static final int __DARWIN_OPAQUE_ARM_THREAD_STATE64 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_OPAQUE_ARM_THREAD_STATE64 0
     * }
     */
    public static int __DARWIN_OPAQUE_ARM_THREAD_STATE64() {
        return __DARWIN_OPAQUE_ARM_THREAD_STATE64;
    }

    private static final int SIGEV_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_NONE 0
     * }
     */
    public static int SIGEV_NONE() {
        return SIGEV_NONE;
    }

    private static final int SIGEV_SIGNAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_SIGNAL 1
     * }
     */
    public static int SIGEV_SIGNAL() {
        return SIGEV_SIGNAL;
    }

    private static final int SIGEV_THREAD = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_THREAD 3
     * }
     */
    public static int SIGEV_THREAD() {
        return SIGEV_THREAD;
    }

    private static final int ILL_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ILL_NOOP 0
     * }
     */
    public static int ILL_NOOP() {
        return ILL_NOOP;
    }

    private static final int ILL_ILLOPC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLOPC 1
     * }
     */
    public static int ILL_ILLOPC() {
        return ILL_ILLOPC;
    }

    private static final int ILL_ILLTRP = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLTRP 2
     * }
     */
    public static int ILL_ILLTRP() {
        return ILL_ILLTRP;
    }

    private static final int ILL_PRVOPC = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define ILL_PRVOPC 3
     * }
     */
    public static int ILL_PRVOPC() {
        return ILL_PRVOPC;
    }

    private static final int ILL_ILLOPN = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLOPN 4
     * }
     */
    public static int ILL_ILLOPN() {
        return ILL_ILLOPN;
    }

    private static final int ILL_ILLADR = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLADR 5
     * }
     */
    public static int ILL_ILLADR() {
        return ILL_ILLADR;
    }

    private static final int ILL_PRVREG = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define ILL_PRVREG 6
     * }
     */
    public static int ILL_PRVREG() {
        return ILL_PRVREG;
    }

    private static final int ILL_COPROC = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define ILL_COPROC 7
     * }
     */
    public static int ILL_COPROC() {
        return ILL_COPROC;
    }

    private static final int ILL_BADSTK = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ILL_BADSTK 8
     * }
     */
    public static int ILL_BADSTK() {
        return ILL_BADSTK;
    }

    private static final int FPE_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define FPE_NOOP 0
     * }
     */
    public static int FPE_NOOP() {
        return FPE_NOOP;
    }

    private static final int FPE_FLTDIV = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTDIV 1
     * }
     */
    public static int FPE_FLTDIV() {
        return FPE_FLTDIV;
    }

    private static final int FPE_FLTOVF = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTOVF 2
     * }
     */
    public static int FPE_FLTOVF() {
        return FPE_FLTOVF;
    }

    private static final int FPE_FLTUND = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTUND 3
     * }
     */
    public static int FPE_FLTUND() {
        return FPE_FLTUND;
    }

    private static final int FPE_FLTRES = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTRES 4
     * }
     */
    public static int FPE_FLTRES() {
        return FPE_FLTRES;
    }

    private static final int FPE_FLTINV = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTINV 5
     * }
     */
    public static int FPE_FLTINV() {
        return FPE_FLTINV;
    }

    private static final int FPE_FLTSUB = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTSUB 6
     * }
     */
    public static int FPE_FLTSUB() {
        return FPE_FLTSUB;
    }

    private static final int FPE_INTDIV = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define FPE_INTDIV 7
     * }
     */
    public static int FPE_INTDIV() {
        return FPE_INTDIV;
    }

    private static final int FPE_INTOVF = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define FPE_INTOVF 8
     * }
     */
    public static int FPE_INTOVF() {
        return FPE_INTOVF;
    }

    private static final int SEGV_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define SEGV_NOOP 0
     * }
     */
    public static int SEGV_NOOP() {
        return SEGV_NOOP;
    }

    private static final int SEGV_MAPERR = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SEGV_MAPERR 1
     * }
     */
    public static int SEGV_MAPERR() {
        return SEGV_MAPERR;
    }

    private static final int SEGV_ACCERR = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SEGV_ACCERR 2
     * }
     */
    public static int SEGV_ACCERR() {
        return SEGV_ACCERR;
    }

    private static final int BUS_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define BUS_NOOP 0
     * }
     */
    public static int BUS_NOOP() {
        return BUS_NOOP;
    }

    private static final int BUS_ADRALN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BUS_ADRALN 1
     * }
     */
    public static int BUS_ADRALN() {
        return BUS_ADRALN;
    }

    private static final int BUS_ADRERR = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define BUS_ADRERR 2
     * }
     */
    public static int BUS_ADRERR() {
        return BUS_ADRERR;
    }

    private static final int BUS_OBJERR = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define BUS_OBJERR 3
     * }
     */
    public static int BUS_OBJERR() {
        return BUS_OBJERR;
    }

    private static final int TRAP_BRKPT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TRAP_BRKPT 1
     * }
     */
    public static int TRAP_BRKPT() {
        return TRAP_BRKPT;
    }

    private static final int TRAP_TRACE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define TRAP_TRACE 2
     * }
     */
    public static int TRAP_TRACE() {
        return TRAP_TRACE;
    }

    private static final int CLD_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CLD_NOOP 0
     * }
     */
    public static int CLD_NOOP() {
        return CLD_NOOP;
    }

    private static final int CLD_EXITED = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CLD_EXITED 1
     * }
     */
    public static int CLD_EXITED() {
        return CLD_EXITED;
    }

    private static final int CLD_KILLED = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CLD_KILLED 2
     * }
     */
    public static int CLD_KILLED() {
        return CLD_KILLED;
    }

    private static final int CLD_DUMPED = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CLD_DUMPED 3
     * }
     */
    public static int CLD_DUMPED() {
        return CLD_DUMPED;
    }

    private static final int CLD_TRAPPED = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CLD_TRAPPED 4
     * }
     */
    public static int CLD_TRAPPED() {
        return CLD_TRAPPED;
    }

    private static final int CLD_STOPPED = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CLD_STOPPED 5
     * }
     */
    public static int CLD_STOPPED() {
        return CLD_STOPPED;
    }

    private static final int CLD_CONTINUED = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CLD_CONTINUED 6
     * }
     */
    public static int CLD_CONTINUED() {
        return CLD_CONTINUED;
    }

    private static final int POLL_IN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define POLL_IN 1
     * }
     */
    public static int POLL_IN() {
        return POLL_IN;
    }

    private static final int POLL_OUT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define POLL_OUT 2
     * }
     */
    public static int POLL_OUT() {
        return POLL_OUT;
    }

    private static final int POLL_MSG = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define POLL_MSG 3
     * }
     */
    public static int POLL_MSG() {
        return POLL_MSG;
    }

    private static final int POLL_ERR = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define POLL_ERR 4
     * }
     */
    public static int POLL_ERR() {
        return POLL_ERR;
    }

    private static final int POLL_PRI = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define POLL_PRI 5
     * }
     */
    public static int POLL_PRI() {
        return POLL_PRI;
    }

    private static final int POLL_HUP = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define POLL_HUP 6
     * }
     */
    public static int POLL_HUP() {
        return POLL_HUP;
    }

    private static final int SA_ONSTACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SA_ONSTACK 1
     * }
     */
    public static int SA_ONSTACK() {
        return SA_ONSTACK;
    }

    private static final int SA_RESTART = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SA_RESTART 2
     * }
     */
    public static int SA_RESTART() {
        return SA_RESTART;
    }

    private static final int SA_RESETHAND = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SA_RESETHAND 4
     * }
     */
    public static int SA_RESETHAND() {
        return SA_RESETHAND;
    }

    private static final int SA_NOCLDSTOP = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SA_NOCLDSTOP 8
     * }
     */
    public static int SA_NOCLDSTOP() {
        return SA_NOCLDSTOP;
    }

    private static final int SA_NODEFER = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SA_NODEFER 16
     * }
     */
    public static int SA_NODEFER() {
        return SA_NODEFER;
    }

    private static final int SA_NOCLDWAIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define SA_NOCLDWAIT 32
     * }
     */
    public static int SA_NOCLDWAIT() {
        return SA_NOCLDWAIT;
    }

    private static final int SA_SIGINFO = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define SA_SIGINFO 64
     * }
     */
    public static int SA_SIGINFO() {
        return SA_SIGINFO;
    }

    private static final int SA_USERTRAMP = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define SA_USERTRAMP 256
     * }
     */
    public static int SA_USERTRAMP() {
        return SA_USERTRAMP;
    }

    private static final int SA_64REGSET = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define SA_64REGSET 512
     * }
     */
    public static int SA_64REGSET() {
        return SA_64REGSET;
    }

    private static final int SIG_BLOCK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIG_BLOCK 1
     * }
     */
    public static int SIG_BLOCK() {
        return SIG_BLOCK;
    }

    private static final int SIG_UNBLOCK = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SIG_UNBLOCK 2
     * }
     */
    public static int SIG_UNBLOCK() {
        return SIG_UNBLOCK;
    }

    private static final int SIG_SETMASK = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIG_SETMASK 3
     * }
     */
    public static int SIG_SETMASK() {
        return SIG_SETMASK;
    }

    private static final int SI_USER = (int) 65537L;
    /**
     * {@snippet lang=c :
     * #define SI_USER 65537
     * }
     */
    public static int SI_USER() {
        return SI_USER;
    }

    private static final int SI_QUEUE = (int) 65538L;
    /**
     * {@snippet lang=c :
     * #define SI_QUEUE 65538
     * }
     */
    public static int SI_QUEUE() {
        return SI_QUEUE;
    }

    private static final int SI_TIMER = (int) 65539L;
    /**
     * {@snippet lang=c :
     * #define SI_TIMER 65539
     * }
     */
    public static int SI_TIMER() {
        return SI_TIMER;
    }

    private static final int SI_ASYNCIO = (int) 65540L;
    /**
     * {@snippet lang=c :
     * #define SI_ASYNCIO 65540
     * }
     */
    public static int SI_ASYNCIO() {
        return SI_ASYNCIO;
    }

    private static final int SI_MESGQ = (int) 65541L;
    /**
     * {@snippet lang=c :
     * #define SI_MESGQ 65541
     * }
     */
    public static int SI_MESGQ() {
        return SI_MESGQ;
    }

    private static final int SS_ONSTACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SS_ONSTACK 1
     * }
     */
    public static int SS_ONSTACK() {
        return SS_ONSTACK;
    }

    private static final int SS_DISABLE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SS_DISABLE 4
     * }
     */
    public static int SS_DISABLE() {
        return SS_DISABLE;
    }

    private static final int MINSIGSTKSZ = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define MINSIGSTKSZ 32768
     * }
     */
    public static int MINSIGSTKSZ() {
        return MINSIGSTKSZ;
    }

    private static final int SIGSTKSZ = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define SIGSTKSZ 131072
     * }
     */
    public static int SIGSTKSZ() {
        return SIGSTKSZ;
    }

    private static final int PSWP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define PSWP 0
     * }
     */
    public static int PSWP() {
        return PSWP;
    }

    private static final int PVM = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PVM 4
     * }
     */
    public static int PVM() {
        return PVM;
    }

    private static final int PINOD = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define PINOD 8
     * }
     */
    public static int PINOD() {
        return PINOD;
    }

    private static final int PRIBIO = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define PRIBIO 16
     * }
     */
    public static int PRIBIO() {
        return PRIBIO;
    }

    private static final int PVFS = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define PVFS 20
     * }
     */
    public static int PVFS() {
        return PVFS;
    }

    private static final int PZERO = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define PZERO 22
     * }
     */
    public static int PZERO() {
        return PZERO;
    }

    private static final int PSOCK = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define PSOCK 24
     * }
     */
    public static int PSOCK() {
        return PSOCK;
    }

    private static final int PWAIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define PWAIT 32
     * }
     */
    public static int PWAIT() {
        return PWAIT;
    }

    private static final int PLOCK = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define PLOCK 36
     * }
     */
    public static int PLOCK() {
        return PLOCK;
    }

    private static final int PPAUSE = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define PPAUSE 40
     * }
     */
    public static int PPAUSE() {
        return PPAUSE;
    }

    private static final int PUSER = (int) 50L;
    /**
     * {@snippet lang=c :
     * #define PUSER 50
     * }
     */
    public static int PUSER() {
        return PUSER;
    }

    private static final int MAXPRI = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define MAXPRI 127
     * }
     */
    public static int MAXPRI() {
        return MAXPRI;
    }

    private static final int PRIMASK = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define PRIMASK 255
     * }
     */
    public static int PRIMASK() {
        return PRIMASK;
    }

    private static final int PCATCH = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define PCATCH 256
     * }
     */
    public static int PCATCH() {
        return PCATCH;
    }

    private static final int PTTYBLOCK = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PTTYBLOCK 512
     * }
     */
    public static int PTTYBLOCK() {
        return PTTYBLOCK;
    }

    private static final int PDROP = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define PDROP 1024
     * }
     */
    public static int PDROP() {
        return PDROP;
    }

    private static final int PSPIN = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define PSPIN 2048
     * }
     */
    public static int PSPIN() {
        return PSPIN;
    }

    private static final int CMASK = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define CMASK 18
     * }
     */
    public static int CMASK() {
        return CMASK;
    }

    private static final int CBLOCK = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define CBLOCK 64
     * }
     */
    public static int CBLOCK() {
        return CBLOCK;
    }

    private static final int MAXFRAG = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MAXFRAG 8
     * }
     */
    public static int MAXFRAG() {
        return MAXFRAG;
    }

    private static final int MAXSYMLINKS = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MAXSYMLINKS 32
     * }
     */
    public static int MAXSYMLINKS() {
        return MAXSYMLINKS;
    }

    private static final int FSHIFT = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define FSHIFT 11
     * }
     */
    public static int FSHIFT() {
        return FSHIFT;
    }

    private static final int MAX_AUDIT_RECORDS = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define MAX_AUDIT_RECORDS 20
     * }
     */
    public static int MAX_AUDIT_RECORDS() {
        return MAX_AUDIT_RECORDS;
    }

    private static final int AUDIT_HARD_LIMIT_FREE_BLOCKS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_HARD_LIMIT_FREE_BLOCKS 4
     * }
     */
    public static int AUDIT_HARD_LIMIT_FREE_BLOCKS() {
        return AUDIT_HARD_LIMIT_FREE_BLOCKS;
    }

    private static final int AUDIT_TRIGGER_MIN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_MIN 1
     * }
     */
    public static int AUDIT_TRIGGER_MIN() {
        return AUDIT_TRIGGER_MIN;
    }

    private static final int AUDIT_TRIGGER_LOW_SPACE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_LOW_SPACE 1
     * }
     */
    public static int AUDIT_TRIGGER_LOW_SPACE() {
        return AUDIT_TRIGGER_LOW_SPACE;
    }

    private static final int AUDIT_TRIGGER_ROTATE_KERNEL = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_ROTATE_KERNEL 2
     * }
     */
    public static int AUDIT_TRIGGER_ROTATE_KERNEL() {
        return AUDIT_TRIGGER_ROTATE_KERNEL;
    }

    private static final int AUDIT_TRIGGER_READ_FILE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_READ_FILE 3
     * }
     */
    public static int AUDIT_TRIGGER_READ_FILE() {
        return AUDIT_TRIGGER_READ_FILE;
    }

    private static final int AUDIT_TRIGGER_CLOSE_AND_DIE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_CLOSE_AND_DIE 4
     * }
     */
    public static int AUDIT_TRIGGER_CLOSE_AND_DIE() {
        return AUDIT_TRIGGER_CLOSE_AND_DIE;
    }

    private static final int AUDIT_TRIGGER_NO_SPACE = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_NO_SPACE 5
     * }
     */
    public static int AUDIT_TRIGGER_NO_SPACE() {
        return AUDIT_TRIGGER_NO_SPACE;
    }

    private static final int AUDIT_TRIGGER_ROTATE_USER = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_ROTATE_USER 6
     * }
     */
    public static int AUDIT_TRIGGER_ROTATE_USER() {
        return AUDIT_TRIGGER_ROTATE_USER;
    }

    private static final int AUDIT_TRIGGER_INITIALIZE = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_INITIALIZE 7
     * }
     */
    public static int AUDIT_TRIGGER_INITIALIZE() {
        return AUDIT_TRIGGER_INITIALIZE;
    }

    private static final int AUDIT_TRIGGER_EXPIRE_TRAILS = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_EXPIRE_TRAILS 8
     * }
     */
    public static int AUDIT_TRIGGER_EXPIRE_TRAILS() {
        return AUDIT_TRIGGER_EXPIRE_TRAILS;
    }

    private static final int AUDIT_TRIGGER_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_MAX 8
     * }
     */
    public static int AUDIT_TRIGGER_MAX() {
        return AUDIT_TRIGGER_MAX;
    }

    private static final int AU_DEFAUDITSID = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define AU_DEFAUDITSID 0
     * }
     */
    public static int AU_DEFAUDITSID() {
        return AU_DEFAUDITSID;
    }

    private static final int AUC_UNSET = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define AUC_UNSET 0
     * }
     */
    public static int AUC_UNSET() {
        return AUC_UNSET;
    }

    private static final int AUC_AUDITING = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUC_AUDITING 1
     * }
     */
    public static int AUC_AUDITING() {
        return AUC_AUDITING;
    }

    private static final int AUC_NOAUDIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUC_NOAUDIT 2
     * }
     */
    public static int AUC_NOAUDIT() {
        return AUC_NOAUDIT;
    }

    private static final int A_OLDGETPOLICY = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETPOLICY 2
     * }
     */
    public static int A_OLDGETPOLICY() {
        return A_OLDGETPOLICY;
    }

    private static final int A_OLDSETPOLICY = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETPOLICY 3
     * }
     */
    public static int A_OLDSETPOLICY() {
        return A_OLDSETPOLICY;
    }

    private static final int A_GETKMASK = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define A_GETKMASK 4
     * }
     */
    public static int A_GETKMASK() {
        return A_GETKMASK;
    }

    private static final int A_SETKMASK = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define A_SETKMASK 5
     * }
     */
    public static int A_SETKMASK() {
        return A_SETKMASK;
    }

    private static final int A_OLDGETQCTRL = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETQCTRL 6
     * }
     */
    public static int A_OLDGETQCTRL() {
        return A_OLDGETQCTRL;
    }

    private static final int A_OLDSETQCTRL = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETQCTRL 7
     * }
     */
    public static int A_OLDSETQCTRL() {
        return A_OLDSETQCTRL;
    }

    private static final int A_GETCWD = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define A_GETCWD 8
     * }
     */
    public static int A_GETCWD() {
        return A_GETCWD;
    }

    private static final int A_GETCAR = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define A_GETCAR 9
     * }
     */
    public static int A_GETCAR() {
        return A_GETCAR;
    }

    private static final int A_GETSTAT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define A_GETSTAT 12
     * }
     */
    public static int A_GETSTAT() {
        return A_GETSTAT;
    }

    private static final int A_SETSTAT = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define A_SETSTAT 13
     * }
     */
    public static int A_SETSTAT() {
        return A_SETSTAT;
    }

    private static final int A_SETUMASK = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define A_SETUMASK 14
     * }
     */
    public static int A_SETUMASK() {
        return A_SETUMASK;
    }

    private static final int A_SETSMASK = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define A_SETSMASK 15
     * }
     */
    public static int A_SETSMASK() {
        return A_SETSMASK;
    }

    private static final int A_OLDGETCOND = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETCOND 20
     * }
     */
    public static int A_OLDGETCOND() {
        return A_OLDGETCOND;
    }

    private static final int A_OLDSETCOND = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETCOND 21
     * }
     */
    public static int A_OLDSETCOND() {
        return A_OLDSETCOND;
    }

    private static final int A_GETCLASS = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define A_GETCLASS 22
     * }
     */
    public static int A_GETCLASS() {
        return A_GETCLASS;
    }

    private static final int A_SETCLASS = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define A_SETCLASS 23
     * }
     */
    public static int A_SETCLASS() {
        return A_SETCLASS;
    }

    private static final int A_GETPINFO = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define A_GETPINFO 24
     * }
     */
    public static int A_GETPINFO() {
        return A_GETPINFO;
    }

    private static final int A_SETPMASK = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define A_SETPMASK 25
     * }
     */
    public static int A_SETPMASK() {
        return A_SETPMASK;
    }

    private static final int A_SETFSIZE = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define A_SETFSIZE 26
     * }
     */
    public static int A_SETFSIZE() {
        return A_SETFSIZE;
    }

    private static final int A_GETFSIZE = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define A_GETFSIZE 27
     * }
     */
    public static int A_GETFSIZE() {
        return A_GETFSIZE;
    }

    private static final int A_GETPINFO_ADDR = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define A_GETPINFO_ADDR 28
     * }
     */
    public static int A_GETPINFO_ADDR() {
        return A_GETPINFO_ADDR;
    }

    private static final int A_GETKAUDIT = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define A_GETKAUDIT 29
     * }
     */
    public static int A_GETKAUDIT() {
        return A_GETKAUDIT;
    }

    private static final int A_SETKAUDIT = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define A_SETKAUDIT 30
     * }
     */
    public static int A_SETKAUDIT() {
        return A_SETKAUDIT;
    }

    private static final int A_SENDTRIGGER = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define A_SENDTRIGGER 31
     * }
     */
    public static int A_SENDTRIGGER() {
        return A_SENDTRIGGER;
    }

    private static final int A_GETSINFO_ADDR = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define A_GETSINFO_ADDR 32
     * }
     */
    public static int A_GETSINFO_ADDR() {
        return A_GETSINFO_ADDR;
    }

    private static final int A_GETPOLICY = (int) 33L;
    /**
     * {@snippet lang=c :
     * #define A_GETPOLICY 33
     * }
     */
    public static int A_GETPOLICY() {
        return A_GETPOLICY;
    }

    private static final int A_SETPOLICY = (int) 34L;
    /**
     * {@snippet lang=c :
     * #define A_SETPOLICY 34
     * }
     */
    public static int A_SETPOLICY() {
        return A_SETPOLICY;
    }

    private static final int A_GETQCTRL = (int) 35L;
    /**
     * {@snippet lang=c :
     * #define A_GETQCTRL 35
     * }
     */
    public static int A_GETQCTRL() {
        return A_GETQCTRL;
    }

    private static final int A_SETQCTRL = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define A_SETQCTRL 36
     * }
     */
    public static int A_SETQCTRL() {
        return A_SETQCTRL;
    }

    private static final int A_GETCOND = (int) 37L;
    /**
     * {@snippet lang=c :
     * #define A_GETCOND 37
     * }
     */
    public static int A_GETCOND() {
        return A_GETCOND;
    }

    private static final int A_SETCOND = (int) 38L;
    /**
     * {@snippet lang=c :
     * #define A_SETCOND 38
     * }
     */
    public static int A_SETCOND() {
        return A_SETCOND;
    }

    private static final int A_GETSFLAGS = (int) 39L;
    /**
     * {@snippet lang=c :
     * #define A_GETSFLAGS 39
     * }
     */
    public static int A_GETSFLAGS() {
        return A_GETSFLAGS;
    }

    private static final int A_SETSFLAGS = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define A_SETSFLAGS 40
     * }
     */
    public static int A_SETSFLAGS() {
        return A_SETSFLAGS;
    }

    private static final int A_GETCTLMODE = (int) 41L;
    /**
     * {@snippet lang=c :
     * #define A_GETCTLMODE 41
     * }
     */
    public static int A_GETCTLMODE() {
        return A_GETCTLMODE;
    }

    private static final int A_SETCTLMODE = (int) 42L;
    /**
     * {@snippet lang=c :
     * #define A_SETCTLMODE 42
     * }
     */
    public static int A_SETCTLMODE() {
        return A_SETCTLMODE;
    }

    private static final int A_GETEXPAFTER = (int) 43L;
    /**
     * {@snippet lang=c :
     * #define A_GETEXPAFTER 43
     * }
     */
    public static int A_GETEXPAFTER() {
        return A_GETEXPAFTER;
    }

    private static final int A_SETEXPAFTER = (int) 44L;
    /**
     * {@snippet lang=c :
     * #define A_SETEXPAFTER 44
     * }
     */
    public static int A_SETEXPAFTER() {
        return A_SETEXPAFTER;
    }

    private static final int AUDIT_CNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_CNT 1
     * }
     */
    public static int AUDIT_CNT() {
        return AUDIT_CNT;
    }

    private static final int AUDIT_AHLT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_AHLT 2
     * }
     */
    public static int AUDIT_AHLT() {
        return AUDIT_AHLT;
    }

    private static final int AUDIT_ARGV = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ARGV 4
     * }
     */
    public static int AUDIT_ARGV() {
        return AUDIT_ARGV;
    }

    private static final int AUDIT_ARGE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ARGE 8
     * }
     */
    public static int AUDIT_ARGE() {
        return AUDIT_ARGE;
    }

    private static final int AUDIT_SEQ = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_SEQ 16
     * }
     */
    public static int AUDIT_SEQ() {
        return AUDIT_SEQ;
    }

    private static final int AUDIT_WINDATA = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_WINDATA 32
     * }
     */
    public static int AUDIT_WINDATA() {
        return AUDIT_WINDATA;
    }

    private static final int AUDIT_USER = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_USER 64
     * }
     */
    public static int AUDIT_USER() {
        return AUDIT_USER;
    }

    private static final int AUDIT_GROUP = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_GROUP 128
     * }
     */
    public static int AUDIT_GROUP() {
        return AUDIT_GROUP;
    }

    private static final int AUDIT_TRAIL = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRAIL 256
     * }
     */
    public static int AUDIT_TRAIL() {
        return AUDIT_TRAIL;
    }

    private static final int AUDIT_PATH = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PATH 512
     * }
     */
    public static int AUDIT_PATH() {
        return AUDIT_PATH;
    }

    private static final int AUDIT_SCNT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_SCNT 1024
     * }
     */
    public static int AUDIT_SCNT() {
        return AUDIT_SCNT;
    }

    private static final int AUDIT_PUBLIC = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PUBLIC 2048
     * }
     */
    public static int AUDIT_PUBLIC() {
        return AUDIT_PUBLIC;
    }

    private static final int AUDIT_ZONENAME = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ZONENAME 4096
     * }
     */
    public static int AUDIT_ZONENAME() {
        return AUDIT_ZONENAME;
    }

    private static final int AUDIT_PERZONE = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PERZONE 8192
     * }
     */
    public static int AUDIT_PERZONE() {
        return AUDIT_PERZONE;
    }

    private static final int AQ_HIWATER = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define AQ_HIWATER 100
     * }
     */
    public static int AQ_HIWATER() {
        return AQ_HIWATER;
    }

    private static final int AQ_MAXHIGH = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define AQ_MAXHIGH 10000
     * }
     */
    public static int AQ_MAXHIGH() {
        return AQ_MAXHIGH;
    }

    private static final int AQ_LOWATER = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define AQ_LOWATER 10
     * }
     */
    public static int AQ_LOWATER() {
        return AQ_LOWATER;
    }

    private static final int AQ_MAXBUFSZ = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define AQ_MAXBUFSZ 1048576
     * }
     */
    public static int AQ_MAXBUFSZ() {
        return AQ_MAXBUFSZ;
    }

    private static final int AU_FS_MINFREE = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define AU_FS_MINFREE 20
     * }
     */
    public static int AU_FS_MINFREE() {
        return AU_FS_MINFREE;
    }

    private static final int AU_IPv4 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AU_IPv4 4
     * }
     */
    public static int AU_IPv4() {
        return AU_IPv4;
    }

    private static final int AU_IPv6 = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define AU_IPv6 16
     * }
     */
    public static int AU_IPv6() {
        return AU_IPv6;
    }

    private static final int AU_CLASS_MASK_RESERVED = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define AU_CLASS_MASK_RESERVED 268435456
     * }
     */
    public static int AU_CLASS_MASK_RESERVED() {
        return AU_CLASS_MASK_RESERVED;
    }

    private static final int TRUE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TRUE 1
     * }
     */
    public static int TRUE() {
        return TRUE;
    }

    private static final int FALSE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define FALSE 0
     * }
     */
    public static int FALSE() {
        return FALSE;
    }

    private static final int MACH_PORT_NULL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_NULL 0
     * }
     */
    public static int MACH_PORT_NULL() {
        return MACH_PORT_NULL;
    }

    private static final int MACH_PORT_TYPE_SPREQUEST = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SPREQUEST 1073741824
     * }
     */
    public static int MACH_PORT_TYPE_SPREQUEST() {
        return MACH_PORT_TYPE_SPREQUEST;
    }

    private static final int MACH_PORT_TYPE_SPREQUEST_DELAYED = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SPREQUEST_DELAYED 536870912
     * }
     */
    public static int MACH_PORT_TYPE_SPREQUEST_DELAYED() {
        return MACH_PORT_TYPE_SPREQUEST_DELAYED;
    }

    private static final int MACH_PORT_SRIGHTS_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SRIGHTS_NONE 0
     * }
     */
    public static int MACH_PORT_SRIGHTS_NONE() {
        return MACH_PORT_SRIGHTS_NONE;
    }

    private static final int MACH_PORT_SRIGHTS_PRESENT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SRIGHTS_PRESENT 1
     * }
     */
    public static int MACH_PORT_SRIGHTS_PRESENT() {
        return MACH_PORT_SRIGHTS_PRESENT;
    }

    private static final int MACH_PORT_STATUS_FLAG_TEMPOWNER = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_TEMPOWNER 1
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_TEMPOWNER() {
        return MACH_PORT_STATUS_FLAG_TEMPOWNER;
    }

    private static final int MACH_PORT_STATUS_FLAG_GUARDED = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_GUARDED 2
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_GUARDED() {
        return MACH_PORT_STATUS_FLAG_GUARDED;
    }

    private static final int MACH_PORT_STATUS_FLAG_STRICT_GUARD = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_STRICT_GUARD 4
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_STRICT_GUARD() {
        return MACH_PORT_STATUS_FLAG_STRICT_GUARD;
    }

    private static final int MACH_PORT_STATUS_FLAG_IMP_DONATION = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_IMP_DONATION 8
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_IMP_DONATION() {
        return MACH_PORT_STATUS_FLAG_IMP_DONATION;
    }

    private static final int MACH_PORT_STATUS_FLAG_REVIVE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_REVIVE 16
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_REVIVE() {
        return MACH_PORT_STATUS_FLAG_REVIVE;
    }

    private static final int MACH_PORT_STATUS_FLAG_TASKPTR = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_TASKPTR 32
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_TASKPTR() {
        return MACH_PORT_STATUS_FLAG_TASKPTR;
    }

    private static final int MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE 64
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE() {
        return MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE;
    }

    private static final int MACH_PORT_STATUS_FLAG_NO_GRANT = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_NO_GRANT 128
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_NO_GRANT() {
        return MACH_PORT_STATUS_FLAG_NO_GRANT;
    }

    private static final int MACH_PORT_LIMITS_INFO = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_LIMITS_INFO 1
     * }
     */
    public static int MACH_PORT_LIMITS_INFO() {
        return MACH_PORT_LIMITS_INFO;
    }

    private static final int MACH_PORT_RECEIVE_STATUS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RECEIVE_STATUS 2
     * }
     */
    public static int MACH_PORT_RECEIVE_STATUS() {
        return MACH_PORT_RECEIVE_STATUS;
    }

    private static final int MACH_PORT_DNREQUESTS_SIZE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DNREQUESTS_SIZE 3
     * }
     */
    public static int MACH_PORT_DNREQUESTS_SIZE() {
        return MACH_PORT_DNREQUESTS_SIZE;
    }

    private static final int MACH_PORT_TEMPOWNER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TEMPOWNER 4
     * }
     */
    public static int MACH_PORT_TEMPOWNER() {
        return MACH_PORT_TEMPOWNER;
    }

    private static final int MACH_PORT_IMPORTANCE_RECEIVER = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_IMPORTANCE_RECEIVER 5
     * }
     */
    public static int MACH_PORT_IMPORTANCE_RECEIVER() {
        return MACH_PORT_IMPORTANCE_RECEIVER;
    }

    private static final int MACH_PORT_DENAP_RECEIVER = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DENAP_RECEIVER 6
     * }
     */
    public static int MACH_PORT_DENAP_RECEIVER() {
        return MACH_PORT_DENAP_RECEIVER;
    }

    private static final int MACH_PORT_INFO_EXT = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_INFO_EXT 7
     * }
     */
    public static int MACH_PORT_INFO_EXT() {
        return MACH_PORT_INFO_EXT;
    }

    private static final int MACH_PORT_GUARD_INFO = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_GUARD_INFO 8
     * }
     */
    public static int MACH_PORT_GUARD_INFO() {
        return MACH_PORT_GUARD_INFO;
    }

    private static final int MACH_PORT_SERVICE_THROTTLED = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SERVICE_THROTTLED 9
     * }
     */
    public static int MACH_PORT_SERVICE_THROTTLED() {
        return MACH_PORT_SERVICE_THROTTLED;
    }

    private static final int MACH_PORT_DNREQUESTS_SIZE_COUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DNREQUESTS_SIZE_COUNT 1
     * }
     */
    public static int MACH_PORT_DNREQUESTS_SIZE_COUNT() {
        return MACH_PORT_DNREQUESTS_SIZE_COUNT;
    }

    private static final int MACH_PORT_SERVICE_THROTTLED_COUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SERVICE_THROTTLED_COUNT 1
     * }
     */
    public static int MACH_PORT_SERVICE_THROTTLED_COUNT() {
        return MACH_PORT_SERVICE_THROTTLED_COUNT;
    }

    private static final int MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN 255
     * }
     */
    public static int MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN() {
        return MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN;
    }

    private static final int MPO_CONTEXT_AS_GUARD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MPO_CONTEXT_AS_GUARD 1
     * }
     */
    public static int MPO_CONTEXT_AS_GUARD() {
        return MPO_CONTEXT_AS_GUARD;
    }

    private static final int MPO_QLIMIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MPO_QLIMIT 2
     * }
     */
    public static int MPO_QLIMIT() {
        return MPO_QLIMIT;
    }

    private static final int MPO_TEMPOWNER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MPO_TEMPOWNER 4
     * }
     */
    public static int MPO_TEMPOWNER() {
        return MPO_TEMPOWNER;
    }

    private static final int MPO_IMPORTANCE_RECEIVER = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MPO_IMPORTANCE_RECEIVER 8
     * }
     */
    public static int MPO_IMPORTANCE_RECEIVER() {
        return MPO_IMPORTANCE_RECEIVER;
    }

    private static final int MPO_INSERT_SEND_RIGHT = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MPO_INSERT_SEND_RIGHT 16
     * }
     */
    public static int MPO_INSERT_SEND_RIGHT() {
        return MPO_INSERT_SEND_RIGHT;
    }

    private static final int MPO_STRICT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MPO_STRICT 32
     * }
     */
    public static int MPO_STRICT() {
        return MPO_STRICT;
    }

    private static final int MPO_DENAP_RECEIVER = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MPO_DENAP_RECEIVER 64
     * }
     */
    public static int MPO_DENAP_RECEIVER() {
        return MPO_DENAP_RECEIVER;
    }

    private static final int MPO_IMMOVABLE_RECEIVE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define MPO_IMMOVABLE_RECEIVE 128
     * }
     */
    public static int MPO_IMMOVABLE_RECEIVE() {
        return MPO_IMMOVABLE_RECEIVE;
    }

    private static final int MPO_FILTER_MSG = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MPO_FILTER_MSG 256
     * }
     */
    public static int MPO_FILTER_MSG() {
        return MPO_FILTER_MSG;
    }

    private static final int MPO_TG_BLOCK_TRACKING = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define MPO_TG_BLOCK_TRACKING 512
     * }
     */
    public static int MPO_TG_BLOCK_TRACKING() {
        return MPO_TG_BLOCK_TRACKING;
    }

    private static final int MPO_SERVICE_PORT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MPO_SERVICE_PORT 1024
     * }
     */
    public static int MPO_SERVICE_PORT() {
        return MPO_SERVICE_PORT;
    }

    private static final int MPO_CONNECTION_PORT = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define MPO_CONNECTION_PORT 2048
     * }
     */
    public static int MPO_CONNECTION_PORT() {
        return MPO_CONNECTION_PORT;
    }

    private static final int MPO_REPLY_PORT = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define MPO_REPLY_PORT 4096
     * }
     */
    public static int MPO_REPLY_PORT() {
        return MPO_REPLY_PORT;
    }

    private static final int MPO_ENFORCE_REPLY_PORT_SEMANTICS = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define MPO_ENFORCE_REPLY_PORT_SEMANTICS 8192
     * }
     */
    public static int MPO_ENFORCE_REPLY_PORT_SEMANTICS() {
        return MPO_ENFORCE_REPLY_PORT_SEMANTICS;
    }

    private static final int MPO_PROVISIONAL_REPLY_PORT = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define MPO_PROVISIONAL_REPLY_PORT 16384
     * }
     */
    public static int MPO_PROVISIONAL_REPLY_PORT() {
        return MPO_PROVISIONAL_REPLY_PORT;
    }

    private static final int MPO_PROVISIONAL_ID_PROT_OPTOUT = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define MPO_PROVISIONAL_ID_PROT_OPTOUT 32768
     * }
     */
    public static int MPO_PROVISIONAL_ID_PROT_OPTOUT() {
        return MPO_PROVISIONAL_ID_PROT_OPTOUT;
    }

    private static final int GUARD_TYPE_MACH_PORT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define GUARD_TYPE_MACH_PORT 1
     * }
     */
    public static int GUARD_TYPE_MACH_PORT() {
        return GUARD_TYPE_MACH_PORT;
    }

    private static final int MPG_STRICT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MPG_STRICT 1
     * }
     */
    public static int MPG_STRICT() {
        return MPG_STRICT;
    }

    private static final int MPG_IMMOVABLE_RECEIVE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MPG_IMMOVABLE_RECEIVE 2
     * }
     */
    public static int MPG_IMMOVABLE_RECEIVE() {
        return MPG_IMMOVABLE_RECEIVE;
    }

    private static final int CRF_NOMEMBERD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CRF_NOMEMBERD 1
     * }
     */
    public static int CRF_NOMEMBERD() {
        return CRF_NOMEMBERD;
    }

    private static final int CRF_MAC_ENFORCE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CRF_MAC_ENFORCE 2
     * }
     */
    public static int CRF_MAC_ENFORCE() {
        return CRF_MAC_ENFORCE;
    }

    private static final int XUCRED_VERSION = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define XUCRED_VERSION 0
     * }
     */
    public static int XUCRED_VERSION() {
        return XUCRED_VERSION;
    }

    private static final int EVFILT_SYSCOUNT = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define EVFILT_SYSCOUNT 18
     * }
     */
    public static int EVFILT_SYSCOUNT() {
        return EVFILT_SYSCOUNT;
    }

    private static final int KEVENT_FLAG_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define KEVENT_FLAG_NONE 0
     * }
     */
    public static int KEVENT_FLAG_NONE() {
        return KEVENT_FLAG_NONE;
    }

    private static final int KEVENT_FLAG_IMMEDIATE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KEVENT_FLAG_IMMEDIATE 1
     * }
     */
    public static int KEVENT_FLAG_IMMEDIATE() {
        return KEVENT_FLAG_IMMEDIATE;
    }

    private static final int KEVENT_FLAG_ERROR_EVENTS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KEVENT_FLAG_ERROR_EVENTS 2
     * }
     */
    public static int KEVENT_FLAG_ERROR_EVENTS() {
        return KEVENT_FLAG_ERROR_EVENTS;
    }

    private static final int EV_ADD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define EV_ADD 1
     * }
     */
    public static int EV_ADD() {
        return EV_ADD;
    }

    private static final int EV_DELETE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define EV_DELETE 2
     * }
     */
    public static int EV_DELETE() {
        return EV_DELETE;
    }

    private static final int EV_ENABLE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define EV_ENABLE 4
     * }
     */
    public static int EV_ENABLE() {
        return EV_ENABLE;
    }

    private static final int EV_DISABLE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define EV_DISABLE 8
     * }
     */
    public static int EV_DISABLE() {
        return EV_DISABLE;
    }

    private static final int EV_ONESHOT = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define EV_ONESHOT 16
     * }
     */
    public static int EV_ONESHOT() {
        return EV_ONESHOT;
    }

    private static final int EV_CLEAR = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define EV_CLEAR 32
     * }
     */
    public static int EV_CLEAR() {
        return EV_CLEAR;
    }

    private static final int EV_RECEIPT = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define EV_RECEIPT 64
     * }
     */
    public static int EV_RECEIPT() {
        return EV_RECEIPT;
    }

    private static final int EV_DISPATCH = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define EV_DISPATCH 128
     * }
     */
    public static int EV_DISPATCH() {
        return EV_DISPATCH;
    }

    private static final int EV_UDATA_SPECIFIC = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define EV_UDATA_SPECIFIC 256
     * }
     */
    public static int EV_UDATA_SPECIFIC() {
        return EV_UDATA_SPECIFIC;
    }

    private static final int EV_VANISHED = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define EV_VANISHED 512
     * }
     */
    public static int EV_VANISHED() {
        return EV_VANISHED;
    }

    private static final int EV_SYSFLAGS = (int) 61440L;
    /**
     * {@snippet lang=c :
     * #define EV_SYSFLAGS 61440
     * }
     */
    public static int EV_SYSFLAGS() {
        return EV_SYSFLAGS;
    }

    private static final int EV_FLAG0 = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define EV_FLAG0 4096
     * }
     */
    public static int EV_FLAG0() {
        return EV_FLAG0;
    }

    private static final int EV_FLAG1 = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define EV_FLAG1 8192
     * }
     */
    public static int EV_FLAG1() {
        return EV_FLAG1;
    }

    private static final int EV_EOF = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define EV_EOF 32768
     * }
     */
    public static int EV_EOF() {
        return EV_EOF;
    }

    private static final int EV_ERROR = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define EV_ERROR 16384
     * }
     */
    public static int EV_ERROR() {
        return EV_ERROR;
    }

    private static final int NOTE_TRIGGER = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define NOTE_TRIGGER 16777216
     * }
     */
    public static int NOTE_TRIGGER() {
        return NOTE_TRIGGER;
    }

    private static final int NOTE_FFNOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFNOP 0
     * }
     */
    public static int NOTE_FFNOP() {
        return NOTE_FFNOP;
    }

    private static final int NOTE_FFAND = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFAND 1073741824
     * }
     */
    public static int NOTE_FFAND() {
        return NOTE_FFAND;
    }

    private static final int NOTE_FFLAGSMASK = (int) 16777215L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FFLAGSMASK 16777215
     * }
     */
    public static int NOTE_FFLAGSMASK() {
        return NOTE_FFLAGSMASK;
    }

    private static final int NOTE_LOWAT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NOTE_LOWAT 1
     * }
     */
    public static int NOTE_LOWAT() {
        return NOTE_LOWAT;
    }

    private static final int NOTE_OOB = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define NOTE_OOB 2
     * }
     */
    public static int NOTE_OOB() {
        return NOTE_OOB;
    }

    private static final int NOTE_DELETE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NOTE_DELETE 1
     * }
     */
    public static int NOTE_DELETE() {
        return NOTE_DELETE;
    }

    private static final int NOTE_WRITE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define NOTE_WRITE 2
     * }
     */
    public static int NOTE_WRITE() {
        return NOTE_WRITE;
    }

    private static final int NOTE_EXTEND = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXTEND 4
     * }
     */
    public static int NOTE_EXTEND() {
        return NOTE_EXTEND;
    }

    private static final int NOTE_ATTRIB = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define NOTE_ATTRIB 8
     * }
     */
    public static int NOTE_ATTRIB() {
        return NOTE_ATTRIB;
    }

    private static final int NOTE_LINK = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define NOTE_LINK 16
     * }
     */
    public static int NOTE_LINK() {
        return NOTE_LINK;
    }

    private static final int NOTE_RENAME = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define NOTE_RENAME 32
     * }
     */
    public static int NOTE_RENAME() {
        return NOTE_RENAME;
    }

    private static final int NOTE_REVOKE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define NOTE_REVOKE 64
     * }
     */
    public static int NOTE_REVOKE() {
        return NOTE_REVOKE;
    }

    private static final int NOTE_NONE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define NOTE_NONE 128
     * }
     */
    public static int NOTE_NONE() {
        return NOTE_NONE;
    }

    private static final int NOTE_FUNLOCK = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FUNLOCK 256
     * }
     */
    public static int NOTE_FUNLOCK() {
        return NOTE_FUNLOCK;
    }

    private static final int NOTE_LEASE_DOWNGRADE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define NOTE_LEASE_DOWNGRADE 512
     * }
     */
    public static int NOTE_LEASE_DOWNGRADE() {
        return NOTE_LEASE_DOWNGRADE;
    }

    private static final int NOTE_LEASE_RELEASE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define NOTE_LEASE_RELEASE 1024
     * }
     */
    public static int NOTE_LEASE_RELEASE() {
        return NOTE_LEASE_RELEASE;
    }

    private static final int NOTE_FORK = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define NOTE_FORK 1073741824
     * }
     */
    public static int NOTE_FORK() {
        return NOTE_FORK;
    }

    private static final int NOTE_EXEC = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXEC 536870912
     * }
     */
    public static int NOTE_EXEC() {
        return NOTE_EXEC;
    }

    private static final int NOTE_SIGNAL = (int) 134217728L;
    /**
     * {@snippet lang=c :
     * #define NOTE_SIGNAL 134217728
     * }
     */
    public static int NOTE_SIGNAL() {
        return NOTE_SIGNAL;
    }

    private static final int NOTE_EXITSTATUS = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXITSTATUS 67108864
     * }
     */
    public static int NOTE_EXITSTATUS() {
        return NOTE_EXITSTATUS;
    }

    private static final int NOTE_EXIT_DETAIL = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_DETAIL 33554432
     * }
     */
    public static int NOTE_EXIT_DETAIL() {
        return NOTE_EXIT_DETAIL;
    }

    private static final int NOTE_PDATAMASK = (int) 1048575L;
    /**
     * {@snippet lang=c :
     * #define NOTE_PDATAMASK 1048575
     * }
     */
    public static int NOTE_PDATAMASK() {
        return NOTE_PDATAMASK;
    }

    private static final int NOTE_EXIT_DETAIL_MASK = (int) 458752L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_DETAIL_MASK 458752
     * }
     */
    public static int NOTE_EXIT_DETAIL_MASK() {
        return NOTE_EXIT_DETAIL_MASK;
    }

    private static final int NOTE_EXIT_DECRYPTFAIL = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_DECRYPTFAIL 65536
     * }
     */
    public static int NOTE_EXIT_DECRYPTFAIL() {
        return NOTE_EXIT_DECRYPTFAIL;
    }

    private static final int NOTE_EXIT_MEMORY = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_MEMORY 131072
     * }
     */
    public static int NOTE_EXIT_MEMORY() {
        return NOTE_EXIT_MEMORY;
    }

    private static final int NOTE_EXIT_CSERROR = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define NOTE_EXIT_CSERROR 262144
     * }
     */
    public static int NOTE_EXIT_CSERROR() {
        return NOTE_EXIT_CSERROR;
    }

    private static final int NOTE_VM_PRESSURE_TERMINATE = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define NOTE_VM_PRESSURE_TERMINATE 1073741824
     * }
     */
    public static int NOTE_VM_PRESSURE_TERMINATE() {
        return NOTE_VM_PRESSURE_TERMINATE;
    }

    private static final int NOTE_VM_PRESSURE_SUDDEN_TERMINATE = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define NOTE_VM_PRESSURE_SUDDEN_TERMINATE 536870912
     * }
     */
    public static int NOTE_VM_PRESSURE_SUDDEN_TERMINATE() {
        return NOTE_VM_PRESSURE_SUDDEN_TERMINATE;
    }

    private static final int NOTE_VM_ERROR = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define NOTE_VM_ERROR 268435456
     * }
     */
    public static int NOTE_VM_ERROR() {
        return NOTE_VM_ERROR;
    }

    private static final int NOTE_SECONDS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NOTE_SECONDS 1
     * }
     */
    public static int NOTE_SECONDS() {
        return NOTE_SECONDS;
    }

    private static final int NOTE_USECONDS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define NOTE_USECONDS 2
     * }
     */
    public static int NOTE_USECONDS() {
        return NOTE_USECONDS;
    }

    private static final int NOTE_NSECONDS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define NOTE_NSECONDS 4
     * }
     */
    public static int NOTE_NSECONDS() {
        return NOTE_NSECONDS;
    }

    private static final int NOTE_ABSOLUTE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define NOTE_ABSOLUTE 8
     * }
     */
    public static int NOTE_ABSOLUTE() {
        return NOTE_ABSOLUTE;
    }

    private static final int NOTE_LEEWAY = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define NOTE_LEEWAY 16
     * }
     */
    public static int NOTE_LEEWAY() {
        return NOTE_LEEWAY;
    }

    private static final int NOTE_CRITICAL = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define NOTE_CRITICAL 32
     * }
     */
    public static int NOTE_CRITICAL() {
        return NOTE_CRITICAL;
    }

    private static final int NOTE_BACKGROUND = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define NOTE_BACKGROUND 64
     * }
     */
    public static int NOTE_BACKGROUND() {
        return NOTE_BACKGROUND;
    }

    private static final int NOTE_MACH_CONTINUOUS_TIME = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define NOTE_MACH_CONTINUOUS_TIME 128
     * }
     */
    public static int NOTE_MACH_CONTINUOUS_TIME() {
        return NOTE_MACH_CONTINUOUS_TIME;
    }

    private static final int NOTE_MACHTIME = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define NOTE_MACHTIME 256
     * }
     */
    public static int NOTE_MACHTIME() {
        return NOTE_MACHTIME;
    }

    private static final int NOTE_TRACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NOTE_TRACK 1
     * }
     */
    public static int NOTE_TRACK() {
        return NOTE_TRACK;
    }

    private static final int NOTE_TRACKERR = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define NOTE_TRACKERR 2
     * }
     */
    public static int NOTE_TRACKERR() {
        return NOTE_TRACKERR;
    }

    private static final int NOTE_CHILD = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define NOTE_CHILD 4
     * }
     */
    public static int NOTE_CHILD() {
        return NOTE_CHILD;
    }

    private static final int SIDL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIDL 1
     * }
     */
    public static int SIDL() {
        return SIDL;
    }

    private static final int SRUN = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SRUN 2
     * }
     */
    public static int SRUN() {
        return SRUN;
    }

    private static final int SSLEEP = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SSLEEP 3
     * }
     */
    public static int SSLEEP() {
        return SSLEEP;
    }

    private static final int SSTOP = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SSTOP 4
     * }
     */
    public static int SSTOP() {
        return SSTOP;
    }

    private static final int SZOMB = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define SZOMB 5
     * }
     */
    public static int SZOMB() {
        return SZOMB;
    }

    private static final int P_ADVLOCK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define P_ADVLOCK 1
     * }
     */
    public static int P_ADVLOCK() {
        return P_ADVLOCK;
    }

    private static final int P_CONTROLT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define P_CONTROLT 2
     * }
     */
    public static int P_CONTROLT() {
        return P_CONTROLT;
    }

    private static final int P_LP64 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define P_LP64 4
     * }
     */
    public static int P_LP64() {
        return P_LP64;
    }

    private static final int P_NOCLDSTOP = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define P_NOCLDSTOP 8
     * }
     */
    public static int P_NOCLDSTOP() {
        return P_NOCLDSTOP;
    }

    private static final int P_PPWAIT = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define P_PPWAIT 16
     * }
     */
    public static int P_PPWAIT() {
        return P_PPWAIT;
    }

    private static final int P_PROFIL = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define P_PROFIL 32
     * }
     */
    public static int P_PROFIL() {
        return P_PROFIL;
    }

    private static final int P_SELECT = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define P_SELECT 64
     * }
     */
    public static int P_SELECT() {
        return P_SELECT;
    }

    private static final int P_CONTINUED = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define P_CONTINUED 128
     * }
     */
    public static int P_CONTINUED() {
        return P_CONTINUED;
    }

    private static final int P_SUGID = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define P_SUGID 256
     * }
     */
    public static int P_SUGID() {
        return P_SUGID;
    }

    private static final int P_SYSTEM = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define P_SYSTEM 512
     * }
     */
    public static int P_SYSTEM() {
        return P_SYSTEM;
    }

    private static final int P_TIMEOUT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define P_TIMEOUT 1024
     * }
     */
    public static int P_TIMEOUT() {
        return P_TIMEOUT;
    }

    private static final int P_TRACED = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define P_TRACED 2048
     * }
     */
    public static int P_TRACED() {
        return P_TRACED;
    }

    private static final int P_DISABLE_ASLR = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define P_DISABLE_ASLR 4096
     * }
     */
    public static int P_DISABLE_ASLR() {
        return P_DISABLE_ASLR;
    }

    private static final int P_WEXIT = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define P_WEXIT 8192
     * }
     */
    public static int P_WEXIT() {
        return P_WEXIT;
    }

    private static final int P_EXEC = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define P_EXEC 16384
     * }
     */
    public static int P_EXEC() {
        return P_EXEC;
    }

    private static final int P_OWEUPC = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define P_OWEUPC 32768
     * }
     */
    public static int P_OWEUPC() {
        return P_OWEUPC;
    }

    private static final int P_AFFINITY = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define P_AFFINITY 65536
     * }
     */
    public static int P_AFFINITY() {
        return P_AFFINITY;
    }

    private static final int P_TRANSLATED = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define P_TRANSLATED 131072
     * }
     */
    public static int P_TRANSLATED() {
        return P_TRANSLATED;
    }

    private static final int P_DELAYIDLESLEEP = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define P_DELAYIDLESLEEP 262144
     * }
     */
    public static int P_DELAYIDLESLEEP() {
        return P_DELAYIDLESLEEP;
    }

    private static final int P_CHECKOPENEVT = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define P_CHECKOPENEVT 524288
     * }
     */
    public static int P_CHECKOPENEVT() {
        return P_CHECKOPENEVT;
    }

    private static final int P_DEPENDENCY_CAPABLE = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define P_DEPENDENCY_CAPABLE 1048576
     * }
     */
    public static int P_DEPENDENCY_CAPABLE() {
        return P_DEPENDENCY_CAPABLE;
    }

    private static final int P_REBOOT = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define P_REBOOT 2097152
     * }
     */
    public static int P_REBOOT() {
        return P_REBOOT;
    }

    private static final int P_RESV6 = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define P_RESV6 4194304
     * }
     */
    public static int P_RESV6() {
        return P_RESV6;
    }

    private static final int P_RESV7 = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define P_RESV7 8388608
     * }
     */
    public static int P_RESV7() {
        return P_RESV7;
    }

    private static final int P_THCWD = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define P_THCWD 16777216
     * }
     */
    public static int P_THCWD() {
        return P_THCWD;
    }

    private static final int P_RESV9 = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define P_RESV9 33554432
     * }
     */
    public static int P_RESV9() {
        return P_RESV9;
    }

    private static final int P_ADOPTPERSONA = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define P_ADOPTPERSONA 67108864
     * }
     */
    public static int P_ADOPTPERSONA() {
        return P_ADOPTPERSONA;
    }

    private static final int P_RESV11 = (int) 134217728L;
    /**
     * {@snippet lang=c :
     * #define P_RESV11 134217728
     * }
     */
    public static int P_RESV11() {
        return P_RESV11;
    }

    private static final int P_NOSHLIB = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define P_NOSHLIB 268435456
     * }
     */
    public static int P_NOSHLIB() {
        return P_NOSHLIB;
    }

    private static final int P_FORCEQUOTA = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define P_FORCEQUOTA 536870912
     * }
     */
    public static int P_FORCEQUOTA() {
        return P_FORCEQUOTA;
    }

    private static final int P_NOCLDWAIT = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define P_NOCLDWAIT 1073741824
     * }
     */
    public static int P_NOCLDWAIT() {
        return P_NOCLDWAIT;
    }

    private static final int P_INMEM = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define P_INMEM 0
     * }
     */
    public static int P_INMEM() {
        return P_INMEM;
    }

    private static final int P_NOSWAP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define P_NOSWAP 0
     * }
     */
    public static int P_NOSWAP() {
        return P_NOSWAP;
    }

    private static final int P_PHYSIO = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define P_PHYSIO 0
     * }
     */
    public static int P_PHYSIO() {
        return P_PHYSIO;
    }

    private static final int P_FSTRACE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define P_FSTRACE 0
     * }
     */
    public static int P_FSTRACE() {
        return P_FSTRACE;
    }

    private static final int P_SSTEP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define P_SSTEP 0
     * }
     */
    public static int P_SSTEP() {
        return P_SSTEP;
    }

    private static final int P_DIRTY_TRACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_TRACK 1
     * }
     */
    public static int P_DIRTY_TRACK() {
        return P_DIRTY_TRACK;
    }

    private static final int P_DIRTY_ALLOW_IDLE_EXIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_ALLOW_IDLE_EXIT 2
     * }
     */
    public static int P_DIRTY_ALLOW_IDLE_EXIT() {
        return P_DIRTY_ALLOW_IDLE_EXIT;
    }

    private static final int P_DIRTY_DEFER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_DEFER 4
     * }
     */
    public static int P_DIRTY_DEFER() {
        return P_DIRTY_DEFER;
    }

    private static final int P_DIRTY = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY 8
     * }
     */
    public static int P_DIRTY() {
        return P_DIRTY;
    }

    private static final int P_DIRTY_SHUTDOWN = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_SHUTDOWN 16
     * }
     */
    public static int P_DIRTY_SHUTDOWN() {
        return P_DIRTY_SHUTDOWN;
    }

    private static final int P_DIRTY_TERMINATED = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_TERMINATED 32
     * }
     */
    public static int P_DIRTY_TERMINATED() {
        return P_DIRTY_TERMINATED;
    }

    private static final int P_DIRTY_BUSY = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_BUSY 64
     * }
     */
    public static int P_DIRTY_BUSY() {
        return P_DIRTY_BUSY;
    }

    private static final int P_DIRTY_MARKED = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_MARKED 128
     * }
     */
    public static int P_DIRTY_MARKED() {
        return P_DIRTY_MARKED;
    }

    private static final int P_DIRTY_AGING_IN_PROGRESS = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_AGING_IN_PROGRESS 256
     * }
     */
    public static int P_DIRTY_AGING_IN_PROGRESS() {
        return P_DIRTY_AGING_IN_PROGRESS;
    }

    private static final int P_DIRTY_LAUNCH_IN_PROGRESS = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_LAUNCH_IN_PROGRESS 512
     * }
     */
    public static int P_DIRTY_LAUNCH_IN_PROGRESS() {
        return P_DIRTY_LAUNCH_IN_PROGRESS;
    }

    private static final int P_DIRTY_DEFER_ALWAYS = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define P_DIRTY_DEFER_ALWAYS 1024
     * }
     */
    public static int P_DIRTY_DEFER_ALWAYS() {
        return P_DIRTY_DEFER_ALWAYS;
    }

    private static final int CTL_MAXNAME = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define CTL_MAXNAME 12
     * }
     */
    public static int CTL_MAXNAME() {
        return CTL_MAXNAME;
    }

    private static final int CTLTYPE = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE 15
     * }
     */
    public static int CTLTYPE() {
        return CTLTYPE;
    }

    private static final int CTLTYPE_NODE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE_NODE 1
     * }
     */
    public static int CTLTYPE_NODE() {
        return CTLTYPE_NODE;
    }

    private static final int CTLTYPE_INT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE_INT 2
     * }
     */
    public static int CTLTYPE_INT() {
        return CTLTYPE_INT;
    }

    private static final int CTLTYPE_STRING = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE_STRING 3
     * }
     */
    public static int CTLTYPE_STRING() {
        return CTLTYPE_STRING;
    }

    private static final int CTLTYPE_QUAD = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE_QUAD 4
     * }
     */
    public static int CTLTYPE_QUAD() {
        return CTLTYPE_QUAD;
    }

    private static final int CTLTYPE_OPAQUE = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CTLTYPE_OPAQUE 5
     * }
     */
    public static int CTLTYPE_OPAQUE() {
        return CTLTYPE_OPAQUE;
    }

    private static final int CTLFLAG_WR = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_WR 1073741824
     * }
     */
    public static int CTLFLAG_WR() {
        return CTLFLAG_WR;
    }

    private static final int CTLFLAG_NOLOCK = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_NOLOCK 536870912
     * }
     */
    public static int CTLFLAG_NOLOCK() {
        return CTLFLAG_NOLOCK;
    }

    private static final int CTLFLAG_ANYBODY = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_ANYBODY 268435456
     * }
     */
    public static int CTLFLAG_ANYBODY() {
        return CTLFLAG_ANYBODY;
    }

    private static final int CTLFLAG_SECURE = (int) 134217728L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_SECURE 134217728
     * }
     */
    public static int CTLFLAG_SECURE() {
        return CTLFLAG_SECURE;
    }

    private static final int CTLFLAG_MASKED = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_MASKED 67108864
     * }
     */
    public static int CTLFLAG_MASKED() {
        return CTLFLAG_MASKED;
    }

    private static final int CTLFLAG_NOAUTO = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_NOAUTO 33554432
     * }
     */
    public static int CTLFLAG_NOAUTO() {
        return CTLFLAG_NOAUTO;
    }

    private static final int CTLFLAG_KERN = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_KERN 16777216
     * }
     */
    public static int CTLFLAG_KERN() {
        return CTLFLAG_KERN;
    }

    private static final int CTLFLAG_LOCKED = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_LOCKED 8388608
     * }
     */
    public static int CTLFLAG_LOCKED() {
        return CTLFLAG_LOCKED;
    }

    private static final int CTLFLAG_OID2 = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_OID2 4194304
     * }
     */
    public static int CTLFLAG_OID2() {
        return CTLFLAG_OID2;
    }

    private static final int CTLFLAG_EXPERIMENT = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define CTLFLAG_EXPERIMENT 1048576
     * }
     */
    public static int CTLFLAG_EXPERIMENT() {
        return CTLFLAG_EXPERIMENT;
    }

    private static final int OID_AUTO_START = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define OID_AUTO_START 100
     * }
     */
    public static int OID_AUTO_START() {
        return OID_AUTO_START;
    }

    private static final int CTL_UNSPEC = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CTL_UNSPEC 0
     * }
     */
    public static int CTL_UNSPEC() {
        return CTL_UNSPEC;
    }

    private static final int CTL_KERN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CTL_KERN 1
     * }
     */
    public static int CTL_KERN() {
        return CTL_KERN;
    }

    private static final int CTL_VM = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CTL_VM 2
     * }
     */
    public static int CTL_VM() {
        return CTL_VM;
    }

    private static final int CTL_VFS = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CTL_VFS 3
     * }
     */
    public static int CTL_VFS() {
        return CTL_VFS;
    }

    private static final int CTL_NET = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CTL_NET 4
     * }
     */
    public static int CTL_NET() {
        return CTL_NET;
    }

    private static final int CTL_DEBUG = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CTL_DEBUG 5
     * }
     */
    public static int CTL_DEBUG() {
        return CTL_DEBUG;
    }

    private static final int CTL_HW = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CTL_HW 6
     * }
     */
    public static int CTL_HW() {
        return CTL_HW;
    }

    private static final int CTL_MACHDEP = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define CTL_MACHDEP 7
     * }
     */
    public static int CTL_MACHDEP() {
        return CTL_MACHDEP;
    }

    private static final int CTL_USER = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CTL_USER 8
     * }
     */
    public static int CTL_USER() {
        return CTL_USER;
    }

    private static final int CTL_MAXID = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define CTL_MAXID 9
     * }
     */
    public static int CTL_MAXID() {
        return CTL_MAXID;
    }

    private static final int KERN_OSTYPE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_OSTYPE 1
     * }
     */
    public static int KERN_OSTYPE() {
        return KERN_OSTYPE;
    }

    private static final int KERN_OSRELEASE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_OSRELEASE 2
     * }
     */
    public static int KERN_OSRELEASE() {
        return KERN_OSRELEASE;
    }

    private static final int KERN_OSREV = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define KERN_OSREV 3
     * }
     */
    public static int KERN_OSREV() {
        return KERN_OSREV;
    }

    private static final int KERN_VERSION = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define KERN_VERSION 4
     * }
     */
    public static int KERN_VERSION() {
        return KERN_VERSION;
    }

    private static final int KERN_MAXVNODES = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXVNODES 5
     * }
     */
    public static int KERN_MAXVNODES() {
        return KERN_MAXVNODES;
    }

    private static final int KERN_MAXPROC = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXPROC 6
     * }
     */
    public static int KERN_MAXPROC() {
        return KERN_MAXPROC;
    }

    private static final int KERN_MAXFILES = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXFILES 7
     * }
     */
    public static int KERN_MAXFILES() {
        return KERN_MAXFILES;
    }

    private static final int KERN_ARGMAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define KERN_ARGMAX 8
     * }
     */
    public static int KERN_ARGMAX() {
        return KERN_ARGMAX;
    }

    private static final int KERN_SECURELVL = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define KERN_SECURELVL 9
     * }
     */
    public static int KERN_SECURELVL() {
        return KERN_SECURELVL;
    }

    private static final int KERN_HOSTNAME = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define KERN_HOSTNAME 10
     * }
     */
    public static int KERN_HOSTNAME() {
        return KERN_HOSTNAME;
    }

    private static final int KERN_HOSTID = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define KERN_HOSTID 11
     * }
     */
    public static int KERN_HOSTID() {
        return KERN_HOSTID;
    }

    private static final int KERN_CLOCKRATE = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define KERN_CLOCKRATE 12
     * }
     */
    public static int KERN_CLOCKRATE() {
        return KERN_CLOCKRATE;
    }

    private static final int KERN_VNODE = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define KERN_VNODE 13
     * }
     */
    public static int KERN_VNODE() {
        return KERN_VNODE;
    }

    private static final int KERN_PROC = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC 14
     * }
     */
    public static int KERN_PROC() {
        return KERN_PROC;
    }

    private static final int KERN_FILE = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define KERN_FILE 15
     * }
     */
    public static int KERN_FILE() {
        return KERN_FILE;
    }

    private static final int KERN_PROF = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROF 16
     * }
     */
    public static int KERN_PROF() {
        return KERN_PROF;
    }

    private static final int KERN_POSIX1 = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define KERN_POSIX1 17
     * }
     */
    public static int KERN_POSIX1() {
        return KERN_POSIX1;
    }

    private static final int KERN_NGROUPS = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define KERN_NGROUPS 18
     * }
     */
    public static int KERN_NGROUPS() {
        return KERN_NGROUPS;
    }

    private static final int KERN_JOB_CONTROL = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define KERN_JOB_CONTROL 19
     * }
     */
    public static int KERN_JOB_CONTROL() {
        return KERN_JOB_CONTROL;
    }

    private static final int KERN_SAVED_IDS = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define KERN_SAVED_IDS 20
     * }
     */
    public static int KERN_SAVED_IDS() {
        return KERN_SAVED_IDS;
    }

    private static final int KERN_BOOTTIME = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define KERN_BOOTTIME 21
     * }
     */
    public static int KERN_BOOTTIME() {
        return KERN_BOOTTIME;
    }

    private static final int KERN_NISDOMAINNAME = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define KERN_NISDOMAINNAME 22
     * }
     */
    public static int KERN_NISDOMAINNAME() {
        return KERN_NISDOMAINNAME;
    }

    private static final int KERN_MAXPARTITIONS = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXPARTITIONS 23
     * }
     */
    public static int KERN_MAXPARTITIONS() {
        return KERN_MAXPARTITIONS;
    }

    private static final int KERN_KDEBUG = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDEBUG 24
     * }
     */
    public static int KERN_KDEBUG() {
        return KERN_KDEBUG;
    }

    private static final int KERN_UPDATEINTERVAL = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define KERN_UPDATEINTERVAL 25
     * }
     */
    public static int KERN_UPDATEINTERVAL() {
        return KERN_UPDATEINTERVAL;
    }

    private static final int KERN_OSRELDATE = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define KERN_OSRELDATE 26
     * }
     */
    public static int KERN_OSRELDATE() {
        return KERN_OSRELDATE;
    }

    private static final int KERN_NTP_PLL = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define KERN_NTP_PLL 27
     * }
     */
    public static int KERN_NTP_PLL() {
        return KERN_NTP_PLL;
    }

    private static final int KERN_BOOTFILE = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define KERN_BOOTFILE 28
     * }
     */
    public static int KERN_BOOTFILE() {
        return KERN_BOOTFILE;
    }

    private static final int KERN_MAXFILESPERPROC = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXFILESPERPROC 29
     * }
     */
    public static int KERN_MAXFILESPERPROC() {
        return KERN_MAXFILESPERPROC;
    }

    private static final int KERN_MAXPROCPERUID = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXPROCPERUID 30
     * }
     */
    public static int KERN_MAXPROCPERUID() {
        return KERN_MAXPROCPERUID;
    }

    private static final int KERN_DUMPDEV = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define KERN_DUMPDEV 31
     * }
     */
    public static int KERN_DUMPDEV() {
        return KERN_DUMPDEV;
    }

    private static final int KERN_IPC = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define KERN_IPC 32
     * }
     */
    public static int KERN_IPC() {
        return KERN_IPC;
    }

    private static final int KERN_DUMMY = (int) 33L;
    /**
     * {@snippet lang=c :
     * #define KERN_DUMMY 33
     * }
     */
    public static int KERN_DUMMY() {
        return KERN_DUMMY;
    }

    private static final int KERN_PS_STRINGS = (int) 34L;
    /**
     * {@snippet lang=c :
     * #define KERN_PS_STRINGS 34
     * }
     */
    public static int KERN_PS_STRINGS() {
        return KERN_PS_STRINGS;
    }

    private static final int KERN_USRSTACK32 = (int) 35L;
    /**
     * {@snippet lang=c :
     * #define KERN_USRSTACK32 35
     * }
     */
    public static int KERN_USRSTACK32() {
        return KERN_USRSTACK32;
    }

    private static final int KERN_LOGSIGEXIT = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define KERN_LOGSIGEXIT 36
     * }
     */
    public static int KERN_LOGSIGEXIT() {
        return KERN_LOGSIGEXIT;
    }

    private static final int KERN_SYMFILE = (int) 37L;
    /**
     * {@snippet lang=c :
     * #define KERN_SYMFILE 37
     * }
     */
    public static int KERN_SYMFILE() {
        return KERN_SYMFILE;
    }

    private static final int KERN_PROCARGS = (int) 38L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROCARGS 38
     * }
     */
    public static int KERN_PROCARGS() {
        return KERN_PROCARGS;
    }

    private static final int KERN_NETBOOT = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define KERN_NETBOOT 40
     * }
     */
    public static int KERN_NETBOOT() {
        return KERN_NETBOOT;
    }

    private static final int KERN_SYSV = (int) 42L;
    /**
     * {@snippet lang=c :
     * #define KERN_SYSV 42
     * }
     */
    public static int KERN_SYSV() {
        return KERN_SYSV;
    }

    private static final int KERN_AFFINITY = (int) 43L;
    /**
     * {@snippet lang=c :
     * #define KERN_AFFINITY 43
     * }
     */
    public static int KERN_AFFINITY() {
        return KERN_AFFINITY;
    }

    private static final int KERN_TRANSLATE = (int) 44L;
    /**
     * {@snippet lang=c :
     * #define KERN_TRANSLATE 44
     * }
     */
    public static int KERN_TRANSLATE() {
        return KERN_TRANSLATE;
    }

    private static final int KERN_EXEC = (int) 45L;
    /**
     * {@snippet lang=c :
     * #define KERN_EXEC 45
     * }
     */
    public static int KERN_EXEC() {
        return KERN_EXEC;
    }

    private static final int KERN_AIOMAX = (int) 46L;
    /**
     * {@snippet lang=c :
     * #define KERN_AIOMAX 46
     * }
     */
    public static int KERN_AIOMAX() {
        return KERN_AIOMAX;
    }

    private static final int KERN_AIOPROCMAX = (int) 47L;
    /**
     * {@snippet lang=c :
     * #define KERN_AIOPROCMAX 47
     * }
     */
    public static int KERN_AIOPROCMAX() {
        return KERN_AIOPROCMAX;
    }

    private static final int KERN_AIOTHREADS = (int) 48L;
    /**
     * {@snippet lang=c :
     * #define KERN_AIOTHREADS 48
     * }
     */
    public static int KERN_AIOTHREADS() {
        return KERN_AIOTHREADS;
    }

    private static final int KERN_PROCARGS2 = (int) 49L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROCARGS2 49
     * }
     */
    public static int KERN_PROCARGS2() {
        return KERN_PROCARGS2;
    }

    private static final int KERN_COREFILE = (int) 50L;
    /**
     * {@snippet lang=c :
     * #define KERN_COREFILE 50
     * }
     */
    public static int KERN_COREFILE() {
        return KERN_COREFILE;
    }

    private static final int KERN_COREDUMP = (int) 51L;
    /**
     * {@snippet lang=c :
     * #define KERN_COREDUMP 51
     * }
     */
    public static int KERN_COREDUMP() {
        return KERN_COREDUMP;
    }

    private static final int KERN_SUGID_COREDUMP = (int) 52L;
    /**
     * {@snippet lang=c :
     * #define KERN_SUGID_COREDUMP 52
     * }
     */
    public static int KERN_SUGID_COREDUMP() {
        return KERN_SUGID_COREDUMP;
    }

    private static final int KERN_PROCDELAYTERM = (int) 53L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROCDELAYTERM 53
     * }
     */
    public static int KERN_PROCDELAYTERM() {
        return KERN_PROCDELAYTERM;
    }

    private static final int KERN_SHREG_PRIVATIZABLE = (int) 54L;
    /**
     * {@snippet lang=c :
     * #define KERN_SHREG_PRIVATIZABLE 54
     * }
     */
    public static int KERN_SHREG_PRIVATIZABLE() {
        return KERN_SHREG_PRIVATIZABLE;
    }

    private static final int KERN_LOW_PRI_WINDOW = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define KERN_LOW_PRI_WINDOW 56
     * }
     */
    public static int KERN_LOW_PRI_WINDOW() {
        return KERN_LOW_PRI_WINDOW;
    }

    private static final int KERN_LOW_PRI_DELAY = (int) 57L;
    /**
     * {@snippet lang=c :
     * #define KERN_LOW_PRI_DELAY 57
     * }
     */
    public static int KERN_LOW_PRI_DELAY() {
        return KERN_LOW_PRI_DELAY;
    }

    private static final int KERN_POSIX = (int) 58L;
    /**
     * {@snippet lang=c :
     * #define KERN_POSIX 58
     * }
     */
    public static int KERN_POSIX() {
        return KERN_POSIX;
    }

    private static final int KERN_USRSTACK64 = (int) 59L;
    /**
     * {@snippet lang=c :
     * #define KERN_USRSTACK64 59
     * }
     */
    public static int KERN_USRSTACK64() {
        return KERN_USRSTACK64;
    }

    private static final int KERN_NX_PROTECTION = (int) 60L;
    /**
     * {@snippet lang=c :
     * #define KERN_NX_PROTECTION 60
     * }
     */
    public static int KERN_NX_PROTECTION() {
        return KERN_NX_PROTECTION;
    }

    private static final int KERN_TFP = (int) 61L;
    /**
     * {@snippet lang=c :
     * #define KERN_TFP 61
     * }
     */
    public static int KERN_TFP() {
        return KERN_TFP;
    }

    private static final int KERN_PROCNAME = (int) 62L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROCNAME 62
     * }
     */
    public static int KERN_PROCNAME() {
        return KERN_PROCNAME;
    }

    private static final int KERN_THALTSTACK = (int) 63L;
    /**
     * {@snippet lang=c :
     * #define KERN_THALTSTACK 63
     * }
     */
    public static int KERN_THALTSTACK() {
        return KERN_THALTSTACK;
    }

    private static final int KERN_SPECULATIVE_READS = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define KERN_SPECULATIVE_READS 64
     * }
     */
    public static int KERN_SPECULATIVE_READS() {
        return KERN_SPECULATIVE_READS;
    }

    private static final int KERN_OSVERSION = (int) 65L;
    /**
     * {@snippet lang=c :
     * #define KERN_OSVERSION 65
     * }
     */
    public static int KERN_OSVERSION() {
        return KERN_OSVERSION;
    }

    private static final int KERN_SAFEBOOT = (int) 66L;
    /**
     * {@snippet lang=c :
     * #define KERN_SAFEBOOT 66
     * }
     */
    public static int KERN_SAFEBOOT() {
        return KERN_SAFEBOOT;
    }

    private static final int KERN_RAGEVNODE = (int) 68L;
    /**
     * {@snippet lang=c :
     * #define KERN_RAGEVNODE 68
     * }
     */
    public static int KERN_RAGEVNODE() {
        return KERN_RAGEVNODE;
    }

    private static final int KERN_TTY = (int) 69L;
    /**
     * {@snippet lang=c :
     * #define KERN_TTY 69
     * }
     */
    public static int KERN_TTY() {
        return KERN_TTY;
    }

    private static final int KERN_CHECKOPENEVT = (int) 70L;
    /**
     * {@snippet lang=c :
     * #define KERN_CHECKOPENEVT 70
     * }
     */
    public static int KERN_CHECKOPENEVT() {
        return KERN_CHECKOPENEVT;
    }

    private static final int KERN_THREADNAME = (int) 71L;
    /**
     * {@snippet lang=c :
     * #define KERN_THREADNAME 71
     * }
     */
    public static int KERN_THREADNAME() {
        return KERN_THREADNAME;
    }

    private static final int KERN_MAXID = (int) 72L;
    /**
     * {@snippet lang=c :
     * #define KERN_MAXID 72
     * }
     */
    public static int KERN_MAXID() {
        return KERN_MAXID;
    }

    private static final int KERN_RAGE_PROC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_RAGE_PROC 1
     * }
     */
    public static int KERN_RAGE_PROC() {
        return KERN_RAGE_PROC;
    }

    private static final int KERN_RAGE_THREAD = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_RAGE_THREAD 2
     * }
     */
    public static int KERN_RAGE_THREAD() {
        return KERN_RAGE_THREAD;
    }

    private static final int KERN_UNRAGE_PROC = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define KERN_UNRAGE_PROC 3
     * }
     */
    public static int KERN_UNRAGE_PROC() {
        return KERN_UNRAGE_PROC;
    }

    private static final int KERN_UNRAGE_THREAD = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define KERN_UNRAGE_THREAD 4
     * }
     */
    public static int KERN_UNRAGE_THREAD() {
        return KERN_UNRAGE_THREAD;
    }

    private static final int KERN_OPENEVT_PROC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_OPENEVT_PROC 1
     * }
     */
    public static int KERN_OPENEVT_PROC() {
        return KERN_OPENEVT_PROC;
    }

    private static final int KERN_UNOPENEVT_PROC = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_UNOPENEVT_PROC 2
     * }
     */
    public static int KERN_UNOPENEVT_PROC() {
        return KERN_UNOPENEVT_PROC;
    }

    private static final int KERN_TFP_POLICY = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_TFP_POLICY 1
     * }
     */
    public static int KERN_TFP_POLICY() {
        return KERN_TFP_POLICY;
    }

    private static final int KERN_TFP_POLICY_DENY = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define KERN_TFP_POLICY_DENY 0
     * }
     */
    public static int KERN_TFP_POLICY_DENY() {
        return KERN_TFP_POLICY_DENY;
    }

    private static final int KERN_TFP_POLICY_DEFAULT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_TFP_POLICY_DEFAULT 2
     * }
     */
    public static int KERN_TFP_POLICY_DEFAULT() {
        return KERN_TFP_POLICY_DEFAULT;
    }

    private static final int KERN_KDEFLAGS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDEFLAGS 1
     * }
     */
    public static int KERN_KDEFLAGS() {
        return KERN_KDEFLAGS;
    }

    private static final int KERN_KDDFLAGS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDDFLAGS 2
     * }
     */
    public static int KERN_KDDFLAGS() {
        return KERN_KDDFLAGS;
    }

    private static final int KERN_KDENABLE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDENABLE 3
     * }
     */
    public static int KERN_KDENABLE() {
        return KERN_KDENABLE;
    }

    private static final int KERN_KDSETBUF = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSETBUF 4
     * }
     */
    public static int KERN_KDSETBUF() {
        return KERN_KDSETBUF;
    }

    private static final int KERN_KDGETBUF = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDGETBUF 5
     * }
     */
    public static int KERN_KDGETBUF() {
        return KERN_KDGETBUF;
    }

    private static final int KERN_KDSETUP = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSETUP 6
     * }
     */
    public static int KERN_KDSETUP() {
        return KERN_KDSETUP;
    }

    private static final int KERN_KDREMOVE = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDREMOVE 7
     * }
     */
    public static int KERN_KDREMOVE() {
        return KERN_KDREMOVE;
    }

    private static final int KERN_KDSETREG = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSETREG 8
     * }
     */
    public static int KERN_KDSETREG() {
        return KERN_KDSETREG;
    }

    private static final int KERN_KDGETREG = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDGETREG 9
     * }
     */
    public static int KERN_KDGETREG() {
        return KERN_KDGETREG;
    }

    private static final int KERN_KDREADTR = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDREADTR 10
     * }
     */
    public static int KERN_KDREADTR() {
        return KERN_KDREADTR;
    }

    private static final int KERN_KDPIDTR = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDPIDTR 11
     * }
     */
    public static int KERN_KDPIDTR() {
        return KERN_KDPIDTR;
    }

    private static final int KERN_KDTHRMAP = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDTHRMAP 12
     * }
     */
    public static int KERN_KDTHRMAP() {
        return KERN_KDTHRMAP;
    }

    private static final int KERN_KDPIDEX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDPIDEX 14
     * }
     */
    public static int KERN_KDPIDEX() {
        return KERN_KDPIDEX;
    }

    private static final int KERN_KDSETRTCDEC = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSETRTCDEC 15
     * }
     */
    public static int KERN_KDSETRTCDEC() {
        return KERN_KDSETRTCDEC;
    }

    private static final int KERN_KDGETENTROPY = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDGETENTROPY 16
     * }
     */
    public static int KERN_KDGETENTROPY() {
        return KERN_KDGETENTROPY;
    }

    private static final int KERN_KDWRITETR = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDWRITETR 17
     * }
     */
    public static int KERN_KDWRITETR() {
        return KERN_KDWRITETR;
    }

    private static final int KERN_KDWRITEMAP = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDWRITEMAP 18
     * }
     */
    public static int KERN_KDWRITEMAP() {
        return KERN_KDWRITEMAP;
    }

    private static final int KERN_KDTEST = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDTEST 19
     * }
     */
    public static int KERN_KDTEST() {
        return KERN_KDTEST;
    }

    private static final int KERN_KDREADCURTHRMAP = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDREADCURTHRMAP 21
     * }
     */
    public static int KERN_KDREADCURTHRMAP() {
        return KERN_KDREADCURTHRMAP;
    }

    private static final int KERN_KDSET_TYPEFILTER = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSET_TYPEFILTER 22
     * }
     */
    public static int KERN_KDSET_TYPEFILTER() {
        return KERN_KDSET_TYPEFILTER;
    }

    private static final int KERN_KDBUFWAIT = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDBUFWAIT 23
     * }
     */
    public static int KERN_KDBUFWAIT() {
        return KERN_KDBUFWAIT;
    }

    private static final int KERN_KDCPUMAP = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDCPUMAP 24
     * }
     */
    public static int KERN_KDCPUMAP() {
        return KERN_KDCPUMAP;
    }

    private static final int KERN_KDCPUMAP_EXT = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDCPUMAP_EXT 25
     * }
     */
    public static int KERN_KDCPUMAP_EXT() {
        return KERN_KDCPUMAP_EXT;
    }

    private static final int KERN_KDSET_EDM = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDSET_EDM 26
     * }
     */
    public static int KERN_KDSET_EDM() {
        return KERN_KDSET_EDM;
    }

    private static final int KERN_KDGET_EDM = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDGET_EDM 27
     * }
     */
    public static int KERN_KDGET_EDM() {
        return KERN_KDGET_EDM;
    }

    private static final int KERN_KDWRITETR_V3 = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define KERN_KDWRITETR_V3 28
     * }
     */
    public static int KERN_KDWRITETR_V3() {
        return KERN_KDWRITETR_V3;
    }

    private static final int KERN_PROC_ALL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_ALL 0
     * }
     */
    public static int KERN_PROC_ALL() {
        return KERN_PROC_ALL;
    }

    private static final int KERN_PROC_PID = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_PID 1
     * }
     */
    public static int KERN_PROC_PID() {
        return KERN_PROC_PID;
    }

    private static final int KERN_PROC_PGRP = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_PGRP 2
     * }
     */
    public static int KERN_PROC_PGRP() {
        return KERN_PROC_PGRP;
    }

    private static final int KERN_PROC_SESSION = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_SESSION 3
     * }
     */
    public static int KERN_PROC_SESSION() {
        return KERN_PROC_SESSION;
    }

    private static final int KERN_PROC_TTY = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_TTY 4
     * }
     */
    public static int KERN_PROC_TTY() {
        return KERN_PROC_TTY;
    }

    private static final int KERN_PROC_UID = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_UID 5
     * }
     */
    public static int KERN_PROC_UID() {
        return KERN_PROC_UID;
    }

    private static final int KERN_PROC_RUID = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_RUID 6
     * }
     */
    public static int KERN_PROC_RUID() {
        return KERN_PROC_RUID;
    }

    private static final int KERN_PROC_LCID = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define KERN_PROC_LCID 7
     * }
     */
    public static int KERN_PROC_LCID() {
        return KERN_PROC_LCID;
    }

    private static final int KERN_VFSNSPACE_HANDLE_PROC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KERN_VFSNSPACE_HANDLE_PROC 1
     * }
     */
    public static int KERN_VFSNSPACE_HANDLE_PROC() {
        return KERN_VFSNSPACE_HANDLE_PROC;
    }

    private static final int KERN_VFSNSPACE_UNHANDLE_PROC = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KERN_VFSNSPACE_UNHANDLE_PROC 2
     * }
     */
    public static int KERN_VFSNSPACE_UNHANDLE_PROC() {
        return KERN_VFSNSPACE_UNHANDLE_PROC;
    }

    private static final int WMESGLEN = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define WMESGLEN 7
     * }
     */
    public static int WMESGLEN() {
        return WMESGLEN;
    }

    private static final int EPROC_CTTY = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define EPROC_CTTY 1
     * }
     */
    public static int EPROC_CTTY() {
        return EPROC_CTTY;
    }

    private static final int EPROC_SLEADER = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define EPROC_SLEADER 2
     * }
     */
    public static int EPROC_SLEADER() {
        return EPROC_SLEADER;
    }

    private static final int COMAPT_MAXLOGNAME = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define COMAPT_MAXLOGNAME 12
     * }
     */
    public static int COMAPT_MAXLOGNAME() {
        return COMAPT_MAXLOGNAME;
    }

    private static final int KIPC_MAXSOCKBUF = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MAXSOCKBUF 1
     * }
     */
    public static int KIPC_MAXSOCKBUF() {
        return KIPC_MAXSOCKBUF;
    }

    private static final int KIPC_SOCKBUF_WASTE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define KIPC_SOCKBUF_WASTE 2
     * }
     */
    public static int KIPC_SOCKBUF_WASTE() {
        return KIPC_SOCKBUF_WASTE;
    }

    private static final int KIPC_SOMAXCONN = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define KIPC_SOMAXCONN 3
     * }
     */
    public static int KIPC_SOMAXCONN() {
        return KIPC_SOMAXCONN;
    }

    private static final int KIPC_MAX_LINKHDR = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MAX_LINKHDR 4
     * }
     */
    public static int KIPC_MAX_LINKHDR() {
        return KIPC_MAX_LINKHDR;
    }

    private static final int KIPC_MAX_PROTOHDR = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MAX_PROTOHDR 5
     * }
     */
    public static int KIPC_MAX_PROTOHDR() {
        return KIPC_MAX_PROTOHDR;
    }

    private static final int KIPC_MAX_HDR = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MAX_HDR 6
     * }
     */
    public static int KIPC_MAX_HDR() {
        return KIPC_MAX_HDR;
    }

    private static final int KIPC_MAX_DATALEN = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MAX_DATALEN 7
     * }
     */
    public static int KIPC_MAX_DATALEN() {
        return KIPC_MAX_DATALEN;
    }

    private static final int KIPC_MBSTAT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define KIPC_MBSTAT 8
     * }
     */
    public static int KIPC_MBSTAT() {
        return KIPC_MBSTAT;
    }

    private static final int KIPC_NMBCLUSTERS = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define KIPC_NMBCLUSTERS 9
     * }
     */
    public static int KIPC_NMBCLUSTERS() {
        return KIPC_NMBCLUSTERS;
    }

    private static final int KIPC_SOQLIMITCOMPAT = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define KIPC_SOQLIMITCOMPAT 10
     * }
     */
    public static int KIPC_SOQLIMITCOMPAT() {
        return KIPC_SOQLIMITCOMPAT;
    }

    private static final int VM_METER = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VM_METER 1
     * }
     */
    public static int VM_METER() {
        return VM_METER;
    }

    private static final int VM_LOADAVG = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VM_LOADAVG 2
     * }
     */
    public static int VM_LOADAVG() {
        return VM_LOADAVG;
    }

    private static final int VM_MACHFACTOR = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define VM_MACHFACTOR 4
     * }
     */
    public static int VM_MACHFACTOR() {
        return VM_MACHFACTOR;
    }

    private static final int VM_SWAPUSAGE = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define VM_SWAPUSAGE 5
     * }
     */
    public static int VM_SWAPUSAGE() {
        return VM_SWAPUSAGE;
    }

    private static final int VM_MAXID = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define VM_MAXID 6
     * }
     */
    public static int VM_MAXID() {
        return VM_MAXID;
    }

    private static final int LSCALE = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define LSCALE 1000
     * }
     */
    public static int LSCALE() {
        return LSCALE;
    }

    private static final int HW_MACHINE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define HW_MACHINE 1
     * }
     */
    public static int HW_MACHINE() {
        return HW_MACHINE;
    }

    private static final int HW_MODEL = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define HW_MODEL 2
     * }
     */
    public static int HW_MODEL() {
        return HW_MODEL;
    }

    private static final int HW_NCPU = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define HW_NCPU 3
     * }
     */
    public static int HW_NCPU() {
        return HW_NCPU;
    }

    private static final int HW_BYTEORDER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define HW_BYTEORDER 4
     * }
     */
    public static int HW_BYTEORDER() {
        return HW_BYTEORDER;
    }

    private static final int HW_PHYSMEM = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define HW_PHYSMEM 5
     * }
     */
    public static int HW_PHYSMEM() {
        return HW_PHYSMEM;
    }

    private static final int HW_USERMEM = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define HW_USERMEM 6
     * }
     */
    public static int HW_USERMEM() {
        return HW_USERMEM;
    }

    private static final int HW_PAGESIZE = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define HW_PAGESIZE 7
     * }
     */
    public static int HW_PAGESIZE() {
        return HW_PAGESIZE;
    }

    private static final int HW_DISKNAMES = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define HW_DISKNAMES 8
     * }
     */
    public static int HW_DISKNAMES() {
        return HW_DISKNAMES;
    }

    private static final int HW_DISKSTATS = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define HW_DISKSTATS 9
     * }
     */
    public static int HW_DISKSTATS() {
        return HW_DISKSTATS;
    }

    private static final int HW_EPOCH = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define HW_EPOCH 10
     * }
     */
    public static int HW_EPOCH() {
        return HW_EPOCH;
    }

    private static final int HW_FLOATINGPT = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define HW_FLOATINGPT 11
     * }
     */
    public static int HW_FLOATINGPT() {
        return HW_FLOATINGPT;
    }

    private static final int HW_MACHINE_ARCH = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define HW_MACHINE_ARCH 12
     * }
     */
    public static int HW_MACHINE_ARCH() {
        return HW_MACHINE_ARCH;
    }

    private static final int HW_VECTORUNIT = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define HW_VECTORUNIT 13
     * }
     */
    public static int HW_VECTORUNIT() {
        return HW_VECTORUNIT;
    }

    private static final int HW_BUS_FREQ = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define HW_BUS_FREQ 14
     * }
     */
    public static int HW_BUS_FREQ() {
        return HW_BUS_FREQ;
    }

    private static final int HW_CPU_FREQ = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define HW_CPU_FREQ 15
     * }
     */
    public static int HW_CPU_FREQ() {
        return HW_CPU_FREQ;
    }

    private static final int HW_CACHELINE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define HW_CACHELINE 16
     * }
     */
    public static int HW_CACHELINE() {
        return HW_CACHELINE;
    }

    private static final int HW_L1ICACHESIZE = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define HW_L1ICACHESIZE 17
     * }
     */
    public static int HW_L1ICACHESIZE() {
        return HW_L1ICACHESIZE;
    }

    private static final int HW_L1DCACHESIZE = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define HW_L1DCACHESIZE 18
     * }
     */
    public static int HW_L1DCACHESIZE() {
        return HW_L1DCACHESIZE;
    }

    private static final int HW_L2SETTINGS = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define HW_L2SETTINGS 19
     * }
     */
    public static int HW_L2SETTINGS() {
        return HW_L2SETTINGS;
    }

    private static final int HW_L2CACHESIZE = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define HW_L2CACHESIZE 20
     * }
     */
    public static int HW_L2CACHESIZE() {
        return HW_L2CACHESIZE;
    }

    private static final int HW_L3SETTINGS = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define HW_L3SETTINGS 21
     * }
     */
    public static int HW_L3SETTINGS() {
        return HW_L3SETTINGS;
    }

    private static final int HW_L3CACHESIZE = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define HW_L3CACHESIZE 22
     * }
     */
    public static int HW_L3CACHESIZE() {
        return HW_L3CACHESIZE;
    }

    private static final int HW_TB_FREQ = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define HW_TB_FREQ 23
     * }
     */
    public static int HW_TB_FREQ() {
        return HW_TB_FREQ;
    }

    private static final int HW_MEMSIZE = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define HW_MEMSIZE 24
     * }
     */
    public static int HW_MEMSIZE() {
        return HW_MEMSIZE;
    }

    private static final int HW_AVAILCPU = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define HW_AVAILCPU 25
     * }
     */
    public static int HW_AVAILCPU() {
        return HW_AVAILCPU;
    }

    private static final int HW_TARGET = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define HW_TARGET 26
     * }
     */
    public static int HW_TARGET() {
        return HW_TARGET;
    }

    private static final int HW_PRODUCT = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define HW_PRODUCT 27
     * }
     */
    public static int HW_PRODUCT() {
        return HW_PRODUCT;
    }

    private static final int HW_MAXID = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define HW_MAXID 28
     * }
     */
    public static int HW_MAXID() {
        return HW_MAXID;
    }

    private static final int USER_CS_PATH = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define USER_CS_PATH 1
     * }
     */
    public static int USER_CS_PATH() {
        return USER_CS_PATH;
    }

    private static final int USER_BC_BASE_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define USER_BC_BASE_MAX 2
     * }
     */
    public static int USER_BC_BASE_MAX() {
        return USER_BC_BASE_MAX;
    }

    private static final int USER_BC_DIM_MAX = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define USER_BC_DIM_MAX 3
     * }
     */
    public static int USER_BC_DIM_MAX() {
        return USER_BC_DIM_MAX;
    }

    private static final int USER_BC_SCALE_MAX = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define USER_BC_SCALE_MAX 4
     * }
     */
    public static int USER_BC_SCALE_MAX() {
        return USER_BC_SCALE_MAX;
    }

    private static final int USER_BC_STRING_MAX = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define USER_BC_STRING_MAX 5
     * }
     */
    public static int USER_BC_STRING_MAX() {
        return USER_BC_STRING_MAX;
    }

    private static final int USER_COLL_WEIGHTS_MAX = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define USER_COLL_WEIGHTS_MAX 6
     * }
     */
    public static int USER_COLL_WEIGHTS_MAX() {
        return USER_COLL_WEIGHTS_MAX;
    }

    private static final int USER_EXPR_NEST_MAX = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define USER_EXPR_NEST_MAX 7
     * }
     */
    public static int USER_EXPR_NEST_MAX() {
        return USER_EXPR_NEST_MAX;
    }

    private static final int USER_LINE_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define USER_LINE_MAX 8
     * }
     */
    public static int USER_LINE_MAX() {
        return USER_LINE_MAX;
    }

    private static final int USER_RE_DUP_MAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define USER_RE_DUP_MAX 9
     * }
     */
    public static int USER_RE_DUP_MAX() {
        return USER_RE_DUP_MAX;
    }

    private static final int USER_POSIX2_VERSION = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define USER_POSIX2_VERSION 10
     * }
     */
    public static int USER_POSIX2_VERSION() {
        return USER_POSIX2_VERSION;
    }
}
