/*
 * Copyright (C) 2024.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package de.bmarwell.jtop.lib.osx.ffm; // Generated by jextract

import static java.lang.foreign.ValueLayout.JAVA_BYTE;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.Arena;
import java.lang.foreign.FunctionDescriptor;
import java.lang.foreign.GroupLayout;
import java.lang.foreign.Linker;
import java.lang.foreign.MemoryLayout;
import java.lang.foreign.MemorySegment;
import java.lang.foreign.PaddingLayout;
import java.lang.foreign.SequenceLayout;
import java.lang.foreign.StructLayout;
import java.lang.foreign.SymbolLookup;
import java.lang.foreign.ValueLayout;
import java.lang.invoke.MethodHandle;
import java.lang.invoke.MethodHandles;
import java.util.Arrays;
import java.util.stream.Collectors;

public class libproc_h_3 {

    libproc_h_3() {
        // Should not be called directly
    }

    static final Arena LIBRARY_ARENA = Arena.ofAuto();
    static final boolean TRACE_DOWNCALLS = Boolean.getBoolean("jextract.trace.downcalls");

    static void traceDowncall(String name, Object... args) {
        String traceArgs = Arrays.stream(args).map(Object::toString).collect(Collectors.joining(", "));
        System.out.printf("%s(%s)\n", name, traceArgs);
    }

    static MemorySegment findOrThrow(String symbol) {
        return SYMBOL_LOOKUP.find(symbol).orElseThrow(() -> new UnsatisfiedLinkError("unresolved symbol: " + symbol));
    }

    static MethodHandle upcallHandle(Class<?> fi, String name, FunctionDescriptor fdesc) {
        try {
            return MethodHandles.lookup().findVirtual(fi, name, fdesc.toMethodType());
        } catch (ReflectiveOperationException ex) {
            throw new AssertionError(ex);
        }
    }

    static MemoryLayout align(MemoryLayout layout, long align) {
        return switch (layout) {
            case PaddingLayout p -> p;
            case ValueLayout v -> v.withByteAlignment(align);
            case GroupLayout g -> {
                MemoryLayout[] alignedMembers =
                        g.memberLayouts().stream().map(m -> align(m, align)).toArray(MemoryLayout[]::new);
                yield g instanceof StructLayout
                        ? MemoryLayout.structLayout(alignedMembers)
                        : MemoryLayout.unionLayout(alignedMembers);
            }
            case SequenceLayout s -> MemoryLayout.sequenceLayout(s.elementCount(), align(s.elementLayout(), align));
        };
    }

    static final SymbolLookup SYMBOL_LOOKUP =
            SymbolLookup.loaderLookup().or(Linker.nativeLinker().defaultLookup());

    public static final ValueLayout.OfBoolean C_BOOL = ValueLayout.JAVA_BOOLEAN;
    public static final ValueLayout.OfByte C_CHAR = ValueLayout.JAVA_BYTE;
    public static final ValueLayout.OfShort C_SHORT = ValueLayout.JAVA_SHORT;
    public static final ValueLayout.OfInt C_INT = ValueLayout.JAVA_INT;
    public static final ValueLayout.OfLong C_LONG_LONG = ValueLayout.JAVA_LONG;
    public static final ValueLayout.OfFloat C_FLOAT = ValueLayout.JAVA_FLOAT;
    public static final ValueLayout.OfDouble C_DOUBLE = ValueLayout.JAVA_DOUBLE;
    public static final AddressLayout C_POINTER =
            ValueLayout.ADDRESS.withTargetLayout(MemoryLayout.sequenceLayout(java.lang.Long.MAX_VALUE, JAVA_BYTE));
    public static final ValueLayout.OfLong C_LONG = ValueLayout.JAVA_LONG;
    private static final int __has_safe_buffers = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __has_safe_buffers 0
     * }
     */
    public static int __has_safe_buffers() {
        return __has_safe_buffers;
    }

    private static final int __DARWIN_ONLY_64_BIT_INO_T = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_ONLY_64_BIT_INO_T() {
        return __DARWIN_ONLY_64_BIT_INO_T;
    }

    private static final int __DARWIN_ONLY_UNIX_CONFORMANCE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int __DARWIN_ONLY_UNIX_CONFORMANCE() {
        return __DARWIN_ONLY_UNIX_CONFORMANCE;
    }

    private static final int __DARWIN_ONLY_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_ONLY_VERS_1050 1
     * }
     */
    public static int __DARWIN_ONLY_VERS_1050() {
        return __DARWIN_ONLY_VERS_1050;
    }

    private static final int __DARWIN_UNIX03 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_UNIX03 1
     * }
     */
    public static int __DARWIN_UNIX03() {
        return __DARWIN_UNIX03;
    }

    private static final int __DARWIN_64_BIT_INO_T = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_64_BIT_INO_T 1
     * }
     */
    public static int __DARWIN_64_BIT_INO_T() {
        return __DARWIN_64_BIT_INO_T;
    }

    private static final int __DARWIN_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_VERS_1050 1
     * }
     */
    public static int __DARWIN_VERS_1050() {
        return __DARWIN_VERS_1050;
    }

    private static final int __DARWIN_NON_CANCELABLE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NON_CANCELABLE 0
     * }
     */
    public static int __DARWIN_NON_CANCELABLE() {
        return __DARWIN_NON_CANCELABLE;
    }

    private static final int __STDC_WANT_LIB_EXT1__ = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __STDC_WANT_LIB_EXT1__ 1
     * }
     */
    public static int __STDC_WANT_LIB_EXT1__() {
        return __STDC_WANT_LIB_EXT1__;
    }

    private static final int __DARWIN_NO_LONG_LONG = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NO_LONG_LONG 0
     * }
     */
    public static int __DARWIN_NO_LONG_LONG() {
        return __DARWIN_NO_LONG_LONG;
    }

    private static final int _DARWIN_FEATURE_64_BIT_INODE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_64_BIT_INODE() {
        return _DARWIN_FEATURE_64_BIT_INODE;
    }

    private static final int _DARWIN_FEATURE_ONLY_64_BIT_INODE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_64_BIT_INODE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_64_BIT_INODE() {
        return _DARWIN_FEATURE_ONLY_64_BIT_INODE;
    }

    private static final int _DARWIN_FEATURE_ONLY_VERS_1050 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_VERS_1050 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_VERS_1050() {
        return _DARWIN_FEATURE_ONLY_VERS_1050;
    }

    private static final int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE 1
     * }
     */
    public static int _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_ONLY_UNIX_CONFORMANCE;
    }

    private static final int _DARWIN_FEATURE_UNIX_CONFORMANCE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define _DARWIN_FEATURE_UNIX_CONFORMANCE 3
     * }
     */
    public static int _DARWIN_FEATURE_UNIX_CONFORMANCE() {
        return _DARWIN_FEATURE_UNIX_CONFORMANCE;
    }

    private static final int __has_ptrcheck = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __has_ptrcheck 0
     * }
     */
    public static int __has_ptrcheck() {
        return __has_ptrcheck;
    }

    private static final int BSD = (int) 199506L;
    /**
     * {@snippet lang=c :
     * #define BSD 199506
     * }
     */
    public static int BSD() {
        return BSD;
    }

    private static final int BSD4_3 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BSD4_3 1
     * }
     */
    public static int BSD4_3() {
        return BSD4_3;
    }

    private static final int BSD4_4 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BSD4_4 1
     * }
     */
    public static int BSD4_4() {
        return BSD4_4;
    }

    private static final int NeXTBSD = (int) 1995064L;
    /**
     * {@snippet lang=c :
     * #define NeXTBSD 1995064
     * }
     */
    public static int NeXTBSD() {
        return NeXTBSD;
    }

    private static final int NeXTBSD4_0 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define NeXTBSD4_0 0
     * }
     */
    public static int NeXTBSD4_0() {
        return NeXTBSD4_0;
    }

    private static final int __PTHREAD_SIZE__ = (int) 8176L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_SIZE__ 8176
     * }
     */
    public static int __PTHREAD_SIZE__() {
        return __PTHREAD_SIZE__;
    }

    private static final int __PTHREAD_ATTR_SIZE__ = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ATTR_SIZE__ 56
     * }
     */
    public static int __PTHREAD_ATTR_SIZE__() {
        return __PTHREAD_ATTR_SIZE__;
    }

    private static final int __PTHREAD_MUTEXATTR_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEXATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_MUTEXATTR_SIZE__() {
        return __PTHREAD_MUTEXATTR_SIZE__;
    }

    private static final int __PTHREAD_MUTEX_SIZE__ = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_MUTEX_SIZE__ 56
     * }
     */
    public static int __PTHREAD_MUTEX_SIZE__() {
        return __PTHREAD_MUTEX_SIZE__;
    }

    private static final int __PTHREAD_CONDATTR_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_CONDATTR_SIZE__ 8
     * }
     */
    public static int __PTHREAD_CONDATTR_SIZE__() {
        return __PTHREAD_CONDATTR_SIZE__;
    }

    private static final int __PTHREAD_COND_SIZE__ = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_COND_SIZE__ 40
     * }
     */
    public static int __PTHREAD_COND_SIZE__() {
        return __PTHREAD_COND_SIZE__;
    }

    private static final int __PTHREAD_ONCE_SIZE__ = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_ONCE_SIZE__ 8
     * }
     */
    public static int __PTHREAD_ONCE_SIZE__() {
        return __PTHREAD_ONCE_SIZE__;
    }

    private static final int __PTHREAD_RWLOCK_SIZE__ = (int) 192L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCK_SIZE__ 192
     * }
     */
    public static int __PTHREAD_RWLOCK_SIZE__() {
        return __PTHREAD_RWLOCK_SIZE__;
    }

    private static final int __PTHREAD_RWLOCKATTR_SIZE__ = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define __PTHREAD_RWLOCKATTR_SIZE__ 16
     * }
     */
    public static int __PTHREAD_RWLOCKATTR_SIZE__() {
        return __PTHREAD_RWLOCKATTR_SIZE__;
    }

    private static final int _QUAD_HIGHWORD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_HIGHWORD 1
     * }
     */
    public static int _QUAD_HIGHWORD() {
        return _QUAD_HIGHWORD;
    }

    private static final int _QUAD_LOWWORD = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define _QUAD_LOWWORD 0
     * }
     */
    public static int _QUAD_LOWWORD() {
        return _QUAD_LOWWORD;
    }

    private static final int __DARWIN_LITTLE_ENDIAN = (int) 1234L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_LITTLE_ENDIAN 1234
     * }
     */
    public static int __DARWIN_LITTLE_ENDIAN() {
        return __DARWIN_LITTLE_ENDIAN;
    }

    private static final int __DARWIN_BIG_ENDIAN = (int) 4321L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_BIG_ENDIAN 4321
     * }
     */
    public static int __DARWIN_BIG_ENDIAN() {
        return __DARWIN_BIG_ENDIAN;
    }

    private static final int __DARWIN_PDP_ENDIAN = (int) 3412L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_PDP_ENDIAN 3412
     * }
     */
    public static int __DARWIN_PDP_ENDIAN() {
        return __DARWIN_PDP_ENDIAN;
    }

    private static final int __WORDSIZE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define __WORDSIZE 64
     * }
     */
    public static int __WORDSIZE() {
        return __WORDSIZE;
    }

    private static final int INT8_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define INT8_MAX 127
     * }
     */
    public static int INT8_MAX() {
        return INT8_MAX;
    }

    private static final int INT16_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define INT16_MAX 32767
     * }
     */
    public static int INT16_MAX() {
        return INT16_MAX;
    }

    private static final int INT32_MAX = (int) 2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return INT32_MAX;
    }

    private static final int UINT8_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define UINT8_MAX 255
     * }
     */
    public static int UINT8_MAX() {
        return UINT8_MAX;
    }

    private static final int UINT16_MAX = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define UINT16_MAX 65535
     * }
     */
    public static int UINT16_MAX() {
        return UINT16_MAX;
    }

    private static final int __API_TO_BE_DEPRECATED = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED() {
        return __API_TO_BE_DEPRECATED;
    }

    private static final int __API_TO_BE_DEPRECATED_MACOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACOS() {
        return __API_TO_BE_DEPRECATED_MACOS;
    }

    private static final int __API_TO_BE_DEPRECATED_IOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_IOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_IOS() {
        return __API_TO_BE_DEPRECATED_IOS;
    }

    private static final int __API_TO_BE_DEPRECATED_MACCATALYST = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_MACCATALYST 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_MACCATALYST() {
        return __API_TO_BE_DEPRECATED_MACCATALYST;
    }

    private static final int __API_TO_BE_DEPRECATED_WATCHOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_WATCHOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_WATCHOS() {
        return __API_TO_BE_DEPRECATED_WATCHOS;
    }

    private static final int __API_TO_BE_DEPRECATED_TVOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_TVOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_TVOS() {
        return __API_TO_BE_DEPRECATED_TVOS;
    }

    private static final int __API_TO_BE_DEPRECATED_DRIVERKIT = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_DRIVERKIT 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_DRIVERKIT() {
        return __API_TO_BE_DEPRECATED_DRIVERKIT;
    }

    private static final int __API_TO_BE_DEPRECATED_VISIONOS = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __API_TO_BE_DEPRECATED_VISIONOS 100000
     * }
     */
    public static int __API_TO_BE_DEPRECATED_VISIONOS() {
        return __API_TO_BE_DEPRECATED_VISIONOS;
    }

    private static final int __MAC_10_0 = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_0 1000
     * }
     */
    public static int __MAC_10_0() {
        return __MAC_10_0;
    }

    private static final int __MAC_10_1 = (int) 1010L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_1 1010
     * }
     */
    public static int __MAC_10_1() {
        return __MAC_10_1;
    }

    private static final int __MAC_10_2 = (int) 1020L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_2 1020
     * }
     */
    public static int __MAC_10_2() {
        return __MAC_10_2;
    }

    private static final int __MAC_10_3 = (int) 1030L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_3 1030
     * }
     */
    public static int __MAC_10_3() {
        return __MAC_10_3;
    }

    private static final int __MAC_10_4 = (int) 1040L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_4 1040
     * }
     */
    public static int __MAC_10_4() {
        return __MAC_10_4;
    }

    private static final int __MAC_10_5 = (int) 1050L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_5 1050
     * }
     */
    public static int __MAC_10_5() {
        return __MAC_10_5;
    }

    private static final int __MAC_10_6 = (int) 1060L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_6 1060
     * }
     */
    public static int __MAC_10_6() {
        return __MAC_10_6;
    }

    private static final int __MAC_10_7 = (int) 1070L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_7 1070
     * }
     */
    public static int __MAC_10_7() {
        return __MAC_10_7;
    }

    private static final int __MAC_10_8 = (int) 1080L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_8 1080
     * }
     */
    public static int __MAC_10_8() {
        return __MAC_10_8;
    }

    private static final int __MAC_10_9 = (int) 1090L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_9 1090
     * }
     */
    public static int __MAC_10_9() {
        return __MAC_10_9;
    }

    private static final int __MAC_10_10 = (int) 101000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10 101000
     * }
     */
    public static int __MAC_10_10() {
        return __MAC_10_10;
    }

    private static final int __MAC_10_10_2 = (int) 101002L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_2 101002
     * }
     */
    public static int __MAC_10_10_2() {
        return __MAC_10_10_2;
    }

    private static final int __MAC_10_10_3 = (int) 101003L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_10_3 101003
     * }
     */
    public static int __MAC_10_10_3() {
        return __MAC_10_10_3;
    }

    private static final int __MAC_10_11 = (int) 101100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11 101100
     * }
     */
    public static int __MAC_10_11() {
        return __MAC_10_11;
    }

    private static final int __MAC_10_11_2 = (int) 101102L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_2 101102
     * }
     */
    public static int __MAC_10_11_2() {
        return __MAC_10_11_2;
    }

    private static final int __MAC_10_11_3 = (int) 101103L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_3 101103
     * }
     */
    public static int __MAC_10_11_3() {
        return __MAC_10_11_3;
    }

    private static final int __MAC_10_11_4 = (int) 101104L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_11_4 101104
     * }
     */
    public static int __MAC_10_11_4() {
        return __MAC_10_11_4;
    }

    private static final int __MAC_10_12 = (int) 101200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12 101200
     * }
     */
    public static int __MAC_10_12() {
        return __MAC_10_12;
    }

    private static final int __MAC_10_12_1 = (int) 101201L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_1 101201
     * }
     */
    public static int __MAC_10_12_1() {
        return __MAC_10_12_1;
    }

    private static final int __MAC_10_12_2 = (int) 101202L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_2 101202
     * }
     */
    public static int __MAC_10_12_2() {
        return __MAC_10_12_2;
    }

    private static final int __MAC_10_12_4 = (int) 101204L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_12_4 101204
     * }
     */
    public static int __MAC_10_12_4() {
        return __MAC_10_12_4;
    }

    private static final int __MAC_10_13 = (int) 101300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13 101300
     * }
     */
    public static int __MAC_10_13() {
        return __MAC_10_13;
    }

    private static final int __MAC_10_13_1 = (int) 101301L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_1 101301
     * }
     */
    public static int __MAC_10_13_1() {
        return __MAC_10_13_1;
    }

    private static final int __MAC_10_13_2 = (int) 101302L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_2 101302
     * }
     */
    public static int __MAC_10_13_2() {
        return __MAC_10_13_2;
    }

    private static final int __MAC_10_13_4 = (int) 101304L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_13_4 101304
     * }
     */
    public static int __MAC_10_13_4() {
        return __MAC_10_13_4;
    }

    private static final int __MAC_10_14 = (int) 101400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14 101400
     * }
     */
    public static int __MAC_10_14() {
        return __MAC_10_14;
    }

    private static final int __MAC_10_14_1 = (int) 101401L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_1 101401
     * }
     */
    public static int __MAC_10_14_1() {
        return __MAC_10_14_1;
    }

    private static final int __MAC_10_14_4 = (int) 101404L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_4 101404
     * }
     */
    public static int __MAC_10_14_4() {
        return __MAC_10_14_4;
    }

    private static final int __MAC_10_14_5 = (int) 101405L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_5 101405
     * }
     */
    public static int __MAC_10_14_5() {
        return __MAC_10_14_5;
    }

    private static final int __MAC_10_14_6 = (int) 101406L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_14_6 101406
     * }
     */
    public static int __MAC_10_14_6() {
        return __MAC_10_14_6;
    }

    private static final int __MAC_10_15 = (int) 101500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15 101500
     * }
     */
    public static int __MAC_10_15() {
        return __MAC_10_15;
    }

    private static final int __MAC_10_15_1 = (int) 101501L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_1 101501
     * }
     */
    public static int __MAC_10_15_1() {
        return __MAC_10_15_1;
    }

    private static final int __MAC_10_15_4 = (int) 101504L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_15_4 101504
     * }
     */
    public static int __MAC_10_15_4() {
        return __MAC_10_15_4;
    }

    private static final int __MAC_10_16 = (int) 101600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_10_16 101600
     * }
     */
    public static int __MAC_10_16() {
        return __MAC_10_16;
    }

    private static final int __MAC_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_0 110000
     * }
     */
    public static int __MAC_11_0() {
        return __MAC_11_0;
    }

    private static final int __MAC_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_1 110100
     * }
     */
    public static int __MAC_11_1() {
        return __MAC_11_1;
    }

    private static final int __MAC_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_3 110300
     * }
     */
    public static int __MAC_11_3() {
        return __MAC_11_3;
    }

    private static final int __MAC_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_4 110400
     * }
     */
    public static int __MAC_11_4() {
        return __MAC_11_4;
    }

    private static final int __MAC_11_5 = (int) 110500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_5 110500
     * }
     */
    public static int __MAC_11_5() {
        return __MAC_11_5;
    }

    private static final int __MAC_11_6 = (int) 110600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_11_6 110600
     * }
     */
    public static int __MAC_11_6() {
        return __MAC_11_6;
    }

    private static final int __MAC_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_0 120000
     * }
     */
    public static int __MAC_12_0() {
        return __MAC_12_0;
    }

    private static final int __MAC_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_1 120100
     * }
     */
    public static int __MAC_12_1() {
        return __MAC_12_1;
    }

    private static final int __MAC_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_2 120200
     * }
     */
    public static int __MAC_12_2() {
        return __MAC_12_2;
    }

    private static final int __MAC_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_3 120300
     * }
     */
    public static int __MAC_12_3() {
        return __MAC_12_3;
    }

    private static final int __MAC_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_4 120400
     * }
     */
    public static int __MAC_12_4() {
        return __MAC_12_4;
    }

    private static final int __MAC_12_5 = (int) 120500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_5 120500
     * }
     */
    public static int __MAC_12_5() {
        return __MAC_12_5;
    }

    private static final int __MAC_12_6 = (int) 120600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_6 120600
     * }
     */
    public static int __MAC_12_6() {
        return __MAC_12_6;
    }

    private static final int __MAC_12_7 = (int) 120700L;
    /**
     * {@snippet lang=c :
     * #define __MAC_12_7 120700
     * }
     */
    public static int __MAC_12_7() {
        return __MAC_12_7;
    }

    private static final int __MAC_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_0 130000
     * }
     */
    public static int __MAC_13_0() {
        return __MAC_13_0;
    }

    private static final int __MAC_13_1 = (int) 130100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_1 130100
     * }
     */
    public static int __MAC_13_1() {
        return __MAC_13_1;
    }

    private static final int __MAC_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_2 130200
     * }
     */
    public static int __MAC_13_2() {
        return __MAC_13_2;
    }

    private static final int __MAC_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_3 130300
     * }
     */
    public static int __MAC_13_3() {
        return __MAC_13_3;
    }

    private static final int __MAC_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_4 130400
     * }
     */
    public static int __MAC_13_4() {
        return __MAC_13_4;
    }

    private static final int __MAC_13_5 = (int) 130500L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_5 130500
     * }
     */
    public static int __MAC_13_5() {
        return __MAC_13_5;
    }

    private static final int __MAC_13_6 = (int) 130600L;
    /**
     * {@snippet lang=c :
     * #define __MAC_13_6 130600
     * }
     */
    public static int __MAC_13_6() {
        return __MAC_13_6;
    }

    private static final int __MAC_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_0 140000
     * }
     */
    public static int __MAC_14_0() {
        return __MAC_14_0;
    }

    private static final int __MAC_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_1 140100
     * }
     */
    public static int __MAC_14_1() {
        return __MAC_14_1;
    }

    private static final int __MAC_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_2 140200
     * }
     */
    public static int __MAC_14_2() {
        return __MAC_14_2;
    }

    private static final int __MAC_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_3 140300
     * }
     */
    public static int __MAC_14_3() {
        return __MAC_14_3;
    }

    private static final int __MAC_14_4 = (int) 140400L;
    /**
     * {@snippet lang=c :
     * #define __MAC_14_4 140400
     * }
     */
    public static int __MAC_14_4() {
        return __MAC_14_4;
    }

    private static final int __IPHONE_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_0 20000
     * }
     */
    public static int __IPHONE_2_0() {
        return __IPHONE_2_0;
    }

    private static final int __IPHONE_2_1 = (int) 20100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_1 20100
     * }
     */
    public static int __IPHONE_2_1() {
        return __IPHONE_2_1;
    }

    private static final int __IPHONE_2_2 = (int) 20200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_2_2 20200
     * }
     */
    public static int __IPHONE_2_2() {
        return __IPHONE_2_2;
    }

    private static final int __IPHONE_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_0 30000
     * }
     */
    public static int __IPHONE_3_0() {
        return __IPHONE_3_0;
    }

    private static final int __IPHONE_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_1 30100
     * }
     */
    public static int __IPHONE_3_1() {
        return __IPHONE_3_1;
    }

    private static final int __IPHONE_3_2 = (int) 30200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_3_2 30200
     * }
     */
    public static int __IPHONE_3_2() {
        return __IPHONE_3_2;
    }

    private static final int __IPHONE_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_0 40000
     * }
     */
    public static int __IPHONE_4_0() {
        return __IPHONE_4_0;
    }

    private static final int __IPHONE_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_1 40100
     * }
     */
    public static int __IPHONE_4_1() {
        return __IPHONE_4_1;
    }

    private static final int __IPHONE_4_2 = (int) 40200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_2 40200
     * }
     */
    public static int __IPHONE_4_2() {
        return __IPHONE_4_2;
    }

    private static final int __IPHONE_4_3 = (int) 40300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_4_3 40300
     * }
     */
    public static int __IPHONE_4_3() {
        return __IPHONE_4_3;
    }

    private static final int __IPHONE_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_0 50000
     * }
     */
    public static int __IPHONE_5_0() {
        return __IPHONE_5_0;
    }

    private static final int __IPHONE_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_5_1 50100
     * }
     */
    public static int __IPHONE_5_1() {
        return __IPHONE_5_1;
    }

    private static final int __IPHONE_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_0 60000
     * }
     */
    public static int __IPHONE_6_0() {
        return __IPHONE_6_0;
    }

    private static final int __IPHONE_6_1 = (int) 60100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_6_1 60100
     * }
     */
    public static int __IPHONE_6_1() {
        return __IPHONE_6_1;
    }

    private static final int __IPHONE_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_0 70000
     * }
     */
    public static int __IPHONE_7_0() {
        return __IPHONE_7_0;
    }

    private static final int __IPHONE_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_7_1 70100
     * }
     */
    public static int __IPHONE_7_1() {
        return __IPHONE_7_1;
    }

    private static final int __IPHONE_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_0 80000
     * }
     */
    public static int __IPHONE_8_0() {
        return __IPHONE_8_0;
    }

    private static final int __IPHONE_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_1 80100
     * }
     */
    public static int __IPHONE_8_1() {
        return __IPHONE_8_1;
    }

    private static final int __IPHONE_8_2 = (int) 80200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_2 80200
     * }
     */
    public static int __IPHONE_8_2() {
        return __IPHONE_8_2;
    }

    private static final int __IPHONE_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_3 80300
     * }
     */
    public static int __IPHONE_8_3() {
        return __IPHONE_8_3;
    }

    private static final int __IPHONE_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_8_4 80400
     * }
     */
    public static int __IPHONE_8_4() {
        return __IPHONE_8_4;
    }

    private static final int __IPHONE_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_0 90000
     * }
     */
    public static int __IPHONE_9_0() {
        return __IPHONE_9_0;
    }

    private static final int __IPHONE_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_1 90100
     * }
     */
    public static int __IPHONE_9_1() {
        return __IPHONE_9_1;
    }

    private static final int __IPHONE_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_2 90200
     * }
     */
    public static int __IPHONE_9_2() {
        return __IPHONE_9_2;
    }

    private static final int __IPHONE_9_3 = (int) 90300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_9_3 90300
     * }
     */
    public static int __IPHONE_9_3() {
        return __IPHONE_9_3;
    }

    private static final int __IPHONE_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_0 100000
     * }
     */
    public static int __IPHONE_10_0() {
        return __IPHONE_10_0;
    }

    private static final int __IPHONE_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_1 100100
     * }
     */
    public static int __IPHONE_10_1() {
        return __IPHONE_10_1;
    }

    private static final int __IPHONE_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_2 100200
     * }
     */
    public static int __IPHONE_10_2() {
        return __IPHONE_10_2;
    }

    private static final int __IPHONE_10_3 = (int) 100300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_10_3 100300
     * }
     */
    public static int __IPHONE_10_3() {
        return __IPHONE_10_3;
    }

    private static final int __IPHONE_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_0 110000
     * }
     */
    public static int __IPHONE_11_0() {
        return __IPHONE_11_0;
    }

    private static final int __IPHONE_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_1 110100
     * }
     */
    public static int __IPHONE_11_1() {
        return __IPHONE_11_1;
    }

    private static final int __IPHONE_11_2 = (int) 110200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_2 110200
     * }
     */
    public static int __IPHONE_11_2() {
        return __IPHONE_11_2;
    }

    private static final int __IPHONE_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_3 110300
     * }
     */
    public static int __IPHONE_11_3() {
        return __IPHONE_11_3;
    }

    private static final int __IPHONE_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_11_4 110400
     * }
     */
    public static int __IPHONE_11_4() {
        return __IPHONE_11_4;
    }

    private static final int __IPHONE_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_0 120000
     * }
     */
    public static int __IPHONE_12_0() {
        return __IPHONE_12_0;
    }

    private static final int __IPHONE_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_1 120100
     * }
     */
    public static int __IPHONE_12_1() {
        return __IPHONE_12_1;
    }

    private static final int __IPHONE_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_2 120200
     * }
     */
    public static int __IPHONE_12_2() {
        return __IPHONE_12_2;
    }

    private static final int __IPHONE_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_3 120300
     * }
     */
    public static int __IPHONE_12_3() {
        return __IPHONE_12_3;
    }

    private static final int __IPHONE_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_12_4 120400
     * }
     */
    public static int __IPHONE_12_4() {
        return __IPHONE_12_4;
    }

    private static final int __IPHONE_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_0 130000
     * }
     */
    public static int __IPHONE_13_0() {
        return __IPHONE_13_0;
    }

    private static final int __IPHONE_13_1 = (int) 130100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_1 130100
     * }
     */
    public static int __IPHONE_13_1() {
        return __IPHONE_13_1;
    }

    private static final int __IPHONE_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_2 130200
     * }
     */
    public static int __IPHONE_13_2() {
        return __IPHONE_13_2;
    }

    private static final int __IPHONE_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_3 130300
     * }
     */
    public static int __IPHONE_13_3() {
        return __IPHONE_13_3;
    }

    private static final int __IPHONE_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_4 130400
     * }
     */
    public static int __IPHONE_13_4() {
        return __IPHONE_13_4;
    }

    private static final int __IPHONE_13_5 = (int) 130500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_5 130500
     * }
     */
    public static int __IPHONE_13_5() {
        return __IPHONE_13_5;
    }

    private static final int __IPHONE_13_6 = (int) 130600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_6 130600
     * }
     */
    public static int __IPHONE_13_6() {
        return __IPHONE_13_6;
    }

    private static final int __IPHONE_13_7 = (int) 130700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_13_7 130700
     * }
     */
    public static int __IPHONE_13_7() {
        return __IPHONE_13_7;
    }

    private static final int __IPHONE_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_0 140000
     * }
     */
    public static int __IPHONE_14_0() {
        return __IPHONE_14_0;
    }

    private static final int __IPHONE_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_1 140100
     * }
     */
    public static int __IPHONE_14_1() {
        return __IPHONE_14_1;
    }

    private static final int __IPHONE_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_2 140200
     * }
     */
    public static int __IPHONE_14_2() {
        return __IPHONE_14_2;
    }

    private static final int __IPHONE_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_3 140300
     * }
     */
    public static int __IPHONE_14_3() {
        return __IPHONE_14_3;
    }

    private static final int __IPHONE_14_5 = (int) 140500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_5 140500
     * }
     */
    public static int __IPHONE_14_5() {
        return __IPHONE_14_5;
    }

    private static final int __IPHONE_14_4 = (int) 140400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_4 140400
     * }
     */
    public static int __IPHONE_14_4() {
        return __IPHONE_14_4;
    }

    private static final int __IPHONE_14_6 = (int) 140600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_6 140600
     * }
     */
    public static int __IPHONE_14_6() {
        return __IPHONE_14_6;
    }

    private static final int __IPHONE_14_7 = (int) 140700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_7 140700
     * }
     */
    public static int __IPHONE_14_7() {
        return __IPHONE_14_7;
    }

    private static final int __IPHONE_14_8 = (int) 140800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_14_8 140800
     * }
     */
    public static int __IPHONE_14_8() {
        return __IPHONE_14_8;
    }

    private static final int __IPHONE_15_0 = (int) 150000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_0 150000
     * }
     */
    public static int __IPHONE_15_0() {
        return __IPHONE_15_0;
    }

    private static final int __IPHONE_15_1 = (int) 150100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_1 150100
     * }
     */
    public static int __IPHONE_15_1() {
        return __IPHONE_15_1;
    }

    private static final int __IPHONE_15_2 = (int) 150200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_2 150200
     * }
     */
    public static int __IPHONE_15_2() {
        return __IPHONE_15_2;
    }

    private static final int __IPHONE_15_3 = (int) 150300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_3 150300
     * }
     */
    public static int __IPHONE_15_3() {
        return __IPHONE_15_3;
    }

    private static final int __IPHONE_15_4 = (int) 150400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_4 150400
     * }
     */
    public static int __IPHONE_15_4() {
        return __IPHONE_15_4;
    }

    private static final int __IPHONE_15_5 = (int) 150500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_5 150500
     * }
     */
    public static int __IPHONE_15_5() {
        return __IPHONE_15_5;
    }

    private static final int __IPHONE_15_6 = (int) 150600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_6 150600
     * }
     */
    public static int __IPHONE_15_6() {
        return __IPHONE_15_6;
    }

    private static final int __IPHONE_15_7 = (int) 150700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_7 150700
     * }
     */
    public static int __IPHONE_15_7() {
        return __IPHONE_15_7;
    }

    private static final int __IPHONE_15_8 = (int) 150800L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_15_8 150800
     * }
     */
    public static int __IPHONE_15_8() {
        return __IPHONE_15_8;
    }

    private static final int __IPHONE_16_0 = (int) 160000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_0 160000
     * }
     */
    public static int __IPHONE_16_0() {
        return __IPHONE_16_0;
    }

    private static final int __IPHONE_16_1 = (int) 160100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_1 160100
     * }
     */
    public static int __IPHONE_16_1() {
        return __IPHONE_16_1;
    }

    private static final int __IPHONE_16_2 = (int) 160200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_2 160200
     * }
     */
    public static int __IPHONE_16_2() {
        return __IPHONE_16_2;
    }

    private static final int __IPHONE_16_3 = (int) 160300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_3 160300
     * }
     */
    public static int __IPHONE_16_3() {
        return __IPHONE_16_3;
    }

    private static final int __IPHONE_16_4 = (int) 160400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_4 160400
     * }
     */
    public static int __IPHONE_16_4() {
        return __IPHONE_16_4;
    }

    private static final int __IPHONE_16_5 = (int) 160500L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_5 160500
     * }
     */
    public static int __IPHONE_16_5() {
        return __IPHONE_16_5;
    }

    private static final int __IPHONE_16_6 = (int) 160600L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_6 160600
     * }
     */
    public static int __IPHONE_16_6() {
        return __IPHONE_16_6;
    }

    private static final int __IPHONE_16_7 = (int) 160700L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_16_7 160700
     * }
     */
    public static int __IPHONE_16_7() {
        return __IPHONE_16_7;
    }

    private static final int __IPHONE_17_0 = (int) 170000L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_0 170000
     * }
     */
    public static int __IPHONE_17_0() {
        return __IPHONE_17_0;
    }

    private static final int __IPHONE_17_1 = (int) 170100L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_1 170100
     * }
     */
    public static int __IPHONE_17_1() {
        return __IPHONE_17_1;
    }

    private static final int __IPHONE_17_2 = (int) 170200L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_2 170200
     * }
     */
    public static int __IPHONE_17_2() {
        return __IPHONE_17_2;
    }

    private static final int __IPHONE_17_3 = (int) 170300L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_3 170300
     * }
     */
    public static int __IPHONE_17_3() {
        return __IPHONE_17_3;
    }

    private static final int __IPHONE_17_4 = (int) 170400L;
    /**
     * {@snippet lang=c :
     * #define __IPHONE_17_4 170400
     * }
     */
    public static int __IPHONE_17_4() {
        return __IPHONE_17_4;
    }

    private static final int __WATCHOS_1_0 = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_1_0 10000
     * }
     */
    public static int __WATCHOS_1_0() {
        return __WATCHOS_1_0;
    }

    private static final int __WATCHOS_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_0 20000
     * }
     */
    public static int __WATCHOS_2_0() {
        return __WATCHOS_2_0;
    }

    private static final int __WATCHOS_2_1 = (int) 20100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_1 20100
     * }
     */
    public static int __WATCHOS_2_1() {
        return __WATCHOS_2_1;
    }

    private static final int __WATCHOS_2_2 = (int) 20200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_2_2 20200
     * }
     */
    public static int __WATCHOS_2_2() {
        return __WATCHOS_2_2;
    }

    private static final int __WATCHOS_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_0 30000
     * }
     */
    public static int __WATCHOS_3_0() {
        return __WATCHOS_3_0;
    }

    private static final int __WATCHOS_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1 30100
     * }
     */
    public static int __WATCHOS_3_1() {
        return __WATCHOS_3_1;
    }

    private static final int __WATCHOS_3_1_1 = (int) 30101L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_1_1 30101
     * }
     */
    public static int __WATCHOS_3_1_1() {
        return __WATCHOS_3_1_1;
    }

    private static final int __WATCHOS_3_2 = (int) 30200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_3_2 30200
     * }
     */
    public static int __WATCHOS_3_2() {
        return __WATCHOS_3_2;
    }

    private static final int __WATCHOS_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_0 40000
     * }
     */
    public static int __WATCHOS_4_0() {
        return __WATCHOS_4_0;
    }

    private static final int __WATCHOS_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_1 40100
     * }
     */
    public static int __WATCHOS_4_1() {
        return __WATCHOS_4_1;
    }

    private static final int __WATCHOS_4_2 = (int) 40200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_2 40200
     * }
     */
    public static int __WATCHOS_4_2() {
        return __WATCHOS_4_2;
    }

    private static final int __WATCHOS_4_3 = (int) 40300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_4_3 40300
     * }
     */
    public static int __WATCHOS_4_3() {
        return __WATCHOS_4_3;
    }

    private static final int __WATCHOS_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_0 50000
     * }
     */
    public static int __WATCHOS_5_0() {
        return __WATCHOS_5_0;
    }

    private static final int __WATCHOS_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_1 50100
     * }
     */
    public static int __WATCHOS_5_1() {
        return __WATCHOS_5_1;
    }

    private static final int __WATCHOS_5_2 = (int) 50200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_2 50200
     * }
     */
    public static int __WATCHOS_5_2() {
        return __WATCHOS_5_2;
    }

    private static final int __WATCHOS_5_3 = (int) 50300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_5_3 50300
     * }
     */
    public static int __WATCHOS_5_3() {
        return __WATCHOS_5_3;
    }

    private static final int __WATCHOS_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_0 60000
     * }
     */
    public static int __WATCHOS_6_0() {
        return __WATCHOS_6_0;
    }

    private static final int __WATCHOS_6_1 = (int) 60100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_1 60100
     * }
     */
    public static int __WATCHOS_6_1() {
        return __WATCHOS_6_1;
    }

    private static final int __WATCHOS_6_2 = (int) 60200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_6_2 60200
     * }
     */
    public static int __WATCHOS_6_2() {
        return __WATCHOS_6_2;
    }

    private static final int __WATCHOS_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_0 70000
     * }
     */
    public static int __WATCHOS_7_0() {
        return __WATCHOS_7_0;
    }

    private static final int __WATCHOS_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_1 70100
     * }
     */
    public static int __WATCHOS_7_1() {
        return __WATCHOS_7_1;
    }

    private static final int __WATCHOS_7_2 = (int) 70200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_2 70200
     * }
     */
    public static int __WATCHOS_7_2() {
        return __WATCHOS_7_2;
    }

    private static final int __WATCHOS_7_3 = (int) 70300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_3 70300
     * }
     */
    public static int __WATCHOS_7_3() {
        return __WATCHOS_7_3;
    }

    private static final int __WATCHOS_7_4 = (int) 70400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_4 70400
     * }
     */
    public static int __WATCHOS_7_4() {
        return __WATCHOS_7_4;
    }

    private static final int __WATCHOS_7_5 = (int) 70500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_5 70500
     * }
     */
    public static int __WATCHOS_7_5() {
        return __WATCHOS_7_5;
    }

    private static final int __WATCHOS_7_6 = (int) 70600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_7_6 70600
     * }
     */
    public static int __WATCHOS_7_6() {
        return __WATCHOS_7_6;
    }

    private static final int __WATCHOS_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_0 80000
     * }
     */
    public static int __WATCHOS_8_0() {
        return __WATCHOS_8_0;
    }

    private static final int __WATCHOS_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_1 80100
     * }
     */
    public static int __WATCHOS_8_1() {
        return __WATCHOS_8_1;
    }

    private static final int __WATCHOS_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_3 80300
     * }
     */
    public static int __WATCHOS_8_3() {
        return __WATCHOS_8_3;
    }

    private static final int __WATCHOS_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_4 80400
     * }
     */
    public static int __WATCHOS_8_4() {
        return __WATCHOS_8_4;
    }

    private static final int __WATCHOS_8_5 = (int) 80500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_5 80500
     * }
     */
    public static int __WATCHOS_8_5() {
        return __WATCHOS_8_5;
    }

    private static final int __WATCHOS_8_6 = (int) 80600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_6 80600
     * }
     */
    public static int __WATCHOS_8_6() {
        return __WATCHOS_8_6;
    }

    private static final int __WATCHOS_8_7 = (int) 80700L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_7 80700
     * }
     */
    public static int __WATCHOS_8_7() {
        return __WATCHOS_8_7;
    }

    private static final int __WATCHOS_8_8 = (int) 80800L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_8_8 80800
     * }
     */
    public static int __WATCHOS_8_8() {
        return __WATCHOS_8_8;
    }

    private static final int __WATCHOS_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_0 90000
     * }
     */
    public static int __WATCHOS_9_0() {
        return __WATCHOS_9_0;
    }

    private static final int __WATCHOS_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_1 90100
     * }
     */
    public static int __WATCHOS_9_1() {
        return __WATCHOS_9_1;
    }

    private static final int __WATCHOS_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_2 90200
     * }
     */
    public static int __WATCHOS_9_2() {
        return __WATCHOS_9_2;
    }

    private static final int __WATCHOS_9_3 = (int) 90300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_3 90300
     * }
     */
    public static int __WATCHOS_9_3() {
        return __WATCHOS_9_3;
    }

    private static final int __WATCHOS_9_4 = (int) 90400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_4 90400
     * }
     */
    public static int __WATCHOS_9_4() {
        return __WATCHOS_9_4;
    }

    private static final int __WATCHOS_9_5 = (int) 90500L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_5 90500
     * }
     */
    public static int __WATCHOS_9_5() {
        return __WATCHOS_9_5;
    }

    private static final int __WATCHOS_9_6 = (int) 90600L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_9_6 90600
     * }
     */
    public static int __WATCHOS_9_6() {
        return __WATCHOS_9_6;
    }

    private static final int __WATCHOS_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_0 100000
     * }
     */
    public static int __WATCHOS_10_0() {
        return __WATCHOS_10_0;
    }

    private static final int __WATCHOS_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_1 100100
     * }
     */
    public static int __WATCHOS_10_1() {
        return __WATCHOS_10_1;
    }

    private static final int __WATCHOS_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_2 100200
     * }
     */
    public static int __WATCHOS_10_2() {
        return __WATCHOS_10_2;
    }

    private static final int __WATCHOS_10_3 = (int) 100300L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_3 100300
     * }
     */
    public static int __WATCHOS_10_3() {
        return __WATCHOS_10_3;
    }

    private static final int __WATCHOS_10_4 = (int) 100400L;
    /**
     * {@snippet lang=c :
     * #define __WATCHOS_10_4 100400
     * }
     */
    public static int __WATCHOS_10_4() {
        return __WATCHOS_10_4;
    }

    private static final int __TVOS_9_0 = (int) 90000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_0 90000
     * }
     */
    public static int __TVOS_9_0() {
        return __TVOS_9_0;
    }

    private static final int __TVOS_9_1 = (int) 90100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_1 90100
     * }
     */
    public static int __TVOS_9_1() {
        return __TVOS_9_1;
    }

    private static final int __TVOS_9_2 = (int) 90200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_9_2 90200
     * }
     */
    public static int __TVOS_9_2() {
        return __TVOS_9_2;
    }

    private static final int __TVOS_10_0 = (int) 100000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0 100000
     * }
     */
    public static int __TVOS_10_0() {
        return __TVOS_10_0;
    }

    private static final int __TVOS_10_0_1 = (int) 100001L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_0_1 100001
     * }
     */
    public static int __TVOS_10_0_1() {
        return __TVOS_10_0_1;
    }

    private static final int __TVOS_10_1 = (int) 100100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_1 100100
     * }
     */
    public static int __TVOS_10_1() {
        return __TVOS_10_1;
    }

    private static final int __TVOS_10_2 = (int) 100200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_10_2 100200
     * }
     */
    public static int __TVOS_10_2() {
        return __TVOS_10_2;
    }

    private static final int __TVOS_11_0 = (int) 110000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_0 110000
     * }
     */
    public static int __TVOS_11_0() {
        return __TVOS_11_0;
    }

    private static final int __TVOS_11_1 = (int) 110100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_1 110100
     * }
     */
    public static int __TVOS_11_1() {
        return __TVOS_11_1;
    }

    private static final int __TVOS_11_2 = (int) 110200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_2 110200
     * }
     */
    public static int __TVOS_11_2() {
        return __TVOS_11_2;
    }

    private static final int __TVOS_11_3 = (int) 110300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_3 110300
     * }
     */
    public static int __TVOS_11_3() {
        return __TVOS_11_3;
    }

    private static final int __TVOS_11_4 = (int) 110400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_11_4 110400
     * }
     */
    public static int __TVOS_11_4() {
        return __TVOS_11_4;
    }

    private static final int __TVOS_12_0 = (int) 120000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_0 120000
     * }
     */
    public static int __TVOS_12_0() {
        return __TVOS_12_0;
    }

    private static final int __TVOS_12_1 = (int) 120100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_1 120100
     * }
     */
    public static int __TVOS_12_1() {
        return __TVOS_12_1;
    }

    private static final int __TVOS_12_2 = (int) 120200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_2 120200
     * }
     */
    public static int __TVOS_12_2() {
        return __TVOS_12_2;
    }

    private static final int __TVOS_12_3 = (int) 120300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_3 120300
     * }
     */
    public static int __TVOS_12_3() {
        return __TVOS_12_3;
    }

    private static final int __TVOS_12_4 = (int) 120400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_12_4 120400
     * }
     */
    public static int __TVOS_12_4() {
        return __TVOS_12_4;
    }

    private static final int __TVOS_13_0 = (int) 130000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_0 130000
     * }
     */
    public static int __TVOS_13_0() {
        return __TVOS_13_0;
    }

    private static final int __TVOS_13_2 = (int) 130200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_2 130200
     * }
     */
    public static int __TVOS_13_2() {
        return __TVOS_13_2;
    }

    private static final int __TVOS_13_3 = (int) 130300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_3 130300
     * }
     */
    public static int __TVOS_13_3() {
        return __TVOS_13_3;
    }

    private static final int __TVOS_13_4 = (int) 130400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_13_4 130400
     * }
     */
    public static int __TVOS_13_4() {
        return __TVOS_13_4;
    }

    private static final int __TVOS_14_0 = (int) 140000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_0 140000
     * }
     */
    public static int __TVOS_14_0() {
        return __TVOS_14_0;
    }

    private static final int __TVOS_14_1 = (int) 140100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_1 140100
     * }
     */
    public static int __TVOS_14_1() {
        return __TVOS_14_1;
    }

    private static final int __TVOS_14_2 = (int) 140200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_2 140200
     * }
     */
    public static int __TVOS_14_2() {
        return __TVOS_14_2;
    }

    private static final int __TVOS_14_3 = (int) 140300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_3 140300
     * }
     */
    public static int __TVOS_14_3() {
        return __TVOS_14_3;
    }

    private static final int __TVOS_14_5 = (int) 140500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_5 140500
     * }
     */
    public static int __TVOS_14_5() {
        return __TVOS_14_5;
    }

    private static final int __TVOS_14_6 = (int) 140600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_6 140600
     * }
     */
    public static int __TVOS_14_6() {
        return __TVOS_14_6;
    }

    private static final int __TVOS_14_7 = (int) 140700L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_14_7 140700
     * }
     */
    public static int __TVOS_14_7() {
        return __TVOS_14_7;
    }

    private static final int __TVOS_15_0 = (int) 150000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_0 150000
     * }
     */
    public static int __TVOS_15_0() {
        return __TVOS_15_0;
    }

    private static final int __TVOS_15_1 = (int) 150100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_1 150100
     * }
     */
    public static int __TVOS_15_1() {
        return __TVOS_15_1;
    }

    private static final int __TVOS_15_2 = (int) 150200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_2 150200
     * }
     */
    public static int __TVOS_15_2() {
        return __TVOS_15_2;
    }

    private static final int __TVOS_15_3 = (int) 150300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_3 150300
     * }
     */
    public static int __TVOS_15_3() {
        return __TVOS_15_3;
    }

    private static final int __TVOS_15_4 = (int) 150400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_4 150400
     * }
     */
    public static int __TVOS_15_4() {
        return __TVOS_15_4;
    }

    private static final int __TVOS_15_5 = (int) 150500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_5 150500
     * }
     */
    public static int __TVOS_15_5() {
        return __TVOS_15_5;
    }

    private static final int __TVOS_15_6 = (int) 150600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_15_6 150600
     * }
     */
    public static int __TVOS_15_6() {
        return __TVOS_15_6;
    }

    private static final int __TVOS_16_0 = (int) 160000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_0 160000
     * }
     */
    public static int __TVOS_16_0() {
        return __TVOS_16_0;
    }

    private static final int __TVOS_16_1 = (int) 160100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_1 160100
     * }
     */
    public static int __TVOS_16_1() {
        return __TVOS_16_1;
    }

    private static final int __TVOS_16_2 = (int) 160200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_2 160200
     * }
     */
    public static int __TVOS_16_2() {
        return __TVOS_16_2;
    }

    private static final int __TVOS_16_3 = (int) 160300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_3 160300
     * }
     */
    public static int __TVOS_16_3() {
        return __TVOS_16_3;
    }

    private static final int __TVOS_16_4 = (int) 160400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_4 160400
     * }
     */
    public static int __TVOS_16_4() {
        return __TVOS_16_4;
    }

    private static final int __TVOS_16_5 = (int) 160500L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_5 160500
     * }
     */
    public static int __TVOS_16_5() {
        return __TVOS_16_5;
    }

    private static final int __TVOS_16_6 = (int) 160600L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_16_6 160600
     * }
     */
    public static int __TVOS_16_6() {
        return __TVOS_16_6;
    }

    private static final int __TVOS_17_0 = (int) 170000L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_0 170000
     * }
     */
    public static int __TVOS_17_0() {
        return __TVOS_17_0;
    }

    private static final int __TVOS_17_1 = (int) 170100L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_1 170100
     * }
     */
    public static int __TVOS_17_1() {
        return __TVOS_17_1;
    }

    private static final int __TVOS_17_2 = (int) 170200L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_2 170200
     * }
     */
    public static int __TVOS_17_2() {
        return __TVOS_17_2;
    }

    private static final int __TVOS_17_3 = (int) 170300L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_3 170300
     * }
     */
    public static int __TVOS_17_3() {
        return __TVOS_17_3;
    }

    private static final int __TVOS_17_4 = (int) 170400L;
    /**
     * {@snippet lang=c :
     * #define __TVOS_17_4 170400
     * }
     */
    public static int __TVOS_17_4() {
        return __TVOS_17_4;
    }

    private static final int __BRIDGEOS_2_0 = (int) 20000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_2_0 20000
     * }
     */
    public static int __BRIDGEOS_2_0() {
        return __BRIDGEOS_2_0;
    }

    private static final int __BRIDGEOS_3_0 = (int) 30000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_0 30000
     * }
     */
    public static int __BRIDGEOS_3_0() {
        return __BRIDGEOS_3_0;
    }

    private static final int __BRIDGEOS_3_1 = (int) 30100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_1 30100
     * }
     */
    public static int __BRIDGEOS_3_1() {
        return __BRIDGEOS_3_1;
    }

    private static final int __BRIDGEOS_3_4 = (int) 30400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_3_4 30400
     * }
     */
    public static int __BRIDGEOS_3_4() {
        return __BRIDGEOS_3_4;
    }

    private static final int __BRIDGEOS_4_0 = (int) 40000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_0 40000
     * }
     */
    public static int __BRIDGEOS_4_0() {
        return __BRIDGEOS_4_0;
    }

    private static final int __BRIDGEOS_4_1 = (int) 40100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_4_1 40100
     * }
     */
    public static int __BRIDGEOS_4_1() {
        return __BRIDGEOS_4_1;
    }

    private static final int __BRIDGEOS_5_0 = (int) 50000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_0 50000
     * }
     */
    public static int __BRIDGEOS_5_0() {
        return __BRIDGEOS_5_0;
    }

    private static final int __BRIDGEOS_5_1 = (int) 50100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_1 50100
     * }
     */
    public static int __BRIDGEOS_5_1() {
        return __BRIDGEOS_5_1;
    }

    private static final int __BRIDGEOS_5_3 = (int) 50300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_5_3 50300
     * }
     */
    public static int __BRIDGEOS_5_3() {
        return __BRIDGEOS_5_3;
    }

    private static final int __BRIDGEOS_6_0 = (int) 60000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_0 60000
     * }
     */
    public static int __BRIDGEOS_6_0() {
        return __BRIDGEOS_6_0;
    }

    private static final int __BRIDGEOS_6_2 = (int) 60200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_2 60200
     * }
     */
    public static int __BRIDGEOS_6_2() {
        return __BRIDGEOS_6_2;
    }

    private static final int __BRIDGEOS_6_4 = (int) 60400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_4 60400
     * }
     */
    public static int __BRIDGEOS_6_4() {
        return __BRIDGEOS_6_4;
    }

    private static final int __BRIDGEOS_6_5 = (int) 60500L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_5 60500
     * }
     */
    public static int __BRIDGEOS_6_5() {
        return __BRIDGEOS_6_5;
    }

    private static final int __BRIDGEOS_6_6 = (int) 60600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_6_6 60600
     * }
     */
    public static int __BRIDGEOS_6_6() {
        return __BRIDGEOS_6_6;
    }

    private static final int __BRIDGEOS_7_0 = (int) 70000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_0 70000
     * }
     */
    public static int __BRIDGEOS_7_0() {
        return __BRIDGEOS_7_0;
    }

    private static final int __BRIDGEOS_7_1 = (int) 70100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_1 70100
     * }
     */
    public static int __BRIDGEOS_7_1() {
        return __BRIDGEOS_7_1;
    }

    private static final int __BRIDGEOS_7_2 = (int) 70200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_2 70200
     * }
     */
    public static int __BRIDGEOS_7_2() {
        return __BRIDGEOS_7_2;
    }

    private static final int __BRIDGEOS_7_3 = (int) 70300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_3 70300
     * }
     */
    public static int __BRIDGEOS_7_3() {
        return __BRIDGEOS_7_3;
    }

    private static final int __BRIDGEOS_7_4 = (int) 70400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_4 70400
     * }
     */
    public static int __BRIDGEOS_7_4() {
        return __BRIDGEOS_7_4;
    }

    private static final int __BRIDGEOS_7_6 = (int) 70600L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_7_6 70600
     * }
     */
    public static int __BRIDGEOS_7_6() {
        return __BRIDGEOS_7_6;
    }

    private static final int __BRIDGEOS_8_0 = (int) 80000L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_0 80000
     * }
     */
    public static int __BRIDGEOS_8_0() {
        return __BRIDGEOS_8_0;
    }

    private static final int __BRIDGEOS_8_1 = (int) 80100L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_1 80100
     * }
     */
    public static int __BRIDGEOS_8_1() {
        return __BRIDGEOS_8_1;
    }

    private static final int __BRIDGEOS_8_2 = (int) 80200L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_2 80200
     * }
     */
    public static int __BRIDGEOS_8_2() {
        return __BRIDGEOS_8_2;
    }

    private static final int __BRIDGEOS_8_3 = (int) 80300L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_3 80300
     * }
     */
    public static int __BRIDGEOS_8_3() {
        return __BRIDGEOS_8_3;
    }

    private static final int __BRIDGEOS_8_4 = (int) 80400L;
    /**
     * {@snippet lang=c :
     * #define __BRIDGEOS_8_4 80400
     * }
     */
    public static int __BRIDGEOS_8_4() {
        return __BRIDGEOS_8_4;
    }

    private static final int __DRIVERKIT_19_0 = (int) 190000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_19_0 190000
     * }
     */
    public static int __DRIVERKIT_19_0() {
        return __DRIVERKIT_19_0;
    }

    private static final int __DRIVERKIT_20_0 = (int) 200000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_20_0 200000
     * }
     */
    public static int __DRIVERKIT_20_0() {
        return __DRIVERKIT_20_0;
    }

    private static final int __DRIVERKIT_21_0 = (int) 210000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_21_0 210000
     * }
     */
    public static int __DRIVERKIT_21_0() {
        return __DRIVERKIT_21_0;
    }

    private static final int __DRIVERKIT_22_0 = (int) 220000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_0 220000
     * }
     */
    public static int __DRIVERKIT_22_0() {
        return __DRIVERKIT_22_0;
    }

    private static final int __DRIVERKIT_22_4 = (int) 220400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_4 220400
     * }
     */
    public static int __DRIVERKIT_22_4() {
        return __DRIVERKIT_22_4;
    }

    private static final int __DRIVERKIT_22_5 = (int) 220500L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_5 220500
     * }
     */
    public static int __DRIVERKIT_22_5() {
        return __DRIVERKIT_22_5;
    }

    private static final int __DRIVERKIT_22_6 = (int) 220600L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_22_6 220600
     * }
     */
    public static int __DRIVERKIT_22_6() {
        return __DRIVERKIT_22_6;
    }

    private static final int __DRIVERKIT_23_0 = (int) 230000L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_0 230000
     * }
     */
    public static int __DRIVERKIT_23_0() {
        return __DRIVERKIT_23_0;
    }

    private static final int __DRIVERKIT_23_1 = (int) 230100L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_1 230100
     * }
     */
    public static int __DRIVERKIT_23_1() {
        return __DRIVERKIT_23_1;
    }

    private static final int __DRIVERKIT_23_2 = (int) 230200L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_2 230200
     * }
     */
    public static int __DRIVERKIT_23_2() {
        return __DRIVERKIT_23_2;
    }

    private static final int __DRIVERKIT_23_3 = (int) 230300L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_3 230300
     * }
     */
    public static int __DRIVERKIT_23_3() {
        return __DRIVERKIT_23_3;
    }

    private static final int __DRIVERKIT_23_4 = (int) 230400L;
    /**
     * {@snippet lang=c :
     * #define __DRIVERKIT_23_4 230400
     * }
     */
    public static int __DRIVERKIT_23_4() {
        return __DRIVERKIT_23_4;
    }

    private static final int __VISIONOS_1_0 = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_0 10000
     * }
     */
    public static int __VISIONOS_1_0() {
        return __VISIONOS_1_0;
    }

    private static final int __VISIONOS_1_1 = (int) 10100L;
    /**
     * {@snippet lang=c :
     * #define __VISIONOS_1_1 10100
     * }
     */
    public static int __VISIONOS_1_1() {
        return __VISIONOS_1_1;
    }

    private static final int __ENABLE_LEGACY_MAC_AVAILABILITY = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define __ENABLE_LEGACY_MAC_AVAILABILITY 1
     * }
     */
    public static int __ENABLE_LEGACY_MAC_AVAILABILITY() {
        return __ENABLE_LEGACY_MAC_AVAILABILITY;
    }

    private static final int __DARWIN_FD_SETSIZE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_FD_SETSIZE 1024
     * }
     */
    public static int __DARWIN_FD_SETSIZE() {
        return __DARWIN_FD_SETSIZE;
    }

    private static final int __DARWIN_NBBY = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NBBY 8
     * }
     */
    public static int __DARWIN_NBBY() {
        return __DARWIN_NBBY;
    }

    private static final int CHILD_MAX = (int) 266L;
    /**
     * {@snippet lang=c :
     * #define CHILD_MAX 266
     * }
     */
    public static int CHILD_MAX() {
        return CHILD_MAX;
    }

    private static final int LINK_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define LINK_MAX 32767
     * }
     */
    public static int LINK_MAX() {
        return LINK_MAX;
    }

    private static final int MAX_CANON = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MAX_CANON 1024
     * }
     */
    public static int MAX_CANON() {
        return MAX_CANON;
    }

    private static final int MAX_INPUT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MAX_INPUT 1024
     * }
     */
    public static int MAX_INPUT() {
        return MAX_INPUT;
    }

    private static final int NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define NAME_MAX 255
     * }
     */
    public static int NAME_MAX() {
        return NAME_MAX;
    }

    private static final int NGROUPS_MAX = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define NGROUPS_MAX 16
     * }
     */
    public static int NGROUPS_MAX() {
        return NGROUPS_MAX;
    }

    private static final int OPEN_MAX = (int) 10240L;
    /**
     * {@snippet lang=c :
     * #define OPEN_MAX 10240
     * }
     */
    public static int OPEN_MAX() {
        return OPEN_MAX;
    }

    private static final int PATH_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define PATH_MAX 1024
     * }
     */
    public static int PATH_MAX() {
        return PATH_MAX;
    }

    private static final int PIPE_BUF = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PIPE_BUF 512
     * }
     */
    public static int PIPE_BUF() {
        return PIPE_BUF;
    }

    private static final int BC_BASE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define BC_BASE_MAX 99
     * }
     */
    public static int BC_BASE_MAX() {
        return BC_BASE_MAX;
    }

    private static final int BC_DIM_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define BC_DIM_MAX 2048
     * }
     */
    public static int BC_DIM_MAX() {
        return BC_DIM_MAX;
    }

    private static final int BC_SCALE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define BC_SCALE_MAX 99
     * }
     */
    public static int BC_SCALE_MAX() {
        return BC_SCALE_MAX;
    }

    private static final int BC_STRING_MAX = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define BC_STRING_MAX 1000
     * }
     */
    public static int BC_STRING_MAX() {
        return BC_STRING_MAX;
    }

    private static final int CHARCLASS_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define CHARCLASS_NAME_MAX 14
     * }
     */
    public static int CHARCLASS_NAME_MAX() {
        return CHARCLASS_NAME_MAX;
    }

    private static final int COLL_WEIGHTS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define COLL_WEIGHTS_MAX 2
     * }
     */
    public static int COLL_WEIGHTS_MAX() {
        return COLL_WEIGHTS_MAX;
    }

    private static final int EQUIV_CLASS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define EQUIV_CLASS_MAX 2
     * }
     */
    public static int EQUIV_CLASS_MAX() {
        return EQUIV_CLASS_MAX;
    }

    private static final int EXPR_NEST_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define EXPR_NEST_MAX 32
     * }
     */
    public static int EXPR_NEST_MAX() {
        return EXPR_NEST_MAX;
    }

    private static final int LINE_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define LINE_MAX 2048
     * }
     */
    public static int LINE_MAX() {
        return LINE_MAX;
    }

    private static final int RE_DUP_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define RE_DUP_MAX 255
     * }
     */
    public static int RE_DUP_MAX() {
        return RE_DUP_MAX;
    }

    private static final int NZERO = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define NZERO 20
     * }
     */
    public static int NZERO() {
        return NZERO;
    }

    private static final int MAXCOMLEN = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MAXCOMLEN 16
     * }
     */
    public static int MAXCOMLEN() {
        return MAXCOMLEN;
    }

    private static final int MAXINTERP = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MAXINTERP 64
     * }
     */
    public static int MAXINTERP() {
        return MAXINTERP;
    }

    private static final int MAXLOGNAME = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define MAXLOGNAME 255
     * }
     */
    public static int MAXLOGNAME() {
        return MAXLOGNAME;
    }

    private static final int NOFILE = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define NOFILE 256
     * }
     */
    public static int NOFILE() {
        return NOFILE;
    }

    private static final int NOGROUP = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define NOGROUP 65535
     * }
     */
    public static int NOGROUP() {
        return NOGROUP;
    }

    private static final int MAXHOSTNAMELEN = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MAXHOSTNAMELEN 256
     * }
     */
    public static int MAXHOSTNAMELEN() {
        return MAXHOSTNAMELEN;
    }

    private static final int MAXDOMNAMELEN = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MAXDOMNAMELEN 256
     * }
     */
    public static int MAXDOMNAMELEN() {
        return MAXDOMNAMELEN;
    }

    private static final int NBPG = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define NBPG 4096
     * }
     */
    public static int NBPG() {
        return NBPG;
    }

    private static final int PGSHIFT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define PGSHIFT 12
     * }
     */
    public static int PGSHIFT() {
        return PGSHIFT;
    }

    private static final int DEV_BSIZE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define DEV_BSIZE 512
     * }
     */
    public static int DEV_BSIZE() {
        return DEV_BSIZE;
    }

    private static final int DEV_BSHIFT = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define DEV_BSHIFT 9
     * }
     */
    public static int DEV_BSHIFT() {
        return DEV_BSHIFT;
    }

    private static final int BLKDEV_IOSIZE = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define BLKDEV_IOSIZE 2048
     * }
     */
    public static int BLKDEV_IOSIZE() {
        return BLKDEV_IOSIZE;
    }

    private static final int CLSIZE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CLSIZE 1
     * }
     */
    public static int CLSIZE() {
        return CLSIZE;
    }

    private static final int CLSIZELOG2 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CLSIZELOG2 0
     * }
     */
    public static int CLSIZELOG2() {
        return CLSIZELOG2;
    }

    private static final int MSIZESHIFT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MSIZESHIFT 8
     * }
     */
    public static int MSIZESHIFT() {
        return MSIZESHIFT;
    }

    private static final int MCLSHIFT = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define MCLSHIFT 11
     * }
     */
    public static int MCLSHIFT() {
        return MCLSHIFT;
    }

    private static final int MBIGCLSHIFT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define MBIGCLSHIFT 12
     * }
     */
    public static int MBIGCLSHIFT() {
        return MBIGCLSHIFT;
    }

    private static final int M16KCLSHIFT = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define M16KCLSHIFT 14
     * }
     */
    public static int M16KCLSHIFT() {
        return M16KCLSHIFT;
    }

    private static final int __DARWIN_CLK_TCK = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_CLK_TCK 100
     * }
     */
    public static int __DARWIN_CLK_TCK() {
        return __DARWIN_CLK_TCK;
    }

    private static final int MB_LEN_MAX = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define MB_LEN_MAX 6
     * }
     */
    public static int MB_LEN_MAX() {
        return MB_LEN_MAX;
    }

    private static final int CHAR_BIT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define CHAR_BIT 8
     * }
     */
    public static int CHAR_BIT() {
        return CHAR_BIT;
    }

    private static final int SCHAR_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define SCHAR_MAX 127
     * }
     */
    public static int SCHAR_MAX() {
        return SCHAR_MAX;
    }

    private static final int UCHAR_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define UCHAR_MAX 255
     * }
     */
    public static int UCHAR_MAX() {
        return UCHAR_MAX;
    }

    private static final int CHAR_MAX = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define CHAR_MAX 127
     * }
     */
    public static int CHAR_MAX() {
        return CHAR_MAX;
    }

    private static final int USHRT_MAX = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define USHRT_MAX 65535
     * }
     */
    public static int USHRT_MAX() {
        return USHRT_MAX;
    }

    private static final int SHRT_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define SHRT_MAX 32767
     * }
     */
    public static int SHRT_MAX() {
        return SHRT_MAX;
    }

    private static final int INT_MAX = (int) 2147483647L;
    /**
     * {@snippet lang=c :
     * #define INT_MAX 2147483647
     * }
     */
    public static int INT_MAX() {
        return INT_MAX;
    }

    private static final int LONG_BIT = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define LONG_BIT 64
     * }
     */
    public static int LONG_BIT() {
        return LONG_BIT;
    }

    private static final int WORD_BIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define WORD_BIT 32
     * }
     */
    public static int WORD_BIT() {
        return WORD_BIT;
    }

    private static final int _POSIX_ARG_MAX = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_ARG_MAX 4096
     * }
     */
    public static int _POSIX_ARG_MAX() {
        return _POSIX_ARG_MAX;
    }

    private static final int _POSIX_CHILD_MAX = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_CHILD_MAX 25
     * }
     */
    public static int _POSIX_CHILD_MAX() {
        return _POSIX_CHILD_MAX;
    }

    private static final int _POSIX_LINK_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_LINK_MAX 8
     * }
     */
    public static int _POSIX_LINK_MAX() {
        return _POSIX_LINK_MAX;
    }

    private static final int _POSIX_MAX_CANON = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MAX_CANON 255
     * }
     */
    public static int _POSIX_MAX_CANON() {
        return _POSIX_MAX_CANON;
    }

    private static final int _POSIX_MAX_INPUT = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MAX_INPUT 255
     * }
     */
    public static int _POSIX_MAX_INPUT() {
        return _POSIX_MAX_INPUT;
    }

    private static final int _POSIX_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_NAME_MAX 14
     * }
     */
    public static int _POSIX_NAME_MAX() {
        return _POSIX_NAME_MAX;
    }

    private static final int _POSIX_NGROUPS_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_NGROUPS_MAX 8
     * }
     */
    public static int _POSIX_NGROUPS_MAX() {
        return _POSIX_NGROUPS_MAX;
    }

    private static final int _POSIX_OPEN_MAX = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_OPEN_MAX 20
     * }
     */
    public static int _POSIX_OPEN_MAX() {
        return _POSIX_OPEN_MAX;
    }

    private static final int _POSIX_PATH_MAX = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_PATH_MAX 256
     * }
     */
    public static int _POSIX_PATH_MAX() {
        return _POSIX_PATH_MAX;
    }

    private static final int _POSIX_PIPE_BUF = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_PIPE_BUF 512
     * }
     */
    public static int _POSIX_PIPE_BUF() {
        return _POSIX_PIPE_BUF;
    }

    private static final int _POSIX_SSIZE_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SSIZE_MAX 32767
     * }
     */
    public static int _POSIX_SSIZE_MAX() {
        return _POSIX_SSIZE_MAX;
    }

    private static final int _POSIX_STREAM_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_STREAM_MAX 8
     * }
     */
    public static int _POSIX_STREAM_MAX() {
        return _POSIX_STREAM_MAX;
    }

    private static final int _POSIX_TZNAME_MAX = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TZNAME_MAX 6
     * }
     */
    public static int _POSIX_TZNAME_MAX() {
        return _POSIX_TZNAME_MAX;
    }

    private static final int _POSIX2_BC_BASE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_BASE_MAX 99
     * }
     */
    public static int _POSIX2_BC_BASE_MAX() {
        return _POSIX2_BC_BASE_MAX;
    }

    private static final int _POSIX2_BC_DIM_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_DIM_MAX 2048
     * }
     */
    public static int _POSIX2_BC_DIM_MAX() {
        return _POSIX2_BC_DIM_MAX;
    }

    private static final int _POSIX2_BC_SCALE_MAX = (int) 99L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_SCALE_MAX 99
     * }
     */
    public static int _POSIX2_BC_SCALE_MAX() {
        return _POSIX2_BC_SCALE_MAX;
    }

    private static final int _POSIX2_BC_STRING_MAX = (int) 1000L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_BC_STRING_MAX 1000
     * }
     */
    public static int _POSIX2_BC_STRING_MAX() {
        return _POSIX2_BC_STRING_MAX;
    }

    private static final int _POSIX2_EQUIV_CLASS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_EQUIV_CLASS_MAX 2
     * }
     */
    public static int _POSIX2_EQUIV_CLASS_MAX() {
        return _POSIX2_EQUIV_CLASS_MAX;
    }

    private static final int _POSIX2_EXPR_NEST_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_EXPR_NEST_MAX 32
     * }
     */
    public static int _POSIX2_EXPR_NEST_MAX() {
        return _POSIX2_EXPR_NEST_MAX;
    }

    private static final int _POSIX2_LINE_MAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_LINE_MAX 2048
     * }
     */
    public static int _POSIX2_LINE_MAX() {
        return _POSIX2_LINE_MAX;
    }

    private static final int _POSIX2_RE_DUP_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_RE_DUP_MAX 255
     * }
     */
    public static int _POSIX2_RE_DUP_MAX() {
        return _POSIX2_RE_DUP_MAX;
    }

    private static final int _POSIX_AIO_LISTIO_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_AIO_LISTIO_MAX 2
     * }
     */
    public static int _POSIX_AIO_LISTIO_MAX() {
        return _POSIX_AIO_LISTIO_MAX;
    }

    private static final int _POSIX_AIO_MAX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_AIO_MAX 1
     * }
     */
    public static int _POSIX_AIO_MAX() {
        return _POSIX_AIO_MAX;
    }

    private static final int _POSIX_DELAYTIMER_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_DELAYTIMER_MAX 32
     * }
     */
    public static int _POSIX_DELAYTIMER_MAX() {
        return _POSIX_DELAYTIMER_MAX;
    }

    private static final int _POSIX_MQ_OPEN_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MQ_OPEN_MAX 8
     * }
     */
    public static int _POSIX_MQ_OPEN_MAX() {
        return _POSIX_MQ_OPEN_MAX;
    }

    private static final int _POSIX_MQ_PRIO_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_MQ_PRIO_MAX 32
     * }
     */
    public static int _POSIX_MQ_PRIO_MAX() {
        return _POSIX_MQ_PRIO_MAX;
    }

    private static final int _POSIX_RTSIG_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_RTSIG_MAX 8
     * }
     */
    public static int _POSIX_RTSIG_MAX() {
        return _POSIX_RTSIG_MAX;
    }

    private static final int _POSIX_SEM_NSEMS_MAX = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SEM_NSEMS_MAX 256
     * }
     */
    public static int _POSIX_SEM_NSEMS_MAX() {
        return _POSIX_SEM_NSEMS_MAX;
    }

    private static final int _POSIX_SEM_VALUE_MAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SEM_VALUE_MAX 32767
     * }
     */
    public static int _POSIX_SEM_VALUE_MAX() {
        return _POSIX_SEM_VALUE_MAX;
    }

    private static final int _POSIX_SIGQUEUE_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SIGQUEUE_MAX 32
     * }
     */
    public static int _POSIX_SIGQUEUE_MAX() {
        return _POSIX_SIGQUEUE_MAX;
    }

    private static final int _POSIX_TIMER_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TIMER_MAX 32
     * }
     */
    public static int _POSIX_TIMER_MAX() {
        return _POSIX_TIMER_MAX;
    }

    private static final int _POSIX_CLOCKRES_MIN = (int) 20000000L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_CLOCKRES_MIN 20000000
     * }
     */
    public static int _POSIX_CLOCKRES_MIN() {
        return _POSIX_CLOCKRES_MIN;
    }

    private static final int _POSIX_THREAD_DESTRUCTOR_ITERATIONS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_DESTRUCTOR_ITERATIONS 4
     * }
     */
    public static int _POSIX_THREAD_DESTRUCTOR_ITERATIONS() {
        return _POSIX_THREAD_DESTRUCTOR_ITERATIONS;
    }

    private static final int _POSIX_THREAD_KEYS_MAX = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_KEYS_MAX 128
     * }
     */
    public static int _POSIX_THREAD_KEYS_MAX() {
        return _POSIX_THREAD_KEYS_MAX;
    }

    private static final int _POSIX_THREAD_THREADS_MAX = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_THREAD_THREADS_MAX 64
     * }
     */
    public static int _POSIX_THREAD_THREADS_MAX() {
        return _POSIX_THREAD_THREADS_MAX;
    }

    private static final int PTHREAD_DESTRUCTOR_ITERATIONS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_DESTRUCTOR_ITERATIONS 4
     * }
     */
    public static int PTHREAD_DESTRUCTOR_ITERATIONS() {
        return PTHREAD_DESTRUCTOR_ITERATIONS;
    }

    private static final int PTHREAD_KEYS_MAX = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_KEYS_MAX 512
     * }
     */
    public static int PTHREAD_KEYS_MAX() {
        return PTHREAD_KEYS_MAX;
    }

    private static final int PTHREAD_STACK_MIN = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define PTHREAD_STACK_MIN 16384
     * }
     */
    public static int PTHREAD_STACK_MIN() {
        return PTHREAD_STACK_MIN;
    }

    private static final int _POSIX_HOST_NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_HOST_NAME_MAX 255
     * }
     */
    public static int _POSIX_HOST_NAME_MAX() {
        return _POSIX_HOST_NAME_MAX;
    }

    private static final int _POSIX_LOGIN_NAME_MAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_LOGIN_NAME_MAX 9
     * }
     */
    public static int _POSIX_LOGIN_NAME_MAX() {
        return _POSIX_LOGIN_NAME_MAX;
    }

    private static final int _POSIX_SS_REPL_MAX = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SS_REPL_MAX 4
     * }
     */
    public static int _POSIX_SS_REPL_MAX() {
        return _POSIX_SS_REPL_MAX;
    }

    private static final int _POSIX_SYMLINK_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SYMLINK_MAX 255
     * }
     */
    public static int _POSIX_SYMLINK_MAX() {
        return _POSIX_SYMLINK_MAX;
    }

    private static final int _POSIX_SYMLOOP_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_SYMLOOP_MAX 8
     * }
     */
    public static int _POSIX_SYMLOOP_MAX() {
        return _POSIX_SYMLOOP_MAX;
    }

    private static final int _POSIX_TRACE_EVENT_NAME_MAX = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_EVENT_NAME_MAX 30
     * }
     */
    public static int _POSIX_TRACE_EVENT_NAME_MAX() {
        return _POSIX_TRACE_EVENT_NAME_MAX;
    }

    private static final int _POSIX_TRACE_NAME_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_NAME_MAX 8
     * }
     */
    public static int _POSIX_TRACE_NAME_MAX() {
        return _POSIX_TRACE_NAME_MAX;
    }

    private static final int _POSIX_TRACE_SYS_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_SYS_MAX 8
     * }
     */
    public static int _POSIX_TRACE_SYS_MAX() {
        return _POSIX_TRACE_SYS_MAX;
    }

    private static final int _POSIX_TRACE_USER_EVENT_MAX = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TRACE_USER_EVENT_MAX 32
     * }
     */
    public static int _POSIX_TRACE_USER_EVENT_MAX() {
        return _POSIX_TRACE_USER_EVENT_MAX;
    }

    private static final int _POSIX_TTY_NAME_MAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define _POSIX_TTY_NAME_MAX 9
     * }
     */
    public static int _POSIX_TTY_NAME_MAX() {
        return _POSIX_TTY_NAME_MAX;
    }

    private static final int _POSIX2_CHARCLASS_NAME_MAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_CHARCLASS_NAME_MAX 14
     * }
     */
    public static int _POSIX2_CHARCLASS_NAME_MAX() {
        return _POSIX2_CHARCLASS_NAME_MAX;
    }

    private static final int _POSIX2_COLL_WEIGHTS_MAX = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _POSIX2_COLL_WEIGHTS_MAX 2
     * }
     */
    public static int _POSIX2_COLL_WEIGHTS_MAX() {
        return _POSIX2_COLL_WEIGHTS_MAX;
    }

    private static final int PASS_MAX = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define PASS_MAX 128
     * }
     */
    public static int PASS_MAX() {
        return PASS_MAX;
    }

    private static final int NL_ARGMAX = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define NL_ARGMAX 9
     * }
     */
    public static int NL_ARGMAX() {
        return NL_ARGMAX;
    }

    private static final int NL_LANGMAX = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define NL_LANGMAX 14
     * }
     */
    public static int NL_LANGMAX() {
        return NL_LANGMAX;
    }

    private static final int NL_MSGMAX = (int) 32767L;
    /**
     * {@snippet lang=c :
     * #define NL_MSGMAX 32767
     * }
     */
    public static int NL_MSGMAX() {
        return NL_MSGMAX;
    }

    private static final int NL_NMAX = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define NL_NMAX 1
     * }
     */
    public static int NL_NMAX() {
        return NL_NMAX;
    }

    private static final int NL_SETMAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define NL_SETMAX 255
     * }
     */
    public static int NL_SETMAX() {
        return NL_SETMAX;
    }

    private static final int NL_TEXTMAX = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define NL_TEXTMAX 2048
     * }
     */
    public static int NL_TEXTMAX() {
        return NL_TEXTMAX;
    }

    private static final int _XOPEN_IOV_MAX = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_IOV_MAX 16
     * }
     */
    public static int _XOPEN_IOV_MAX() {
        return _XOPEN_IOV_MAX;
    }

    private static final int IOV_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define IOV_MAX 1024
     * }
     */
    public static int IOV_MAX() {
        return IOV_MAX;
    }

    private static final int _XOPEN_NAME_MAX = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_NAME_MAX 255
     * }
     */
    public static int _XOPEN_NAME_MAX() {
        return _XOPEN_NAME_MAX;
    }

    private static final int _XOPEN_PATH_MAX = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define _XOPEN_PATH_MAX 1024
     * }
     */
    public static int _XOPEN_PATH_MAX() {
        return _XOPEN_PATH_MAX;
    }

    private static final int __DARWIN_NSIG = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_NSIG 32
     * }
     */
    public static int __DARWIN_NSIG() {
        return __DARWIN_NSIG;
    }

    private static final int _ARM_SIGNAL_ = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define _ARM_SIGNAL_ 1
     * }
     */
    public static int _ARM_SIGNAL_() {
        return _ARM_SIGNAL_;
    }

    private static final int SIGHUP = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIGHUP 1
     * }
     */
    public static int SIGHUP() {
        return SIGHUP;
    }

    private static final int SIGINT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SIGINT 2
     * }
     */
    public static int SIGINT() {
        return SIGINT;
    }

    private static final int SIGQUIT = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIGQUIT 3
     * }
     */
    public static int SIGQUIT() {
        return SIGQUIT;
    }

    private static final int SIGILL = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SIGILL 4
     * }
     */
    public static int SIGILL() {
        return SIGILL;
    }

    private static final int SIGTRAP = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define SIGTRAP 5
     * }
     */
    public static int SIGTRAP() {
        return SIGTRAP;
    }

    private static final int SIGABRT = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define SIGABRT 6
     * }
     */
    public static int SIGABRT() {
        return SIGABRT;
    }

    private static final int SIGEMT = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define SIGEMT 7
     * }
     */
    public static int SIGEMT() {
        return SIGEMT;
    }

    private static final int SIGFPE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SIGFPE 8
     * }
     */
    public static int SIGFPE() {
        return SIGFPE;
    }

    private static final int SIGKILL = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define SIGKILL 9
     * }
     */
    public static int SIGKILL() {
        return SIGKILL;
    }

    private static final int SIGBUS = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define SIGBUS 10
     * }
     */
    public static int SIGBUS() {
        return SIGBUS;
    }

    private static final int SIGSEGV = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define SIGSEGV 11
     * }
     */
    public static int SIGSEGV() {
        return SIGSEGV;
    }

    private static final int SIGSYS = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define SIGSYS 12
     * }
     */
    public static int SIGSYS() {
        return SIGSYS;
    }

    private static final int SIGPIPE = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define SIGPIPE 13
     * }
     */
    public static int SIGPIPE() {
        return SIGPIPE;
    }

    private static final int SIGALRM = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define SIGALRM 14
     * }
     */
    public static int SIGALRM() {
        return SIGALRM;
    }

    private static final int SIGTERM = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define SIGTERM 15
     * }
     */
    public static int SIGTERM() {
        return SIGTERM;
    }

    private static final int SIGURG = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SIGURG 16
     * }
     */
    public static int SIGURG() {
        return SIGURG;
    }

    private static final int SIGSTOP = (int) 17L;
    /**
     * {@snippet lang=c :
     * #define SIGSTOP 17
     * }
     */
    public static int SIGSTOP() {
        return SIGSTOP;
    }

    private static final int SIGTSTP = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define SIGTSTP 18
     * }
     */
    public static int SIGTSTP() {
        return SIGTSTP;
    }

    private static final int SIGCONT = (int) 19L;
    /**
     * {@snippet lang=c :
     * #define SIGCONT 19
     * }
     */
    public static int SIGCONT() {
        return SIGCONT;
    }

    private static final int SIGCHLD = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define SIGCHLD 20
     * }
     */
    public static int SIGCHLD() {
        return SIGCHLD;
    }

    private static final int SIGTTIN = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define SIGTTIN 21
     * }
     */
    public static int SIGTTIN() {
        return SIGTTIN;
    }

    private static final int SIGTTOU = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define SIGTTOU 22
     * }
     */
    public static int SIGTTOU() {
        return SIGTTOU;
    }

    private static final int SIGIO = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define SIGIO 23
     * }
     */
    public static int SIGIO() {
        return SIGIO;
    }

    private static final int SIGXCPU = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define SIGXCPU 24
     * }
     */
    public static int SIGXCPU() {
        return SIGXCPU;
    }

    private static final int SIGXFSZ = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define SIGXFSZ 25
     * }
     */
    public static int SIGXFSZ() {
        return SIGXFSZ;
    }

    private static final int SIGVTALRM = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define SIGVTALRM 26
     * }
     */
    public static int SIGVTALRM() {
        return SIGVTALRM;
    }

    private static final int SIGPROF = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define SIGPROF 27
     * }
     */
    public static int SIGPROF() {
        return SIGPROF;
    }

    private static final int SIGWINCH = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define SIGWINCH 28
     * }
     */
    public static int SIGWINCH() {
        return SIGWINCH;
    }

    private static final int SIGINFO = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define SIGINFO 29
     * }
     */
    public static int SIGINFO() {
        return SIGINFO;
    }

    private static final int SIGUSR1 = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define SIGUSR1 30
     * }
     */
    public static int SIGUSR1() {
        return SIGUSR1;
    }

    private static final int SIGUSR2 = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define SIGUSR2 31
     * }
     */
    public static int SIGUSR2() {
        return SIGUSR2;
    }

    private static final int __DARWIN_OPAQUE_ARM_THREAD_STATE64 = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define __DARWIN_OPAQUE_ARM_THREAD_STATE64 0
     * }
     */
    public static int __DARWIN_OPAQUE_ARM_THREAD_STATE64() {
        return __DARWIN_OPAQUE_ARM_THREAD_STATE64;
    }

    private static final int SIGEV_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_NONE 0
     * }
     */
    public static int SIGEV_NONE() {
        return SIGEV_NONE;
    }

    private static final int SIGEV_SIGNAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_SIGNAL 1
     * }
     */
    public static int SIGEV_SIGNAL() {
        return SIGEV_SIGNAL;
    }

    private static final int SIGEV_THREAD = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIGEV_THREAD 3
     * }
     */
    public static int SIGEV_THREAD() {
        return SIGEV_THREAD;
    }

    private static final int ILL_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ILL_NOOP 0
     * }
     */
    public static int ILL_NOOP() {
        return ILL_NOOP;
    }

    private static final int ILL_ILLOPC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLOPC 1
     * }
     */
    public static int ILL_ILLOPC() {
        return ILL_ILLOPC;
    }

    private static final int ILL_ILLTRP = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLTRP 2
     * }
     */
    public static int ILL_ILLTRP() {
        return ILL_ILLTRP;
    }

    private static final int ILL_PRVOPC = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define ILL_PRVOPC 3
     * }
     */
    public static int ILL_PRVOPC() {
        return ILL_PRVOPC;
    }

    private static final int ILL_ILLOPN = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLOPN 4
     * }
     */
    public static int ILL_ILLOPN() {
        return ILL_ILLOPN;
    }

    private static final int ILL_ILLADR = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define ILL_ILLADR 5
     * }
     */
    public static int ILL_ILLADR() {
        return ILL_ILLADR;
    }

    private static final int ILL_PRVREG = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define ILL_PRVREG 6
     * }
     */
    public static int ILL_PRVREG() {
        return ILL_PRVREG;
    }

    private static final int ILL_COPROC = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define ILL_COPROC 7
     * }
     */
    public static int ILL_COPROC() {
        return ILL_COPROC;
    }

    private static final int ILL_BADSTK = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ILL_BADSTK 8
     * }
     */
    public static int ILL_BADSTK() {
        return ILL_BADSTK;
    }

    private static final int FPE_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define FPE_NOOP 0
     * }
     */
    public static int FPE_NOOP() {
        return FPE_NOOP;
    }

    private static final int FPE_FLTDIV = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTDIV 1
     * }
     */
    public static int FPE_FLTDIV() {
        return FPE_FLTDIV;
    }

    private static final int FPE_FLTOVF = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTOVF 2
     * }
     */
    public static int FPE_FLTOVF() {
        return FPE_FLTOVF;
    }

    private static final int FPE_FLTUND = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTUND 3
     * }
     */
    public static int FPE_FLTUND() {
        return FPE_FLTUND;
    }

    private static final int FPE_FLTRES = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTRES 4
     * }
     */
    public static int FPE_FLTRES() {
        return FPE_FLTRES;
    }

    private static final int FPE_FLTINV = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTINV 5
     * }
     */
    public static int FPE_FLTINV() {
        return FPE_FLTINV;
    }

    private static final int FPE_FLTSUB = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define FPE_FLTSUB 6
     * }
     */
    public static int FPE_FLTSUB() {
        return FPE_FLTSUB;
    }

    private static final int FPE_INTDIV = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define FPE_INTDIV 7
     * }
     */
    public static int FPE_INTDIV() {
        return FPE_INTDIV;
    }

    private static final int FPE_INTOVF = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define FPE_INTOVF 8
     * }
     */
    public static int FPE_INTOVF() {
        return FPE_INTOVF;
    }

    private static final int SEGV_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define SEGV_NOOP 0
     * }
     */
    public static int SEGV_NOOP() {
        return SEGV_NOOP;
    }

    private static final int SEGV_MAPERR = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SEGV_MAPERR 1
     * }
     */
    public static int SEGV_MAPERR() {
        return SEGV_MAPERR;
    }

    private static final int SEGV_ACCERR = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SEGV_ACCERR 2
     * }
     */
    public static int SEGV_ACCERR() {
        return SEGV_ACCERR;
    }

    private static final int BUS_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define BUS_NOOP 0
     * }
     */
    public static int BUS_NOOP() {
        return BUS_NOOP;
    }

    private static final int BUS_ADRALN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define BUS_ADRALN 1
     * }
     */
    public static int BUS_ADRALN() {
        return BUS_ADRALN;
    }

    private static final int BUS_ADRERR = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define BUS_ADRERR 2
     * }
     */
    public static int BUS_ADRERR() {
        return BUS_ADRERR;
    }

    private static final int BUS_OBJERR = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define BUS_OBJERR 3
     * }
     */
    public static int BUS_OBJERR() {
        return BUS_OBJERR;
    }

    private static final int TRAP_BRKPT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TRAP_BRKPT 1
     * }
     */
    public static int TRAP_BRKPT() {
        return TRAP_BRKPT;
    }

    private static final int TRAP_TRACE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define TRAP_TRACE 2
     * }
     */
    public static int TRAP_TRACE() {
        return TRAP_TRACE;
    }

    private static final int CLD_NOOP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define CLD_NOOP 0
     * }
     */
    public static int CLD_NOOP() {
        return CLD_NOOP;
    }

    private static final int CLD_EXITED = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CLD_EXITED 1
     * }
     */
    public static int CLD_EXITED() {
        return CLD_EXITED;
    }

    private static final int CLD_KILLED = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CLD_KILLED 2
     * }
     */
    public static int CLD_KILLED() {
        return CLD_KILLED;
    }

    private static final int CLD_DUMPED = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define CLD_DUMPED 3
     * }
     */
    public static int CLD_DUMPED() {
        return CLD_DUMPED;
    }

    private static final int CLD_TRAPPED = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define CLD_TRAPPED 4
     * }
     */
    public static int CLD_TRAPPED() {
        return CLD_TRAPPED;
    }

    private static final int CLD_STOPPED = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define CLD_STOPPED 5
     * }
     */
    public static int CLD_STOPPED() {
        return CLD_STOPPED;
    }

    private static final int CLD_CONTINUED = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define CLD_CONTINUED 6
     * }
     */
    public static int CLD_CONTINUED() {
        return CLD_CONTINUED;
    }

    private static final int POLL_IN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define POLL_IN 1
     * }
     */
    public static int POLL_IN() {
        return POLL_IN;
    }

    private static final int POLL_OUT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define POLL_OUT 2
     * }
     */
    public static int POLL_OUT() {
        return POLL_OUT;
    }

    private static final int POLL_MSG = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define POLL_MSG 3
     * }
     */
    public static int POLL_MSG() {
        return POLL_MSG;
    }

    private static final int POLL_ERR = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define POLL_ERR 4
     * }
     */
    public static int POLL_ERR() {
        return POLL_ERR;
    }

    private static final int POLL_PRI = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define POLL_PRI 5
     * }
     */
    public static int POLL_PRI() {
        return POLL_PRI;
    }

    private static final int POLL_HUP = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define POLL_HUP 6
     * }
     */
    public static int POLL_HUP() {
        return POLL_HUP;
    }

    private static final int SA_ONSTACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SA_ONSTACK 1
     * }
     */
    public static int SA_ONSTACK() {
        return SA_ONSTACK;
    }

    private static final int SA_RESTART = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SA_RESTART 2
     * }
     */
    public static int SA_RESTART() {
        return SA_RESTART;
    }

    private static final int SA_RESETHAND = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SA_RESETHAND 4
     * }
     */
    public static int SA_RESETHAND() {
        return SA_RESETHAND;
    }

    private static final int SA_NOCLDSTOP = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SA_NOCLDSTOP 8
     * }
     */
    public static int SA_NOCLDSTOP() {
        return SA_NOCLDSTOP;
    }

    private static final int SA_NODEFER = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SA_NODEFER 16
     * }
     */
    public static int SA_NODEFER() {
        return SA_NODEFER;
    }

    private static final int SA_NOCLDWAIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define SA_NOCLDWAIT 32
     * }
     */
    public static int SA_NOCLDWAIT() {
        return SA_NOCLDWAIT;
    }

    private static final int SA_SIGINFO = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define SA_SIGINFO 64
     * }
     */
    public static int SA_SIGINFO() {
        return SA_SIGINFO;
    }

    private static final int SA_USERTRAMP = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define SA_USERTRAMP 256
     * }
     */
    public static int SA_USERTRAMP() {
        return SA_USERTRAMP;
    }

    private static final int SA_64REGSET = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define SA_64REGSET 512
     * }
     */
    public static int SA_64REGSET() {
        return SA_64REGSET;
    }

    private static final int SIG_BLOCK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SIG_BLOCK 1
     * }
     */
    public static int SIG_BLOCK() {
        return SIG_BLOCK;
    }

    private static final int SIG_UNBLOCK = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SIG_UNBLOCK 2
     * }
     */
    public static int SIG_UNBLOCK() {
        return SIG_UNBLOCK;
    }

    private static final int SIG_SETMASK = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define SIG_SETMASK 3
     * }
     */
    public static int SIG_SETMASK() {
        return SIG_SETMASK;
    }

    private static final int SI_USER = (int) 65537L;
    /**
     * {@snippet lang=c :
     * #define SI_USER 65537
     * }
     */
    public static int SI_USER() {
        return SI_USER;
    }

    private static final int SI_QUEUE = (int) 65538L;
    /**
     * {@snippet lang=c :
     * #define SI_QUEUE 65538
     * }
     */
    public static int SI_QUEUE() {
        return SI_QUEUE;
    }

    private static final int SI_TIMER = (int) 65539L;
    /**
     * {@snippet lang=c :
     * #define SI_TIMER 65539
     * }
     */
    public static int SI_TIMER() {
        return SI_TIMER;
    }

    private static final int SI_ASYNCIO = (int) 65540L;
    /**
     * {@snippet lang=c :
     * #define SI_ASYNCIO 65540
     * }
     */
    public static int SI_ASYNCIO() {
        return SI_ASYNCIO;
    }

    private static final int SI_MESGQ = (int) 65541L;
    /**
     * {@snippet lang=c :
     * #define SI_MESGQ 65541
     * }
     */
    public static int SI_MESGQ() {
        return SI_MESGQ;
    }

    private static final int SS_ONSTACK = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SS_ONSTACK 1
     * }
     */
    public static int SS_ONSTACK() {
        return SS_ONSTACK;
    }

    private static final int SS_DISABLE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SS_DISABLE 4
     * }
     */
    public static int SS_DISABLE() {
        return SS_DISABLE;
    }

    private static final int MINSIGSTKSZ = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define MINSIGSTKSZ 32768
     * }
     */
    public static int MINSIGSTKSZ() {
        return MINSIGSTKSZ;
    }

    private static final int SIGSTKSZ = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define SIGSTKSZ 131072
     * }
     */
    public static int SIGSTKSZ() {
        return SIGSTKSZ;
    }

    private static final int PSWP = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define PSWP 0
     * }
     */
    public static int PSWP() {
        return PSWP;
    }

    private static final int PVM = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PVM 4
     * }
     */
    public static int PVM() {
        return PVM;
    }

    private static final int PINOD = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define PINOD 8
     * }
     */
    public static int PINOD() {
        return PINOD;
    }

    private static final int PRIBIO = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define PRIBIO 16
     * }
     */
    public static int PRIBIO() {
        return PRIBIO;
    }

    private static final int PVFS = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define PVFS 20
     * }
     */
    public static int PVFS() {
        return PVFS;
    }

    private static final int PZERO = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define PZERO 22
     * }
     */
    public static int PZERO() {
        return PZERO;
    }

    private static final int PSOCK = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define PSOCK 24
     * }
     */
    public static int PSOCK() {
        return PSOCK;
    }

    private static final int PWAIT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define PWAIT 32
     * }
     */
    public static int PWAIT() {
        return PWAIT;
    }

    private static final int PLOCK = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define PLOCK 36
     * }
     */
    public static int PLOCK() {
        return PLOCK;
    }

    private static final int PPAUSE = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define PPAUSE 40
     * }
     */
    public static int PPAUSE() {
        return PPAUSE;
    }

    private static final int PUSER = (int) 50L;
    /**
     * {@snippet lang=c :
     * #define PUSER 50
     * }
     */
    public static int PUSER() {
        return PUSER;
    }

    private static final int MAXPRI = (int) 127L;
    /**
     * {@snippet lang=c :
     * #define MAXPRI 127
     * }
     */
    public static int MAXPRI() {
        return MAXPRI;
    }

    private static final int PRIMASK = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define PRIMASK 255
     * }
     */
    public static int PRIMASK() {
        return PRIMASK;
    }

    private static final int PCATCH = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define PCATCH 256
     * }
     */
    public static int PCATCH() {
        return PCATCH;
    }

    private static final int PTTYBLOCK = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define PTTYBLOCK 512
     * }
     */
    public static int PTTYBLOCK() {
        return PTTYBLOCK;
    }

    private static final int PDROP = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define PDROP 1024
     * }
     */
    public static int PDROP() {
        return PDROP;
    }

    private static final int PSPIN = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define PSPIN 2048
     * }
     */
    public static int PSPIN() {
        return PSPIN;
    }

    private static final int CMASK = (int) 18L;
    /**
     * {@snippet lang=c :
     * #define CMASK 18
     * }
     */
    public static int CMASK() {
        return CMASK;
    }

    private static final int CBLOCK = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define CBLOCK 64
     * }
     */
    public static int CBLOCK() {
        return CBLOCK;
    }

    private static final int MAXFRAG = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MAXFRAG 8
     * }
     */
    public static int MAXFRAG() {
        return MAXFRAG;
    }

    private static final int MAXSYMLINKS = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MAXSYMLINKS 32
     * }
     */
    public static int MAXSYMLINKS() {
        return MAXSYMLINKS;
    }

    private static final int FSHIFT = (int) 11L;
    /**
     * {@snippet lang=c :
     * #define FSHIFT 11
     * }
     */
    public static int FSHIFT() {
        return FSHIFT;
    }

    private static final int S_IFMT = (int) 61440L;
    /**
     * {@snippet lang=c :
     * #define S_IFMT 61440
     * }
     */
    public static int S_IFMT() {
        return S_IFMT;
    }

    private static final int S_IFIFO = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define S_IFIFO 4096
     * }
     */
    public static int S_IFIFO() {
        return S_IFIFO;
    }

    private static final int S_IFCHR = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define S_IFCHR 8192
     * }
     */
    public static int S_IFCHR() {
        return S_IFCHR;
    }

    private static final int S_IFDIR = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define S_IFDIR 16384
     * }
     */
    public static int S_IFDIR() {
        return S_IFDIR;
    }

    private static final int S_IFBLK = (int) 24576L;
    /**
     * {@snippet lang=c :
     * #define S_IFBLK 24576
     * }
     */
    public static int S_IFBLK() {
        return S_IFBLK;
    }

    private static final int S_IFREG = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define S_IFREG 32768
     * }
     */
    public static int S_IFREG() {
        return S_IFREG;
    }

    private static final int S_IFLNK = (int) 40960L;
    /**
     * {@snippet lang=c :
     * #define S_IFLNK 40960
     * }
     */
    public static int S_IFLNK() {
        return S_IFLNK;
    }

    private static final int S_IFSOCK = (int) 49152L;
    /**
     * {@snippet lang=c :
     * #define S_IFSOCK 49152
     * }
     */
    public static int S_IFSOCK() {
        return S_IFSOCK;
    }

    private static final int S_IFWHT = (int) 57344L;
    /**
     * {@snippet lang=c :
     * #define S_IFWHT 57344
     * }
     */
    public static int S_IFWHT() {
        return S_IFWHT;
    }

    private static final int S_IRWXU = (int) 448L;
    /**
     * {@snippet lang=c :
     * #define S_IRWXU 448
     * }
     */
    public static int S_IRWXU() {
        return S_IRWXU;
    }

    private static final int S_IRUSR = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define S_IRUSR 256
     * }
     */
    public static int S_IRUSR() {
        return S_IRUSR;
    }

    private static final int S_IWUSR = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define S_IWUSR 128
     * }
     */
    public static int S_IWUSR() {
        return S_IWUSR;
    }

    private static final int S_IXUSR = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define S_IXUSR 64
     * }
     */
    public static int S_IXUSR() {
        return S_IXUSR;
    }

    private static final int S_IRWXG = (int) 56L;
    /**
     * {@snippet lang=c :
     * #define S_IRWXG 56
     * }
     */
    public static int S_IRWXG() {
        return S_IRWXG;
    }

    private static final int S_IRGRP = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define S_IRGRP 32
     * }
     */
    public static int S_IRGRP() {
        return S_IRGRP;
    }

    private static final int S_IWGRP = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define S_IWGRP 16
     * }
     */
    public static int S_IWGRP() {
        return S_IWGRP;
    }

    private static final int S_IXGRP = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define S_IXGRP 8
     * }
     */
    public static int S_IXGRP() {
        return S_IXGRP;
    }

    private static final int S_IRWXO = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define S_IRWXO 7
     * }
     */
    public static int S_IRWXO() {
        return S_IRWXO;
    }

    private static final int S_IROTH = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define S_IROTH 4
     * }
     */
    public static int S_IROTH() {
        return S_IROTH;
    }

    private static final int S_IWOTH = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define S_IWOTH 2
     * }
     */
    public static int S_IWOTH() {
        return S_IWOTH;
    }

    private static final int S_IXOTH = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define S_IXOTH 1
     * }
     */
    public static int S_IXOTH() {
        return S_IXOTH;
    }

    private static final int S_ISUID = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define S_ISUID 2048
     * }
     */
    public static int S_ISUID() {
        return S_ISUID;
    }

    private static final int S_ISGID = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define S_ISGID 1024
     * }
     */
    public static int S_ISGID() {
        return S_ISGID;
    }

    private static final int S_ISVTX = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define S_ISVTX 512
     * }
     */
    public static int S_ISVTX() {
        return S_ISVTX;
    }

    private static final int S_BLKSIZE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define S_BLKSIZE 512
     * }
     */
    public static int S_BLKSIZE() {
        return S_BLKSIZE;
    }

    private static final int UF_SETTABLE = (int) 65535L;
    /**
     * {@snippet lang=c :
     * #define UF_SETTABLE 65535
     * }
     */
    public static int UF_SETTABLE() {
        return UF_SETTABLE;
    }

    private static final int UF_NODUMP = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define UF_NODUMP 1
     * }
     */
    public static int UF_NODUMP() {
        return UF_NODUMP;
    }

    private static final int UF_IMMUTABLE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define UF_IMMUTABLE 2
     * }
     */
    public static int UF_IMMUTABLE() {
        return UF_IMMUTABLE;
    }

    private static final int UF_APPEND = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define UF_APPEND 4
     * }
     */
    public static int UF_APPEND() {
        return UF_APPEND;
    }

    private static final int UF_OPAQUE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define UF_OPAQUE 8
     * }
     */
    public static int UF_OPAQUE() {
        return UF_OPAQUE;
    }

    private static final int UF_COMPRESSED = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define UF_COMPRESSED 32
     * }
     */
    public static int UF_COMPRESSED() {
        return UF_COMPRESSED;
    }

    private static final int UF_TRACKED = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define UF_TRACKED 64
     * }
     */
    public static int UF_TRACKED() {
        return UF_TRACKED;
    }

    private static final int UF_DATAVAULT = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define UF_DATAVAULT 128
     * }
     */
    public static int UF_DATAVAULT() {
        return UF_DATAVAULT;
    }

    private static final int UF_HIDDEN = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define UF_HIDDEN 32768
     * }
     */
    public static int UF_HIDDEN() {
        return UF_HIDDEN;
    }

    private static final int SF_SUPPORTED = (int) 10420224L;
    /**
     * {@snippet lang=c :
     * #define SF_SUPPORTED 10420224
     * }
     */
    public static int SF_SUPPORTED() {
        return SF_SUPPORTED;
    }

    private static final int SF_SETTABLE = (int) 1073676288L;
    /**
     * {@snippet lang=c :
     * #define SF_SETTABLE 1073676288
     * }
     */
    public static int SF_SETTABLE() {
        return SF_SETTABLE;
    }

    private static final int SF_ARCHIVED = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define SF_ARCHIVED 65536
     * }
     */
    public static int SF_ARCHIVED() {
        return SF_ARCHIVED;
    }

    private static final int SF_IMMUTABLE = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define SF_IMMUTABLE 131072
     * }
     */
    public static int SF_IMMUTABLE() {
        return SF_IMMUTABLE;
    }

    private static final int SF_APPEND = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define SF_APPEND 262144
     * }
     */
    public static int SF_APPEND() {
        return SF_APPEND;
    }

    private static final int SF_RESTRICTED = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define SF_RESTRICTED 524288
     * }
     */
    public static int SF_RESTRICTED() {
        return SF_RESTRICTED;
    }

    private static final int SF_NOUNLINK = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define SF_NOUNLINK 1048576
     * }
     */
    public static int SF_NOUNLINK() {
        return SF_NOUNLINK;
    }

    private static final int SF_FIRMLINK = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define SF_FIRMLINK 8388608
     * }
     */
    public static int SF_FIRMLINK() {
        return SF_FIRMLINK;
    }

    private static final int SF_DATALESS = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define SF_DATALESS 1073741824
     * }
     */
    public static int SF_DATALESS() {
        return SF_DATALESS;
    }

    private static final int EF_MAY_SHARE_BLOCKS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define EF_MAY_SHARE_BLOCKS 1
     * }
     */
    public static int EF_MAY_SHARE_BLOCKS() {
        return EF_MAY_SHARE_BLOCKS;
    }

    private static final int EF_NO_XATTRS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define EF_NO_XATTRS 2
     * }
     */
    public static int EF_NO_XATTRS() {
        return EF_NO_XATTRS;
    }

    private static final int EF_IS_SYNC_ROOT = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define EF_IS_SYNC_ROOT 4
     * }
     */
    public static int EF_IS_SYNC_ROOT() {
        return EF_IS_SYNC_ROOT;
    }

    private static final int EF_IS_PURGEABLE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define EF_IS_PURGEABLE 8
     * }
     */
    public static int EF_IS_PURGEABLE() {
        return EF_IS_PURGEABLE;
    }

    private static final int EF_IS_SPARSE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define EF_IS_SPARSE 16
     * }
     */
    public static int EF_IS_SPARSE() {
        return EF_IS_SPARSE;
    }

    private static final int EF_IS_SYNTHETIC = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define EF_IS_SYNTHETIC 32
     * }
     */
    public static int EF_IS_SYNTHETIC() {
        return EF_IS_SYNTHETIC;
    }

    private static final int EF_SHARES_ALL_BLOCKS = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define EF_SHARES_ALL_BLOCKS 64
     * }
     */
    public static int EF_SHARES_ALL_BLOCKS() {
        return EF_SHARES_ALL_BLOCKS;
    }

    private static final int MAX_AUDIT_RECORDS = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define MAX_AUDIT_RECORDS 20
     * }
     */
    public static int MAX_AUDIT_RECORDS() {
        return MAX_AUDIT_RECORDS;
    }

    private static final int AUDIT_HARD_LIMIT_FREE_BLOCKS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_HARD_LIMIT_FREE_BLOCKS 4
     * }
     */
    public static int AUDIT_HARD_LIMIT_FREE_BLOCKS() {
        return AUDIT_HARD_LIMIT_FREE_BLOCKS;
    }

    private static final int AUDIT_TRIGGER_MIN = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_MIN 1
     * }
     */
    public static int AUDIT_TRIGGER_MIN() {
        return AUDIT_TRIGGER_MIN;
    }

    private static final int AUDIT_TRIGGER_LOW_SPACE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_LOW_SPACE 1
     * }
     */
    public static int AUDIT_TRIGGER_LOW_SPACE() {
        return AUDIT_TRIGGER_LOW_SPACE;
    }

    private static final int AUDIT_TRIGGER_ROTATE_KERNEL = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_ROTATE_KERNEL 2
     * }
     */
    public static int AUDIT_TRIGGER_ROTATE_KERNEL() {
        return AUDIT_TRIGGER_ROTATE_KERNEL;
    }

    private static final int AUDIT_TRIGGER_READ_FILE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_READ_FILE 3
     * }
     */
    public static int AUDIT_TRIGGER_READ_FILE() {
        return AUDIT_TRIGGER_READ_FILE;
    }

    private static final int AUDIT_TRIGGER_CLOSE_AND_DIE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_CLOSE_AND_DIE 4
     * }
     */
    public static int AUDIT_TRIGGER_CLOSE_AND_DIE() {
        return AUDIT_TRIGGER_CLOSE_AND_DIE;
    }

    private static final int AUDIT_TRIGGER_NO_SPACE = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_NO_SPACE 5
     * }
     */
    public static int AUDIT_TRIGGER_NO_SPACE() {
        return AUDIT_TRIGGER_NO_SPACE;
    }

    private static final int AUDIT_TRIGGER_ROTATE_USER = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_ROTATE_USER 6
     * }
     */
    public static int AUDIT_TRIGGER_ROTATE_USER() {
        return AUDIT_TRIGGER_ROTATE_USER;
    }

    private static final int AUDIT_TRIGGER_INITIALIZE = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_INITIALIZE 7
     * }
     */
    public static int AUDIT_TRIGGER_INITIALIZE() {
        return AUDIT_TRIGGER_INITIALIZE;
    }

    private static final int AUDIT_TRIGGER_EXPIRE_TRAILS = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_EXPIRE_TRAILS 8
     * }
     */
    public static int AUDIT_TRIGGER_EXPIRE_TRAILS() {
        return AUDIT_TRIGGER_EXPIRE_TRAILS;
    }

    private static final int AUDIT_TRIGGER_MAX = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRIGGER_MAX 8
     * }
     */
    public static int AUDIT_TRIGGER_MAX() {
        return AUDIT_TRIGGER_MAX;
    }

    private static final int AU_DEFAUDITSID = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define AU_DEFAUDITSID 0
     * }
     */
    public static int AU_DEFAUDITSID() {
        return AU_DEFAUDITSID;
    }

    private static final int AUC_UNSET = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define AUC_UNSET 0
     * }
     */
    public static int AUC_UNSET() {
        return AUC_UNSET;
    }

    private static final int AUC_AUDITING = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUC_AUDITING 1
     * }
     */
    public static int AUC_AUDITING() {
        return AUC_AUDITING;
    }

    private static final int AUC_NOAUDIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUC_NOAUDIT 2
     * }
     */
    public static int AUC_NOAUDIT() {
        return AUC_NOAUDIT;
    }

    private static final int A_OLDGETPOLICY = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETPOLICY 2
     * }
     */
    public static int A_OLDGETPOLICY() {
        return A_OLDGETPOLICY;
    }

    private static final int A_OLDSETPOLICY = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETPOLICY 3
     * }
     */
    public static int A_OLDSETPOLICY() {
        return A_OLDSETPOLICY;
    }

    private static final int A_GETKMASK = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define A_GETKMASK 4
     * }
     */
    public static int A_GETKMASK() {
        return A_GETKMASK;
    }

    private static final int A_SETKMASK = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define A_SETKMASK 5
     * }
     */
    public static int A_SETKMASK() {
        return A_SETKMASK;
    }

    private static final int A_OLDGETQCTRL = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETQCTRL 6
     * }
     */
    public static int A_OLDGETQCTRL() {
        return A_OLDGETQCTRL;
    }

    private static final int A_OLDSETQCTRL = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETQCTRL 7
     * }
     */
    public static int A_OLDSETQCTRL() {
        return A_OLDSETQCTRL;
    }

    private static final int A_GETCWD = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define A_GETCWD 8
     * }
     */
    public static int A_GETCWD() {
        return A_GETCWD;
    }

    private static final int A_GETCAR = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define A_GETCAR 9
     * }
     */
    public static int A_GETCAR() {
        return A_GETCAR;
    }

    private static final int A_GETSTAT = (int) 12L;
    /**
     * {@snippet lang=c :
     * #define A_GETSTAT 12
     * }
     */
    public static int A_GETSTAT() {
        return A_GETSTAT;
    }

    private static final int A_SETSTAT = (int) 13L;
    /**
     * {@snippet lang=c :
     * #define A_SETSTAT 13
     * }
     */
    public static int A_SETSTAT() {
        return A_SETSTAT;
    }

    private static final int A_SETUMASK = (int) 14L;
    /**
     * {@snippet lang=c :
     * #define A_SETUMASK 14
     * }
     */
    public static int A_SETUMASK() {
        return A_SETUMASK;
    }

    private static final int A_SETSMASK = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define A_SETSMASK 15
     * }
     */
    public static int A_SETSMASK() {
        return A_SETSMASK;
    }

    private static final int A_OLDGETCOND = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define A_OLDGETCOND 20
     * }
     */
    public static int A_OLDGETCOND() {
        return A_OLDGETCOND;
    }

    private static final int A_OLDSETCOND = (int) 21L;
    /**
     * {@snippet lang=c :
     * #define A_OLDSETCOND 21
     * }
     */
    public static int A_OLDSETCOND() {
        return A_OLDSETCOND;
    }

    private static final int A_GETCLASS = (int) 22L;
    /**
     * {@snippet lang=c :
     * #define A_GETCLASS 22
     * }
     */
    public static int A_GETCLASS() {
        return A_GETCLASS;
    }

    private static final int A_SETCLASS = (int) 23L;
    /**
     * {@snippet lang=c :
     * #define A_SETCLASS 23
     * }
     */
    public static int A_SETCLASS() {
        return A_SETCLASS;
    }

    private static final int A_GETPINFO = (int) 24L;
    /**
     * {@snippet lang=c :
     * #define A_GETPINFO 24
     * }
     */
    public static int A_GETPINFO() {
        return A_GETPINFO;
    }

    private static final int A_SETPMASK = (int) 25L;
    /**
     * {@snippet lang=c :
     * #define A_SETPMASK 25
     * }
     */
    public static int A_SETPMASK() {
        return A_SETPMASK;
    }

    private static final int A_SETFSIZE = (int) 26L;
    /**
     * {@snippet lang=c :
     * #define A_SETFSIZE 26
     * }
     */
    public static int A_SETFSIZE() {
        return A_SETFSIZE;
    }

    private static final int A_GETFSIZE = (int) 27L;
    /**
     * {@snippet lang=c :
     * #define A_GETFSIZE 27
     * }
     */
    public static int A_GETFSIZE() {
        return A_GETFSIZE;
    }

    private static final int A_GETPINFO_ADDR = (int) 28L;
    /**
     * {@snippet lang=c :
     * #define A_GETPINFO_ADDR 28
     * }
     */
    public static int A_GETPINFO_ADDR() {
        return A_GETPINFO_ADDR;
    }

    private static final int A_GETKAUDIT = (int) 29L;
    /**
     * {@snippet lang=c :
     * #define A_GETKAUDIT 29
     * }
     */
    public static int A_GETKAUDIT() {
        return A_GETKAUDIT;
    }

    private static final int A_SETKAUDIT = (int) 30L;
    /**
     * {@snippet lang=c :
     * #define A_SETKAUDIT 30
     * }
     */
    public static int A_SETKAUDIT() {
        return A_SETKAUDIT;
    }

    private static final int A_SENDTRIGGER = (int) 31L;
    /**
     * {@snippet lang=c :
     * #define A_SENDTRIGGER 31
     * }
     */
    public static int A_SENDTRIGGER() {
        return A_SENDTRIGGER;
    }

    private static final int A_GETSINFO_ADDR = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define A_GETSINFO_ADDR 32
     * }
     */
    public static int A_GETSINFO_ADDR() {
        return A_GETSINFO_ADDR;
    }

    private static final int A_GETPOLICY = (int) 33L;
    /**
     * {@snippet lang=c :
     * #define A_GETPOLICY 33
     * }
     */
    public static int A_GETPOLICY() {
        return A_GETPOLICY;
    }

    private static final int A_SETPOLICY = (int) 34L;
    /**
     * {@snippet lang=c :
     * #define A_SETPOLICY 34
     * }
     */
    public static int A_SETPOLICY() {
        return A_SETPOLICY;
    }

    private static final int A_GETQCTRL = (int) 35L;
    /**
     * {@snippet lang=c :
     * #define A_GETQCTRL 35
     * }
     */
    public static int A_GETQCTRL() {
        return A_GETQCTRL;
    }

    private static final int A_SETQCTRL = (int) 36L;
    /**
     * {@snippet lang=c :
     * #define A_SETQCTRL 36
     * }
     */
    public static int A_SETQCTRL() {
        return A_SETQCTRL;
    }

    private static final int A_GETCOND = (int) 37L;
    /**
     * {@snippet lang=c :
     * #define A_GETCOND 37
     * }
     */
    public static int A_GETCOND() {
        return A_GETCOND;
    }

    private static final int A_SETCOND = (int) 38L;
    /**
     * {@snippet lang=c :
     * #define A_SETCOND 38
     * }
     */
    public static int A_SETCOND() {
        return A_SETCOND;
    }

    private static final int A_GETSFLAGS = (int) 39L;
    /**
     * {@snippet lang=c :
     * #define A_GETSFLAGS 39
     * }
     */
    public static int A_GETSFLAGS() {
        return A_GETSFLAGS;
    }

    private static final int A_SETSFLAGS = (int) 40L;
    /**
     * {@snippet lang=c :
     * #define A_SETSFLAGS 40
     * }
     */
    public static int A_SETSFLAGS() {
        return A_SETSFLAGS;
    }

    private static final int A_GETCTLMODE = (int) 41L;
    /**
     * {@snippet lang=c :
     * #define A_GETCTLMODE 41
     * }
     */
    public static int A_GETCTLMODE() {
        return A_GETCTLMODE;
    }

    private static final int A_SETCTLMODE = (int) 42L;
    /**
     * {@snippet lang=c :
     * #define A_SETCTLMODE 42
     * }
     */
    public static int A_SETCTLMODE() {
        return A_SETCTLMODE;
    }

    private static final int A_GETEXPAFTER = (int) 43L;
    /**
     * {@snippet lang=c :
     * #define A_GETEXPAFTER 43
     * }
     */
    public static int A_GETEXPAFTER() {
        return A_GETEXPAFTER;
    }

    private static final int A_SETEXPAFTER = (int) 44L;
    /**
     * {@snippet lang=c :
     * #define A_SETEXPAFTER 44
     * }
     */
    public static int A_SETEXPAFTER() {
        return A_SETEXPAFTER;
    }

    private static final int AUDIT_CNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_CNT 1
     * }
     */
    public static int AUDIT_CNT() {
        return AUDIT_CNT;
    }

    private static final int AUDIT_AHLT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_AHLT 2
     * }
     */
    public static int AUDIT_AHLT() {
        return AUDIT_AHLT;
    }

    private static final int AUDIT_ARGV = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ARGV 4
     * }
     */
    public static int AUDIT_ARGV() {
        return AUDIT_ARGV;
    }

    private static final int AUDIT_ARGE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ARGE 8
     * }
     */
    public static int AUDIT_ARGE() {
        return AUDIT_ARGE;
    }

    private static final int AUDIT_SEQ = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_SEQ 16
     * }
     */
    public static int AUDIT_SEQ() {
        return AUDIT_SEQ;
    }

    private static final int AUDIT_WINDATA = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_WINDATA 32
     * }
     */
    public static int AUDIT_WINDATA() {
        return AUDIT_WINDATA;
    }

    private static final int AUDIT_USER = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_USER 64
     * }
     */
    public static int AUDIT_USER() {
        return AUDIT_USER;
    }

    private static final int AUDIT_GROUP = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_GROUP 128
     * }
     */
    public static int AUDIT_GROUP() {
        return AUDIT_GROUP;
    }

    private static final int AUDIT_TRAIL = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_TRAIL 256
     * }
     */
    public static int AUDIT_TRAIL() {
        return AUDIT_TRAIL;
    }

    private static final int AUDIT_PATH = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PATH 512
     * }
     */
    public static int AUDIT_PATH() {
        return AUDIT_PATH;
    }

    private static final int AUDIT_SCNT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_SCNT 1024
     * }
     */
    public static int AUDIT_SCNT() {
        return AUDIT_SCNT;
    }

    private static final int AUDIT_PUBLIC = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PUBLIC 2048
     * }
     */
    public static int AUDIT_PUBLIC() {
        return AUDIT_PUBLIC;
    }

    private static final int AUDIT_ZONENAME = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_ZONENAME 4096
     * }
     */
    public static int AUDIT_ZONENAME() {
        return AUDIT_ZONENAME;
    }

    private static final int AUDIT_PERZONE = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define AUDIT_PERZONE 8192
     * }
     */
    public static int AUDIT_PERZONE() {
        return AUDIT_PERZONE;
    }

    private static final int AQ_HIWATER = (int) 100L;
    /**
     * {@snippet lang=c :
     * #define AQ_HIWATER 100
     * }
     */
    public static int AQ_HIWATER() {
        return AQ_HIWATER;
    }

    private static final int AQ_MAXHIGH = (int) 10000L;
    /**
     * {@snippet lang=c :
     * #define AQ_MAXHIGH 10000
     * }
     */
    public static int AQ_MAXHIGH() {
        return AQ_MAXHIGH;
    }

    private static final int AQ_LOWATER = (int) 10L;
    /**
     * {@snippet lang=c :
     * #define AQ_LOWATER 10
     * }
     */
    public static int AQ_LOWATER() {
        return AQ_LOWATER;
    }

    private static final int AQ_MAXBUFSZ = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define AQ_MAXBUFSZ 1048576
     * }
     */
    public static int AQ_MAXBUFSZ() {
        return AQ_MAXBUFSZ;
    }

    private static final int AU_FS_MINFREE = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define AU_FS_MINFREE 20
     * }
     */
    public static int AU_FS_MINFREE() {
        return AU_FS_MINFREE;
    }

    private static final int AU_IPv4 = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define AU_IPv4 4
     * }
     */
    public static int AU_IPv4() {
        return AU_IPv4;
    }

    private static final int AU_IPv6 = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define AU_IPv6 16
     * }
     */
    public static int AU_IPv6() {
        return AU_IPv6;
    }

    private static final int AU_CLASS_MASK_RESERVED = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define AU_CLASS_MASK_RESERVED 268435456
     * }
     */
    public static int AU_CLASS_MASK_RESERVED() {
        return AU_CLASS_MASK_RESERVED;
    }

    private static final int TRUE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TRUE 1
     * }
     */
    public static int TRUE() {
        return TRUE;
    }

    private static final int FALSE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define FALSE 0
     * }
     */
    public static int FALSE() {
        return FALSE;
    }

    private static final int MACH_PORT_NULL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_NULL 0
     * }
     */
    public static int MACH_PORT_NULL() {
        return MACH_PORT_NULL;
    }

    private static final int MACH_PORT_TYPE_SPREQUEST = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SPREQUEST 1073741824
     * }
     */
    public static int MACH_PORT_TYPE_SPREQUEST() {
        return MACH_PORT_TYPE_SPREQUEST;
    }

    private static final int MACH_PORT_TYPE_SPREQUEST_DELAYED = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TYPE_SPREQUEST_DELAYED 536870912
     * }
     */
    public static int MACH_PORT_TYPE_SPREQUEST_DELAYED() {
        return MACH_PORT_TYPE_SPREQUEST_DELAYED;
    }

    private static final int MACH_PORT_SRIGHTS_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SRIGHTS_NONE 0
     * }
     */
    public static int MACH_PORT_SRIGHTS_NONE() {
        return MACH_PORT_SRIGHTS_NONE;
    }

    private static final int MACH_PORT_SRIGHTS_PRESENT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SRIGHTS_PRESENT 1
     * }
     */
    public static int MACH_PORT_SRIGHTS_PRESENT() {
        return MACH_PORT_SRIGHTS_PRESENT;
    }

    private static final int MACH_PORT_STATUS_FLAG_TEMPOWNER = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_TEMPOWNER 1
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_TEMPOWNER() {
        return MACH_PORT_STATUS_FLAG_TEMPOWNER;
    }

    private static final int MACH_PORT_STATUS_FLAG_GUARDED = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_GUARDED 2
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_GUARDED() {
        return MACH_PORT_STATUS_FLAG_GUARDED;
    }

    private static final int MACH_PORT_STATUS_FLAG_STRICT_GUARD = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_STRICT_GUARD 4
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_STRICT_GUARD() {
        return MACH_PORT_STATUS_FLAG_STRICT_GUARD;
    }

    private static final int MACH_PORT_STATUS_FLAG_IMP_DONATION = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_IMP_DONATION 8
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_IMP_DONATION() {
        return MACH_PORT_STATUS_FLAG_IMP_DONATION;
    }

    private static final int MACH_PORT_STATUS_FLAG_REVIVE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_REVIVE 16
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_REVIVE() {
        return MACH_PORT_STATUS_FLAG_REVIVE;
    }

    private static final int MACH_PORT_STATUS_FLAG_TASKPTR = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_TASKPTR 32
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_TASKPTR() {
        return MACH_PORT_STATUS_FLAG_TASKPTR;
    }

    private static final int MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE 64
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE() {
        return MACH_PORT_STATUS_FLAG_GUARD_IMMOVABLE_RECEIVE;
    }

    private static final int MACH_PORT_STATUS_FLAG_NO_GRANT = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_STATUS_FLAG_NO_GRANT 128
     * }
     */
    public static int MACH_PORT_STATUS_FLAG_NO_GRANT() {
        return MACH_PORT_STATUS_FLAG_NO_GRANT;
    }

    private static final int MACH_PORT_LIMITS_INFO = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_LIMITS_INFO 1
     * }
     */
    public static int MACH_PORT_LIMITS_INFO() {
        return MACH_PORT_LIMITS_INFO;
    }

    private static final int MACH_PORT_RECEIVE_STATUS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_RECEIVE_STATUS 2
     * }
     */
    public static int MACH_PORT_RECEIVE_STATUS() {
        return MACH_PORT_RECEIVE_STATUS;
    }

    private static final int MACH_PORT_DNREQUESTS_SIZE = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DNREQUESTS_SIZE 3
     * }
     */
    public static int MACH_PORT_DNREQUESTS_SIZE() {
        return MACH_PORT_DNREQUESTS_SIZE;
    }

    private static final int MACH_PORT_TEMPOWNER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_TEMPOWNER 4
     * }
     */
    public static int MACH_PORT_TEMPOWNER() {
        return MACH_PORT_TEMPOWNER;
    }

    private static final int MACH_PORT_IMPORTANCE_RECEIVER = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_IMPORTANCE_RECEIVER 5
     * }
     */
    public static int MACH_PORT_IMPORTANCE_RECEIVER() {
        return MACH_PORT_IMPORTANCE_RECEIVER;
    }

    private static final int MACH_PORT_DENAP_RECEIVER = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DENAP_RECEIVER 6
     * }
     */
    public static int MACH_PORT_DENAP_RECEIVER() {
        return MACH_PORT_DENAP_RECEIVER;
    }

    private static final int MACH_PORT_INFO_EXT = (int) 7L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_INFO_EXT 7
     * }
     */
    public static int MACH_PORT_INFO_EXT() {
        return MACH_PORT_INFO_EXT;
    }

    private static final int MACH_PORT_GUARD_INFO = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_GUARD_INFO 8
     * }
     */
    public static int MACH_PORT_GUARD_INFO() {
        return MACH_PORT_GUARD_INFO;
    }

    private static final int MACH_PORT_SERVICE_THROTTLED = (int) 9L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SERVICE_THROTTLED 9
     * }
     */
    public static int MACH_PORT_SERVICE_THROTTLED() {
        return MACH_PORT_SERVICE_THROTTLED;
    }

    private static final int MACH_PORT_DNREQUESTS_SIZE_COUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_DNREQUESTS_SIZE_COUNT 1
     * }
     */
    public static int MACH_PORT_DNREQUESTS_SIZE_COUNT() {
        return MACH_PORT_DNREQUESTS_SIZE_COUNT;
    }

    private static final int MACH_PORT_SERVICE_THROTTLED_COUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MACH_PORT_SERVICE_THROTTLED_COUNT 1
     * }
     */
    public static int MACH_PORT_SERVICE_THROTTLED_COUNT() {
        return MACH_PORT_SERVICE_THROTTLED_COUNT;
    }

    private static final int MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN = (int) 255L;
    /**
     * {@snippet lang=c :
     * #define MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN 255
     * }
     */
    public static int MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN() {
        return MACH_SERVICE_PORT_INFO_STRING_NAME_MAX_BUF_LEN;
    }

    private static final int MPO_CONTEXT_AS_GUARD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MPO_CONTEXT_AS_GUARD 1
     * }
     */
    public static int MPO_CONTEXT_AS_GUARD() {
        return MPO_CONTEXT_AS_GUARD;
    }

    private static final int MPO_QLIMIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MPO_QLIMIT 2
     * }
     */
    public static int MPO_QLIMIT() {
        return MPO_QLIMIT;
    }

    private static final int MPO_TEMPOWNER = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MPO_TEMPOWNER 4
     * }
     */
    public static int MPO_TEMPOWNER() {
        return MPO_TEMPOWNER;
    }

    private static final int MPO_IMPORTANCE_RECEIVER = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MPO_IMPORTANCE_RECEIVER 8
     * }
     */
    public static int MPO_IMPORTANCE_RECEIVER() {
        return MPO_IMPORTANCE_RECEIVER;
    }

    private static final int MPO_INSERT_SEND_RIGHT = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MPO_INSERT_SEND_RIGHT 16
     * }
     */
    public static int MPO_INSERT_SEND_RIGHT() {
        return MPO_INSERT_SEND_RIGHT;
    }

    private static final int MPO_STRICT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MPO_STRICT 32
     * }
     */
    public static int MPO_STRICT() {
        return MPO_STRICT;
    }

    private static final int MPO_DENAP_RECEIVER = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MPO_DENAP_RECEIVER 64
     * }
     */
    public static int MPO_DENAP_RECEIVER() {
        return MPO_DENAP_RECEIVER;
    }

    private static final int MPO_IMMOVABLE_RECEIVE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define MPO_IMMOVABLE_RECEIVE 128
     * }
     */
    public static int MPO_IMMOVABLE_RECEIVE() {
        return MPO_IMMOVABLE_RECEIVE;
    }

    private static final int MPO_FILTER_MSG = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MPO_FILTER_MSG 256
     * }
     */
    public static int MPO_FILTER_MSG() {
        return MPO_FILTER_MSG;
    }

    private static final int MPO_TG_BLOCK_TRACKING = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define MPO_TG_BLOCK_TRACKING 512
     * }
     */
    public static int MPO_TG_BLOCK_TRACKING() {
        return MPO_TG_BLOCK_TRACKING;
    }

    private static final int MPO_SERVICE_PORT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MPO_SERVICE_PORT 1024
     * }
     */
    public static int MPO_SERVICE_PORT() {
        return MPO_SERVICE_PORT;
    }

    private static final int MPO_CONNECTION_PORT = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define MPO_CONNECTION_PORT 2048
     * }
     */
    public static int MPO_CONNECTION_PORT() {
        return MPO_CONNECTION_PORT;
    }

    private static final int MPO_REPLY_PORT = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define MPO_REPLY_PORT 4096
     * }
     */
    public static int MPO_REPLY_PORT() {
        return MPO_REPLY_PORT;
    }

    private static final int MPO_ENFORCE_REPLY_PORT_SEMANTICS = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define MPO_ENFORCE_REPLY_PORT_SEMANTICS 8192
     * }
     */
    public static int MPO_ENFORCE_REPLY_PORT_SEMANTICS() {
        return MPO_ENFORCE_REPLY_PORT_SEMANTICS;
    }

    private static final int MPO_PROVISIONAL_REPLY_PORT = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define MPO_PROVISIONAL_REPLY_PORT 16384
     * }
     */
    public static int MPO_PROVISIONAL_REPLY_PORT() {
        return MPO_PROVISIONAL_REPLY_PORT;
    }

    private static final int MPO_PROVISIONAL_ID_PROT_OPTOUT = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define MPO_PROVISIONAL_ID_PROT_OPTOUT 32768
     * }
     */
    public static int MPO_PROVISIONAL_ID_PROT_OPTOUT() {
        return MPO_PROVISIONAL_ID_PROT_OPTOUT;
    }

    private static final int GUARD_TYPE_MACH_PORT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define GUARD_TYPE_MACH_PORT 1
     * }
     */
    public static int GUARD_TYPE_MACH_PORT() {
        return GUARD_TYPE_MACH_PORT;
    }

    private static final int MPG_STRICT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MPG_STRICT 1
     * }
     */
    public static int MPG_STRICT() {
        return MPG_STRICT;
    }

    private static final int MPG_IMMOVABLE_RECEIVE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MPG_IMMOVABLE_RECEIVE 2
     * }
     */
    public static int MPG_IMMOVABLE_RECEIVE() {
        return MPG_IMMOVABLE_RECEIVE;
    }

    private static final int CRF_NOMEMBERD = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CRF_NOMEMBERD 1
     * }
     */
    public static int CRF_NOMEMBERD() {
        return CRF_NOMEMBERD;
    }

    private static final int CRF_MAC_ENFORCE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define CRF_MAC_ENFORCE 2
     * }
     */
    public static int CRF_MAC_ENFORCE() {
        return CRF_MAC_ENFORCE;
    }

    private static final int XUCRED_VERSION = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define XUCRED_VERSION 0
     * }
     */
    public static int XUCRED_VERSION() {
        return XUCRED_VERSION;
    }

    private static final int ITIMER_REAL = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_REAL 0
     * }
     */
    public static int ITIMER_REAL() {
        return ITIMER_REAL;
    }

    private static final int ITIMER_VIRTUAL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_VIRTUAL 1
     * }
     */
    public static int ITIMER_VIRTUAL() {
        return ITIMER_VIRTUAL;
    }

    private static final int ITIMER_PROF = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ITIMER_PROF 2
     * }
     */
    public static int ITIMER_PROF() {
        return ITIMER_PROF;
    }

    private static final int DST_NONE = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define DST_NONE 0
     * }
     */
    public static int DST_NONE() {
        return DST_NONE;
    }

    private static final int DST_USA = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define DST_USA 1
     * }
     */
    public static int DST_USA() {
        return DST_USA;
    }

    private static final int DST_AUST = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define DST_AUST 2
     * }
     */
    public static int DST_AUST() {
        return DST_AUST;
    }

    private static final int DST_WET = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define DST_WET 3
     * }
     */
    public static int DST_WET() {
        return DST_WET;
    }

    private static final int DST_MET = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define DST_MET 4
     * }
     */
    public static int DST_MET() {
        return DST_MET;
    }

    private static final int DST_EET = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define DST_EET 5
     * }
     */
    public static int DST_EET() {
        return DST_EET;
    }

    private static final int DST_CAN = (int) 6L;
    /**
     * {@snippet lang=c :
     * #define DST_CAN 6
     * }
     */
    public static int DST_CAN() {
        return DST_CAN;
    }

    private static final int _FORTIFY_SOURCE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define _FORTIFY_SOURCE 2
     * }
     */
    public static int _FORTIFY_SOURCE() {
        return _FORTIFY_SOURCE;
    }

    private static final int TIME_UTC = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define TIME_UTC 1
     * }
     */
    public static int TIME_UTC() {
        return TIME_UTC;
    }

    private static final int FSOPT_NOFOLLOW = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_NOFOLLOW 1
     * }
     */
    public static int FSOPT_NOFOLLOW() {
        return FSOPT_NOFOLLOW;
    }

    private static final int FSOPT_NOINMEMUPDATE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_NOINMEMUPDATE 2
     * }
     */
    public static int FSOPT_NOINMEMUPDATE() {
        return FSOPT_NOINMEMUPDATE;
    }

    private static final int FSOPT_REPORT_FULLSIZE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_REPORT_FULLSIZE 4
     * }
     */
    public static int FSOPT_REPORT_FULLSIZE() {
        return FSOPT_REPORT_FULLSIZE;
    }

    private static final int FSOPT_PACK_INVAL_ATTRS = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_PACK_INVAL_ATTRS 8
     * }
     */
    public static int FSOPT_PACK_INVAL_ATTRS() {
        return FSOPT_PACK_INVAL_ATTRS;
    }

    private static final int FSOPT_ATTR_CMN_EXTENDED = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_ATTR_CMN_EXTENDED 32
     * }
     */
    public static int FSOPT_ATTR_CMN_EXTENDED() {
        return FSOPT_ATTR_CMN_EXTENDED;
    }

    private static final int FSOPT_RETURN_REALDEV = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_RETURN_REALDEV 512
     * }
     */
    public static int FSOPT_RETURN_REALDEV() {
        return FSOPT_RETURN_REALDEV;
    }

    private static final int FSOPT_NOFOLLOW_ANY = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define FSOPT_NOFOLLOW_ANY 2048
     * }
     */
    public static int FSOPT_NOFOLLOW_ANY() {
        return FSOPT_NOFOLLOW_ANY;
    }

    private static final int SEARCHFS_MAX_SEARCHPARMS = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define SEARCHFS_MAX_SEARCHPARMS 4096
     * }
     */
    public static int SEARCHFS_MAX_SEARCHPARMS() {
        return SEARCHFS_MAX_SEARCHPARMS;
    }

    private static final int ATTR_BIT_MAP_COUNT = (int) 5L;
    /**
     * {@snippet lang=c :
     * #define ATTR_BIT_MAP_COUNT 5
     * }
     */
    public static int ATTR_BIT_MAP_COUNT() {
        return ATTR_BIT_MAP_COUNT;
    }

    private static final int VOL_CAPABILITIES_FORMAT = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAPABILITIES_FORMAT 0
     * }
     */
    public static int VOL_CAPABILITIES_FORMAT() {
        return VOL_CAPABILITIES_FORMAT;
    }

    private static final int VOL_CAPABILITIES_INTERFACES = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAPABILITIES_INTERFACES 1
     * }
     */
    public static int VOL_CAPABILITIES_INTERFACES() {
        return VOL_CAPABILITIES_INTERFACES;
    }

    private static final int VOL_CAPABILITIES_RESERVED1 = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAPABILITIES_RESERVED1 2
     * }
     */
    public static int VOL_CAPABILITIES_RESERVED1() {
        return VOL_CAPABILITIES_RESERVED1;
    }

    private static final int VOL_CAPABILITIES_RESERVED2 = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAPABILITIES_RESERVED2 3
     * }
     */
    public static int VOL_CAPABILITIES_RESERVED2() {
        return VOL_CAPABILITIES_RESERVED2;
    }

    private static final int ATTR_MAX_BUFFER = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define ATTR_MAX_BUFFER 8192
     * }
     */
    public static int ATTR_MAX_BUFFER() {
        return ATTR_MAX_BUFFER;
    }

    private static final int VOL_CAP_FMT_PERSISTENTOBJECTIDS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_PERSISTENTOBJECTIDS 1
     * }
     */
    public static int VOL_CAP_FMT_PERSISTENTOBJECTIDS() {
        return VOL_CAP_FMT_PERSISTENTOBJECTIDS;
    }

    private static final int VOL_CAP_FMT_SYMBOLICLINKS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_SYMBOLICLINKS 2
     * }
     */
    public static int VOL_CAP_FMT_SYMBOLICLINKS() {
        return VOL_CAP_FMT_SYMBOLICLINKS;
    }

    private static final int VOL_CAP_FMT_HARDLINKS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_HARDLINKS 4
     * }
     */
    public static int VOL_CAP_FMT_HARDLINKS() {
        return VOL_CAP_FMT_HARDLINKS;
    }

    private static final int VOL_CAP_FMT_JOURNAL = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_JOURNAL 8
     * }
     */
    public static int VOL_CAP_FMT_JOURNAL() {
        return VOL_CAP_FMT_JOURNAL;
    }

    private static final int VOL_CAP_FMT_JOURNAL_ACTIVE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_JOURNAL_ACTIVE 16
     * }
     */
    public static int VOL_CAP_FMT_JOURNAL_ACTIVE() {
        return VOL_CAP_FMT_JOURNAL_ACTIVE;
    }

    private static final int VOL_CAP_FMT_NO_ROOT_TIMES = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_NO_ROOT_TIMES 32
     * }
     */
    public static int VOL_CAP_FMT_NO_ROOT_TIMES() {
        return VOL_CAP_FMT_NO_ROOT_TIMES;
    }

    private static final int VOL_CAP_FMT_SPARSE_FILES = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_SPARSE_FILES 64
     * }
     */
    public static int VOL_CAP_FMT_SPARSE_FILES() {
        return VOL_CAP_FMT_SPARSE_FILES;
    }

    private static final int VOL_CAP_FMT_ZERO_RUNS = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_ZERO_RUNS 128
     * }
     */
    public static int VOL_CAP_FMT_ZERO_RUNS() {
        return VOL_CAP_FMT_ZERO_RUNS;
    }

    private static final int VOL_CAP_FMT_CASE_SENSITIVE = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_CASE_SENSITIVE 256
     * }
     */
    public static int VOL_CAP_FMT_CASE_SENSITIVE() {
        return VOL_CAP_FMT_CASE_SENSITIVE;
    }

    private static final int VOL_CAP_FMT_CASE_PRESERVING = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_CASE_PRESERVING 512
     * }
     */
    public static int VOL_CAP_FMT_CASE_PRESERVING() {
        return VOL_CAP_FMT_CASE_PRESERVING;
    }

    private static final int VOL_CAP_FMT_FAST_STATFS = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_FAST_STATFS 1024
     * }
     */
    public static int VOL_CAP_FMT_FAST_STATFS() {
        return VOL_CAP_FMT_FAST_STATFS;
    }

    private static final int VOL_CAP_FMT_2TB_FILESIZE = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_2TB_FILESIZE 2048
     * }
     */
    public static int VOL_CAP_FMT_2TB_FILESIZE() {
        return VOL_CAP_FMT_2TB_FILESIZE;
    }

    private static final int VOL_CAP_FMT_OPENDENYMODES = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_OPENDENYMODES 4096
     * }
     */
    public static int VOL_CAP_FMT_OPENDENYMODES() {
        return VOL_CAP_FMT_OPENDENYMODES;
    }

    private static final int VOL_CAP_FMT_HIDDEN_FILES = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_HIDDEN_FILES 8192
     * }
     */
    public static int VOL_CAP_FMT_HIDDEN_FILES() {
        return VOL_CAP_FMT_HIDDEN_FILES;
    }

    private static final int VOL_CAP_FMT_PATH_FROM_ID = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_PATH_FROM_ID 16384
     * }
     */
    public static int VOL_CAP_FMT_PATH_FROM_ID() {
        return VOL_CAP_FMT_PATH_FROM_ID;
    }

    private static final int VOL_CAP_FMT_NO_VOLUME_SIZES = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_NO_VOLUME_SIZES 32768
     * }
     */
    public static int VOL_CAP_FMT_NO_VOLUME_SIZES() {
        return VOL_CAP_FMT_NO_VOLUME_SIZES;
    }

    private static final int VOL_CAP_FMT_DECMPFS_COMPRESSION = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_DECMPFS_COMPRESSION 65536
     * }
     */
    public static int VOL_CAP_FMT_DECMPFS_COMPRESSION() {
        return VOL_CAP_FMT_DECMPFS_COMPRESSION;
    }

    private static final int VOL_CAP_FMT_64BIT_OBJECT_IDS = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_64BIT_OBJECT_IDS 131072
     * }
     */
    public static int VOL_CAP_FMT_64BIT_OBJECT_IDS() {
        return VOL_CAP_FMT_64BIT_OBJECT_IDS;
    }

    private static final int VOL_CAP_FMT_DIR_HARDLINKS = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_DIR_HARDLINKS 262144
     * }
     */
    public static int VOL_CAP_FMT_DIR_HARDLINKS() {
        return VOL_CAP_FMT_DIR_HARDLINKS;
    }

    private static final int VOL_CAP_FMT_DOCUMENT_ID = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_DOCUMENT_ID 524288
     * }
     */
    public static int VOL_CAP_FMT_DOCUMENT_ID() {
        return VOL_CAP_FMT_DOCUMENT_ID;
    }

    private static final int VOL_CAP_FMT_WRITE_GENERATION_COUNT = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_WRITE_GENERATION_COUNT 1048576
     * }
     */
    public static int VOL_CAP_FMT_WRITE_GENERATION_COUNT() {
        return VOL_CAP_FMT_WRITE_GENERATION_COUNT;
    }

    private static final int VOL_CAP_FMT_NO_IMMUTABLE_FILES = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_NO_IMMUTABLE_FILES 2097152
     * }
     */
    public static int VOL_CAP_FMT_NO_IMMUTABLE_FILES() {
        return VOL_CAP_FMT_NO_IMMUTABLE_FILES;
    }

    private static final int VOL_CAP_FMT_NO_PERMISSIONS = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_NO_PERMISSIONS 4194304
     * }
     */
    public static int VOL_CAP_FMT_NO_PERMISSIONS() {
        return VOL_CAP_FMT_NO_PERMISSIONS;
    }

    private static final int VOL_CAP_FMT_SHARED_SPACE = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_SHARED_SPACE 8388608
     * }
     */
    public static int VOL_CAP_FMT_SHARED_SPACE() {
        return VOL_CAP_FMT_SHARED_SPACE;
    }

    private static final int VOL_CAP_FMT_VOL_GROUPS = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_VOL_GROUPS 16777216
     * }
     */
    public static int VOL_CAP_FMT_VOL_GROUPS() {
        return VOL_CAP_FMT_VOL_GROUPS;
    }

    private static final int VOL_CAP_FMT_SEALED = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_SEALED 33554432
     * }
     */
    public static int VOL_CAP_FMT_SEALED() {
        return VOL_CAP_FMT_SEALED;
    }

    private static final int VOL_CAP_FMT_CLONE_MAPPING = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_FMT_CLONE_MAPPING 67108864
     * }
     */
    public static int VOL_CAP_FMT_CLONE_MAPPING() {
        return VOL_CAP_FMT_CLONE_MAPPING;
    }

    private static final int VOL_CAP_INT_SEARCHFS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_SEARCHFS 1
     * }
     */
    public static int VOL_CAP_INT_SEARCHFS() {
        return VOL_CAP_INT_SEARCHFS;
    }

    private static final int VOL_CAP_INT_ATTRLIST = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_ATTRLIST 2
     * }
     */
    public static int VOL_CAP_INT_ATTRLIST() {
        return VOL_CAP_INT_ATTRLIST;
    }

    private static final int VOL_CAP_INT_NFSEXPORT = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_NFSEXPORT 4
     * }
     */
    public static int VOL_CAP_INT_NFSEXPORT() {
        return VOL_CAP_INT_NFSEXPORT;
    }

    private static final int VOL_CAP_INT_READDIRATTR = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_READDIRATTR 8
     * }
     */
    public static int VOL_CAP_INT_READDIRATTR() {
        return VOL_CAP_INT_READDIRATTR;
    }

    private static final int VOL_CAP_INT_EXCHANGEDATA = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_EXCHANGEDATA 16
     * }
     */
    public static int VOL_CAP_INT_EXCHANGEDATA() {
        return VOL_CAP_INT_EXCHANGEDATA;
    }

    private static final int VOL_CAP_INT_COPYFILE = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_COPYFILE 32
     * }
     */
    public static int VOL_CAP_INT_COPYFILE() {
        return VOL_CAP_INT_COPYFILE;
    }

    private static final int VOL_CAP_INT_ALLOCATE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_ALLOCATE 64
     * }
     */
    public static int VOL_CAP_INT_ALLOCATE() {
        return VOL_CAP_INT_ALLOCATE;
    }

    private static final int VOL_CAP_INT_VOL_RENAME = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_VOL_RENAME 128
     * }
     */
    public static int VOL_CAP_INT_VOL_RENAME() {
        return VOL_CAP_INT_VOL_RENAME;
    }

    private static final int VOL_CAP_INT_ADVLOCK = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_ADVLOCK 256
     * }
     */
    public static int VOL_CAP_INT_ADVLOCK() {
        return VOL_CAP_INT_ADVLOCK;
    }

    private static final int VOL_CAP_INT_FLOCK = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_FLOCK 512
     * }
     */
    public static int VOL_CAP_INT_FLOCK() {
        return VOL_CAP_INT_FLOCK;
    }

    private static final int VOL_CAP_INT_EXTENDED_SECURITY = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_EXTENDED_SECURITY 1024
     * }
     */
    public static int VOL_CAP_INT_EXTENDED_SECURITY() {
        return VOL_CAP_INT_EXTENDED_SECURITY;
    }

    private static final int VOL_CAP_INT_USERACCESS = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_USERACCESS 2048
     * }
     */
    public static int VOL_CAP_INT_USERACCESS() {
        return VOL_CAP_INT_USERACCESS;
    }

    private static final int VOL_CAP_INT_MANLOCK = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_MANLOCK 4096
     * }
     */
    public static int VOL_CAP_INT_MANLOCK() {
        return VOL_CAP_INT_MANLOCK;
    }

    private static final int VOL_CAP_INT_NAMEDSTREAMS = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_NAMEDSTREAMS 8192
     * }
     */
    public static int VOL_CAP_INT_NAMEDSTREAMS() {
        return VOL_CAP_INT_NAMEDSTREAMS;
    }

    private static final int VOL_CAP_INT_EXTENDED_ATTR = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_EXTENDED_ATTR 16384
     * }
     */
    public static int VOL_CAP_INT_EXTENDED_ATTR() {
        return VOL_CAP_INT_EXTENDED_ATTR;
    }

    private static final int VOL_CAP_INT_CLONE = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_CLONE 65536
     * }
     */
    public static int VOL_CAP_INT_CLONE() {
        return VOL_CAP_INT_CLONE;
    }

    private static final int VOL_CAP_INT_SNAPSHOT = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_SNAPSHOT 131072
     * }
     */
    public static int VOL_CAP_INT_SNAPSHOT() {
        return VOL_CAP_INT_SNAPSHOT;
    }

    private static final int VOL_CAP_INT_RENAME_SWAP = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_RENAME_SWAP 262144
     * }
     */
    public static int VOL_CAP_INT_RENAME_SWAP() {
        return VOL_CAP_INT_RENAME_SWAP;
    }

    private static final int VOL_CAP_INT_RENAME_EXCL = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_RENAME_EXCL 524288
     * }
     */
    public static int VOL_CAP_INT_RENAME_EXCL() {
        return VOL_CAP_INT_RENAME_EXCL;
    }

    private static final int VOL_CAP_INT_RENAME_OPENFAIL = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_RENAME_OPENFAIL 1048576
     * }
     */
    public static int VOL_CAP_INT_RENAME_OPENFAIL() {
        return VOL_CAP_INT_RENAME_OPENFAIL;
    }

    private static final int VOL_CAP_INT_RENAME_SECLUDE = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_RENAME_SECLUDE 2097152
     * }
     */
    public static int VOL_CAP_INT_RENAME_SECLUDE() {
        return VOL_CAP_INT_RENAME_SECLUDE;
    }

    private static final int VOL_CAP_INT_ATTRIBUTION_TAG = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define VOL_CAP_INT_ATTRIBUTION_TAG 4194304
     * }
     */
    public static int VOL_CAP_INT_ATTRIBUTION_TAG() {
        return VOL_CAP_INT_ATTRIBUTION_TAG;
    }

    private static final int ATTR_CMN_NAME = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_NAME 1
     * }
     */
    public static int ATTR_CMN_NAME() {
        return ATTR_CMN_NAME;
    }

    private static final int ATTR_CMN_DEVID = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_DEVID 2
     * }
     */
    public static int ATTR_CMN_DEVID() {
        return ATTR_CMN_DEVID;
    }

    private static final int ATTR_CMN_FSID = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_FSID 4
     * }
     */
    public static int ATTR_CMN_FSID() {
        return ATTR_CMN_FSID;
    }

    private static final int ATTR_CMN_OBJTYPE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_OBJTYPE 8
     * }
     */
    public static int ATTR_CMN_OBJTYPE() {
        return ATTR_CMN_OBJTYPE;
    }

    private static final int ATTR_CMN_OBJTAG = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_OBJTAG 16
     * }
     */
    public static int ATTR_CMN_OBJTAG() {
        return ATTR_CMN_OBJTAG;
    }

    private static final int ATTR_CMN_OBJID = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_OBJID 32
     * }
     */
    public static int ATTR_CMN_OBJID() {
        return ATTR_CMN_OBJID;
    }

    private static final int ATTR_CMN_OBJPERMANENTID = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_OBJPERMANENTID 64
     * }
     */
    public static int ATTR_CMN_OBJPERMANENTID() {
        return ATTR_CMN_OBJPERMANENTID;
    }

    private static final int ATTR_CMN_PAROBJID = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_PAROBJID 128
     * }
     */
    public static int ATTR_CMN_PAROBJID() {
        return ATTR_CMN_PAROBJID;
    }

    private static final int ATTR_CMN_SCRIPT = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_SCRIPT 256
     * }
     */
    public static int ATTR_CMN_SCRIPT() {
        return ATTR_CMN_SCRIPT;
    }

    private static final int ATTR_CMN_CRTIME = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_CRTIME 512
     * }
     */
    public static int ATTR_CMN_CRTIME() {
        return ATTR_CMN_CRTIME;
    }

    private static final int ATTR_CMN_MODTIME = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_MODTIME 1024
     * }
     */
    public static int ATTR_CMN_MODTIME() {
        return ATTR_CMN_MODTIME;
    }

    private static final int ATTR_CMN_CHGTIME = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_CHGTIME 2048
     * }
     */
    public static int ATTR_CMN_CHGTIME() {
        return ATTR_CMN_CHGTIME;
    }

    private static final int ATTR_CMN_ACCTIME = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_ACCTIME 4096
     * }
     */
    public static int ATTR_CMN_ACCTIME() {
        return ATTR_CMN_ACCTIME;
    }

    private static final int ATTR_CMN_BKUPTIME = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_BKUPTIME 8192
     * }
     */
    public static int ATTR_CMN_BKUPTIME() {
        return ATTR_CMN_BKUPTIME;
    }

    private static final int ATTR_CMN_FNDRINFO = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_FNDRINFO 16384
     * }
     */
    public static int ATTR_CMN_FNDRINFO() {
        return ATTR_CMN_FNDRINFO;
    }

    private static final int ATTR_CMN_OWNERID = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_OWNERID 32768
     * }
     */
    public static int ATTR_CMN_OWNERID() {
        return ATTR_CMN_OWNERID;
    }

    private static final int ATTR_CMN_GRPID = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_GRPID 65536
     * }
     */
    public static int ATTR_CMN_GRPID() {
        return ATTR_CMN_GRPID;
    }

    private static final int ATTR_CMN_ACCESSMASK = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_ACCESSMASK 131072
     * }
     */
    public static int ATTR_CMN_ACCESSMASK() {
        return ATTR_CMN_ACCESSMASK;
    }

    private static final int ATTR_CMN_FLAGS = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_FLAGS 262144
     * }
     */
    public static int ATTR_CMN_FLAGS() {
        return ATTR_CMN_FLAGS;
    }

    private static final int ATTR_CMN_GEN_COUNT = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_GEN_COUNT 524288
     * }
     */
    public static int ATTR_CMN_GEN_COUNT() {
        return ATTR_CMN_GEN_COUNT;
    }

    private static final int ATTR_CMN_DOCUMENT_ID = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_DOCUMENT_ID 1048576
     * }
     */
    public static int ATTR_CMN_DOCUMENT_ID() {
        return ATTR_CMN_DOCUMENT_ID;
    }

    private static final int ATTR_CMN_USERACCESS = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_USERACCESS 2097152
     * }
     */
    public static int ATTR_CMN_USERACCESS() {
        return ATTR_CMN_USERACCESS;
    }

    private static final int ATTR_CMN_EXTENDED_SECURITY = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_EXTENDED_SECURITY 4194304
     * }
     */
    public static int ATTR_CMN_EXTENDED_SECURITY() {
        return ATTR_CMN_EXTENDED_SECURITY;
    }

    private static final int ATTR_CMN_UUID = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_UUID 8388608
     * }
     */
    public static int ATTR_CMN_UUID() {
        return ATTR_CMN_UUID;
    }

    private static final int ATTR_CMN_GRPUUID = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_GRPUUID 16777216
     * }
     */
    public static int ATTR_CMN_GRPUUID() {
        return ATTR_CMN_GRPUUID;
    }

    private static final int ATTR_CMN_FILEID = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_FILEID 33554432
     * }
     */
    public static int ATTR_CMN_FILEID() {
        return ATTR_CMN_FILEID;
    }

    private static final int ATTR_CMN_PARENTID = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_PARENTID 67108864
     * }
     */
    public static int ATTR_CMN_PARENTID() {
        return ATTR_CMN_PARENTID;
    }

    private static final int ATTR_CMN_FULLPATH = (int) 134217728L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_FULLPATH 134217728
     * }
     */
    public static int ATTR_CMN_FULLPATH() {
        return ATTR_CMN_FULLPATH;
    }

    private static final int ATTR_CMN_ADDEDTIME = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_ADDEDTIME 268435456
     * }
     */
    public static int ATTR_CMN_ADDEDTIME() {
        return ATTR_CMN_ADDEDTIME;
    }

    private static final int ATTR_CMN_ERROR = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_ERROR 536870912
     * }
     */
    public static int ATTR_CMN_ERROR() {
        return ATTR_CMN_ERROR;
    }

    private static final int ATTR_CMN_DATA_PROTECT_FLAGS = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_DATA_PROTECT_FLAGS 1073741824
     * }
     */
    public static int ATTR_CMN_DATA_PROTECT_FLAGS() {
        return ATTR_CMN_DATA_PROTECT_FLAGS;
    }

    private static final int ATTR_CMN_SETMASK = (int) 1372061440L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_SETMASK 1372061440
     * }
     */
    public static int ATTR_CMN_SETMASK() {
        return ATTR_CMN_SETMASK;
    }

    private static final int ATTR_CMN_VOLSETMASK = (int) 26368L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_VOLSETMASK 26368
     * }
     */
    public static int ATTR_CMN_VOLSETMASK() {
        return ATTR_CMN_VOLSETMASK;
    }

    private static final int ATTR_VOL_FSTYPE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_FSTYPE 1
     * }
     */
    public static int ATTR_VOL_FSTYPE() {
        return ATTR_VOL_FSTYPE;
    }

    private static final int ATTR_VOL_SIGNATURE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SIGNATURE 2
     * }
     */
    public static int ATTR_VOL_SIGNATURE() {
        return ATTR_VOL_SIGNATURE;
    }

    private static final int ATTR_VOL_SIZE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SIZE 4
     * }
     */
    public static int ATTR_VOL_SIZE() {
        return ATTR_VOL_SIZE;
    }

    private static final int ATTR_VOL_SPACEFREE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SPACEFREE 8
     * }
     */
    public static int ATTR_VOL_SPACEFREE() {
        return ATTR_VOL_SPACEFREE;
    }

    private static final int ATTR_VOL_SPACEAVAIL = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SPACEAVAIL 16
     * }
     */
    public static int ATTR_VOL_SPACEAVAIL() {
        return ATTR_VOL_SPACEAVAIL;
    }

    private static final int ATTR_VOL_MINALLOCATION = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_MINALLOCATION 32
     * }
     */
    public static int ATTR_VOL_MINALLOCATION() {
        return ATTR_VOL_MINALLOCATION;
    }

    private static final int ATTR_VOL_ALLOCATIONCLUMP = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_ALLOCATIONCLUMP 64
     * }
     */
    public static int ATTR_VOL_ALLOCATIONCLUMP() {
        return ATTR_VOL_ALLOCATIONCLUMP;
    }

    private static final int ATTR_VOL_IOBLOCKSIZE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_IOBLOCKSIZE 128
     * }
     */
    public static int ATTR_VOL_IOBLOCKSIZE() {
        return ATTR_VOL_IOBLOCKSIZE;
    }

    private static final int ATTR_VOL_OBJCOUNT = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_OBJCOUNT 256
     * }
     */
    public static int ATTR_VOL_OBJCOUNT() {
        return ATTR_VOL_OBJCOUNT;
    }

    private static final int ATTR_VOL_FILECOUNT = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_FILECOUNT 512
     * }
     */
    public static int ATTR_VOL_FILECOUNT() {
        return ATTR_VOL_FILECOUNT;
    }

    private static final int ATTR_VOL_DIRCOUNT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_DIRCOUNT 1024
     * }
     */
    public static int ATTR_VOL_DIRCOUNT() {
        return ATTR_VOL_DIRCOUNT;
    }

    private static final int ATTR_VOL_MAXOBJCOUNT = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_MAXOBJCOUNT 2048
     * }
     */
    public static int ATTR_VOL_MAXOBJCOUNT() {
        return ATTR_VOL_MAXOBJCOUNT;
    }

    private static final int ATTR_VOL_MOUNTPOINT = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_MOUNTPOINT 4096
     * }
     */
    public static int ATTR_VOL_MOUNTPOINT() {
        return ATTR_VOL_MOUNTPOINT;
    }

    private static final int ATTR_VOL_NAME = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_NAME 8192
     * }
     */
    public static int ATTR_VOL_NAME() {
        return ATTR_VOL_NAME;
    }

    private static final int ATTR_VOL_MOUNTFLAGS = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_MOUNTFLAGS 16384
     * }
     */
    public static int ATTR_VOL_MOUNTFLAGS() {
        return ATTR_VOL_MOUNTFLAGS;
    }

    private static final int ATTR_VOL_MOUNTEDDEVICE = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_MOUNTEDDEVICE 32768
     * }
     */
    public static int ATTR_VOL_MOUNTEDDEVICE() {
        return ATTR_VOL_MOUNTEDDEVICE;
    }

    private static final int ATTR_VOL_ENCODINGSUSED = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_ENCODINGSUSED 65536
     * }
     */
    public static int ATTR_VOL_ENCODINGSUSED() {
        return ATTR_VOL_ENCODINGSUSED;
    }

    private static final int ATTR_VOL_CAPABILITIES = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_CAPABILITIES 131072
     * }
     */
    public static int ATTR_VOL_CAPABILITIES() {
        return ATTR_VOL_CAPABILITIES;
    }

    private static final int ATTR_VOL_UUID = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_UUID 262144
     * }
     */
    public static int ATTR_VOL_UUID() {
        return ATTR_VOL_UUID;
    }

    private static final int ATTR_VOL_FSTYPENAME = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_FSTYPENAME 1048576
     * }
     */
    public static int ATTR_VOL_FSTYPENAME() {
        return ATTR_VOL_FSTYPENAME;
    }

    private static final int ATTR_VOL_FSSUBTYPE = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_FSSUBTYPE 2097152
     * }
     */
    public static int ATTR_VOL_FSSUBTYPE() {
        return ATTR_VOL_FSSUBTYPE;
    }

    private static final int ATTR_VOL_SPACEUSED = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_SPACEUSED 8388608
     * }
     */
    public static int ATTR_VOL_SPACEUSED() {
        return ATTR_VOL_SPACEUSED;
    }

    private static final int ATTR_VOL_QUOTA_SIZE = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_QUOTA_SIZE 268435456
     * }
     */
    public static int ATTR_VOL_QUOTA_SIZE() {
        return ATTR_VOL_QUOTA_SIZE;
    }

    private static final int ATTR_VOL_RESERVED_SIZE = (int) 536870912L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_RESERVED_SIZE 536870912
     * }
     */
    public static int ATTR_VOL_RESERVED_SIZE() {
        return ATTR_VOL_RESERVED_SIZE;
    }

    private static final int ATTR_VOL_ATTRIBUTES = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define ATTR_VOL_ATTRIBUTES 1073741824
     * }
     */
    public static int ATTR_VOL_ATTRIBUTES() {
        return ATTR_VOL_ATTRIBUTES;
    }

    private static final int ATTR_DIR_LINKCOUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_LINKCOUNT 1
     * }
     */
    public static int ATTR_DIR_LINKCOUNT() {
        return ATTR_DIR_LINKCOUNT;
    }

    private static final int ATTR_DIR_ENTRYCOUNT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_ENTRYCOUNT 2
     * }
     */
    public static int ATTR_DIR_ENTRYCOUNT() {
        return ATTR_DIR_ENTRYCOUNT;
    }

    private static final int ATTR_DIR_MOUNTSTATUS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_MOUNTSTATUS 4
     * }
     */
    public static int ATTR_DIR_MOUNTSTATUS() {
        return ATTR_DIR_MOUNTSTATUS;
    }

    private static final int ATTR_DIR_ALLOCSIZE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_ALLOCSIZE 8
     * }
     */
    public static int ATTR_DIR_ALLOCSIZE() {
        return ATTR_DIR_ALLOCSIZE;
    }

    private static final int ATTR_DIR_IOBLOCKSIZE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_IOBLOCKSIZE 16
     * }
     */
    public static int ATTR_DIR_IOBLOCKSIZE() {
        return ATTR_DIR_IOBLOCKSIZE;
    }

    private static final int ATTR_DIR_DATALENGTH = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_DATALENGTH 32
     * }
     */
    public static int ATTR_DIR_DATALENGTH() {
        return ATTR_DIR_DATALENGTH;
    }

    private static final int DIR_MNTSTATUS_MNTPOINT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define DIR_MNTSTATUS_MNTPOINT 1
     * }
     */
    public static int DIR_MNTSTATUS_MNTPOINT() {
        return DIR_MNTSTATUS_MNTPOINT;
    }

    private static final int DIR_MNTSTATUS_TRIGGER = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define DIR_MNTSTATUS_TRIGGER 2
     * }
     */
    public static int DIR_MNTSTATUS_TRIGGER() {
        return DIR_MNTSTATUS_TRIGGER;
    }

    private static final int ATTR_DIR_VALIDMASK = (int) 63L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_VALIDMASK 63
     * }
     */
    public static int ATTR_DIR_VALIDMASK() {
        return ATTR_DIR_VALIDMASK;
    }

    private static final int ATTR_DIR_SETMASK = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ATTR_DIR_SETMASK 0
     * }
     */
    public static int ATTR_DIR_SETMASK() {
        return ATTR_DIR_SETMASK;
    }

    private static final int ATTR_FILE_LINKCOUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_LINKCOUNT 1
     * }
     */
    public static int ATTR_FILE_LINKCOUNT() {
        return ATTR_FILE_LINKCOUNT;
    }

    private static final int ATTR_FILE_TOTALSIZE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_TOTALSIZE 2
     * }
     */
    public static int ATTR_FILE_TOTALSIZE() {
        return ATTR_FILE_TOTALSIZE;
    }

    private static final int ATTR_FILE_ALLOCSIZE = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_ALLOCSIZE 4
     * }
     */
    public static int ATTR_FILE_ALLOCSIZE() {
        return ATTR_FILE_ALLOCSIZE;
    }

    private static final int ATTR_FILE_IOBLOCKSIZE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_IOBLOCKSIZE 8
     * }
     */
    public static int ATTR_FILE_IOBLOCKSIZE() {
        return ATTR_FILE_IOBLOCKSIZE;
    }

    private static final int ATTR_FILE_DEVTYPE = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_DEVTYPE 32
     * }
     */
    public static int ATTR_FILE_DEVTYPE() {
        return ATTR_FILE_DEVTYPE;
    }

    private static final int ATTR_FILE_FORKCOUNT = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_FORKCOUNT 128
     * }
     */
    public static int ATTR_FILE_FORKCOUNT() {
        return ATTR_FILE_FORKCOUNT;
    }

    private static final int ATTR_FILE_FORKLIST = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_FORKLIST 256
     * }
     */
    public static int ATTR_FILE_FORKLIST() {
        return ATTR_FILE_FORKLIST;
    }

    private static final int ATTR_FILE_DATALENGTH = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_DATALENGTH 512
     * }
     */
    public static int ATTR_FILE_DATALENGTH() {
        return ATTR_FILE_DATALENGTH;
    }

    private static final int ATTR_FILE_DATAALLOCSIZE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_DATAALLOCSIZE 1024
     * }
     */
    public static int ATTR_FILE_DATAALLOCSIZE() {
        return ATTR_FILE_DATAALLOCSIZE;
    }

    private static final int ATTR_FILE_RSRCLENGTH = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_RSRCLENGTH 4096
     * }
     */
    public static int ATTR_FILE_RSRCLENGTH() {
        return ATTR_FILE_RSRCLENGTH;
    }

    private static final int ATTR_FILE_RSRCALLOCSIZE = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_RSRCALLOCSIZE 8192
     * }
     */
    public static int ATTR_FILE_RSRCALLOCSIZE() {
        return ATTR_FILE_RSRCALLOCSIZE;
    }

    private static final int ATTR_FILE_VALIDMASK = (int) 14335L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_VALIDMASK 14335
     * }
     */
    public static int ATTR_FILE_VALIDMASK() {
        return ATTR_FILE_VALIDMASK;
    }

    private static final int ATTR_FILE_SETMASK = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_SETMASK 32
     * }
     */
    public static int ATTR_FILE_SETMASK() {
        return ATTR_FILE_SETMASK;
    }

    private static final int ATTR_CMNEXT_RELPATH = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_RELPATH 4
     * }
     */
    public static int ATTR_CMNEXT_RELPATH() {
        return ATTR_CMNEXT_RELPATH;
    }

    private static final int ATTR_CMNEXT_PRIVATESIZE = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_PRIVATESIZE 8
     * }
     */
    public static int ATTR_CMNEXT_PRIVATESIZE() {
        return ATTR_CMNEXT_PRIVATESIZE;
    }

    private static final int ATTR_CMNEXT_LINKID = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_LINKID 16
     * }
     */
    public static int ATTR_CMNEXT_LINKID() {
        return ATTR_CMNEXT_LINKID;
    }

    private static final int ATTR_CMNEXT_NOFIRMLINKPATH = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_NOFIRMLINKPATH 32
     * }
     */
    public static int ATTR_CMNEXT_NOFIRMLINKPATH() {
        return ATTR_CMNEXT_NOFIRMLINKPATH;
    }

    private static final int ATTR_CMNEXT_REALDEVID = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_REALDEVID 64
     * }
     */
    public static int ATTR_CMNEXT_REALDEVID() {
        return ATTR_CMNEXT_REALDEVID;
    }

    private static final int ATTR_CMNEXT_REALFSID = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_REALFSID 128
     * }
     */
    public static int ATTR_CMNEXT_REALFSID() {
        return ATTR_CMNEXT_REALFSID;
    }

    private static final int ATTR_CMNEXT_CLONEID = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_CLONEID 256
     * }
     */
    public static int ATTR_CMNEXT_CLONEID() {
        return ATTR_CMNEXT_CLONEID;
    }

    private static final int ATTR_CMNEXT_EXT_FLAGS = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_EXT_FLAGS 512
     * }
     */
    public static int ATTR_CMNEXT_EXT_FLAGS() {
        return ATTR_CMNEXT_EXT_FLAGS;
    }

    private static final int ATTR_CMNEXT_RECURSIVE_GENCOUNT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_RECURSIVE_GENCOUNT 1024
     * }
     */
    public static int ATTR_CMNEXT_RECURSIVE_GENCOUNT() {
        return ATTR_CMNEXT_RECURSIVE_GENCOUNT;
    }

    private static final int ATTR_CMNEXT_ATTRIBUTION_TAG = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_ATTRIBUTION_TAG 2048
     * }
     */
    public static int ATTR_CMNEXT_ATTRIBUTION_TAG() {
        return ATTR_CMNEXT_ATTRIBUTION_TAG;
    }

    private static final int ATTR_CMNEXT_CLONE_REFCNT = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_CLONE_REFCNT 4096
     * }
     */
    public static int ATTR_CMNEXT_CLONE_REFCNT() {
        return ATTR_CMNEXT_CLONE_REFCNT;
    }

    private static final int ATTR_CMNEXT_VALIDMASK = (int) 8188L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_VALIDMASK 8188
     * }
     */
    public static int ATTR_CMNEXT_VALIDMASK() {
        return ATTR_CMNEXT_VALIDMASK;
    }

    private static final int ATTR_CMNEXT_SETMASK = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMNEXT_SETMASK 0
     * }
     */
    public static int ATTR_CMNEXT_SETMASK() {
        return ATTR_CMNEXT_SETMASK;
    }

    private static final int ATTR_FORK_TOTALSIZE = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FORK_TOTALSIZE 1
     * }
     */
    public static int ATTR_FORK_TOTALSIZE() {
        return ATTR_FORK_TOTALSIZE;
    }

    private static final int ATTR_FORK_ALLOCSIZE = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FORK_ALLOCSIZE 2
     * }
     */
    public static int ATTR_FORK_ALLOCSIZE() {
        return ATTR_FORK_ALLOCSIZE;
    }

    private static final int ATTR_FORK_VALIDMASK = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FORK_VALIDMASK 3
     * }
     */
    public static int ATTR_FORK_VALIDMASK() {
        return ATTR_FORK_VALIDMASK;
    }

    private static final int ATTR_FORK_SETMASK = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FORK_SETMASK 0
     * }
     */
    public static int ATTR_FORK_SETMASK() {
        return ATTR_FORK_SETMASK;
    }

    private static final int ATTR_CMN_NAMEDATTRCOUNT = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_NAMEDATTRCOUNT 524288
     * }
     */
    public static int ATTR_CMN_NAMEDATTRCOUNT() {
        return ATTR_CMN_NAMEDATTRCOUNT;
    }

    private static final int ATTR_CMN_NAMEDATTRLIST = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define ATTR_CMN_NAMEDATTRLIST 1048576
     * }
     */
    public static int ATTR_CMN_NAMEDATTRLIST() {
        return ATTR_CMN_NAMEDATTRLIST;
    }

    private static final int ATTR_FILE_CLUMPSIZE = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_CLUMPSIZE 16
     * }
     */
    public static int ATTR_FILE_CLUMPSIZE() {
        return ATTR_FILE_CLUMPSIZE;
    }

    private static final int ATTR_FILE_FILETYPE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_FILETYPE 64
     * }
     */
    public static int ATTR_FILE_FILETYPE() {
        return ATTR_FILE_FILETYPE;
    }

    private static final int ATTR_FILE_DATAEXTENTS = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_DATAEXTENTS 2048
     * }
     */
    public static int ATTR_FILE_DATAEXTENTS() {
        return ATTR_FILE_DATAEXTENTS;
    }

    private static final int ATTR_FILE_RSRCEXTENTS = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define ATTR_FILE_RSRCEXTENTS 16384
     * }
     */
    public static int ATTR_FILE_RSRCEXTENTS() {
        return ATTR_FILE_RSRCEXTENTS;
    }

    private static final int SRCHFS_START = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_START 1
     * }
     */
    public static int SRCHFS_START() {
        return SRCHFS_START;
    }

    private static final int SRCHFS_MATCHPARTIALNAMES = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_MATCHPARTIALNAMES 2
     * }
     */
    public static int SRCHFS_MATCHPARTIALNAMES() {
        return SRCHFS_MATCHPARTIALNAMES;
    }

    private static final int SRCHFS_MATCHDIRS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_MATCHDIRS 4
     * }
     */
    public static int SRCHFS_MATCHDIRS() {
        return SRCHFS_MATCHDIRS;
    }

    private static final int SRCHFS_MATCHFILES = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_MATCHFILES 8
     * }
     */
    public static int SRCHFS_MATCHFILES() {
        return SRCHFS_MATCHFILES;
    }

    private static final int SRCHFS_SKIPLINKS = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_SKIPLINKS 16
     * }
     */
    public static int SRCHFS_SKIPLINKS() {
        return SRCHFS_SKIPLINKS;
    }

    private static final int SRCHFS_SKIPINVISIBLE = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_SKIPINVISIBLE 32
     * }
     */
    public static int SRCHFS_SKIPINVISIBLE() {
        return SRCHFS_SKIPINVISIBLE;
    }

    private static final int SRCHFS_SKIPPACKAGES = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_SKIPPACKAGES 64
     * }
     */
    public static int SRCHFS_SKIPPACKAGES() {
        return SRCHFS_SKIPPACKAGES;
    }

    private static final int SRCHFS_SKIPINAPPROPRIATE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define SRCHFS_SKIPINAPPROPRIATE 128
     * }
     */
    public static int SRCHFS_SKIPINAPPROPRIATE() {
        return SRCHFS_SKIPINAPPROPRIATE;
    }

    private static final int GRAFTDMG_SECURE_BOOT_CRYPTEX_ARGS_VERSION = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define GRAFTDMG_SECURE_BOOT_CRYPTEX_ARGS_VERSION 1
     * }
     */
    public static int GRAFTDMG_SECURE_BOOT_CRYPTEX_ARGS_VERSION() {
        return GRAFTDMG_SECURE_BOOT_CRYPTEX_ARGS_VERSION;
    }

    private static final int MAX_GRAFT_ARGS_SIZE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define MAX_GRAFT_ARGS_SIZE 512
     * }
     */
    public static int MAX_GRAFT_ARGS_SIZE() {
        return MAX_GRAFT_ARGS_SIZE;
    }

    private static final int SBC_PRESERVE_MOUNT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define SBC_PRESERVE_MOUNT 1
     * }
     */
    public static int SBC_PRESERVE_MOUNT() {
        return SBC_PRESERVE_MOUNT;
    }

    private static final int SBC_ALTERNATE_SHARED_REGION = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define SBC_ALTERNATE_SHARED_REGION 2
     * }
     */
    public static int SBC_ALTERNATE_SHARED_REGION() {
        return SBC_ALTERNATE_SHARED_REGION;
    }

    private static final int SBC_SYSTEM_CONTENT = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define SBC_SYSTEM_CONTENT 4
     * }
     */
    public static int SBC_SYSTEM_CONTENT() {
        return SBC_SYSTEM_CONTENT;
    }

    private static final int SBC_PANIC_ON_AUTHFAIL = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define SBC_PANIC_ON_AUTHFAIL 8
     * }
     */
    public static int SBC_PANIC_ON_AUTHFAIL() {
        return SBC_PANIC_ON_AUTHFAIL;
    }

    private static final int SBC_STRICT_AUTH = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define SBC_STRICT_AUTH 16
     * }
     */
    public static int SBC_STRICT_AUTH() {
        return SBC_STRICT_AUTH;
    }

    private static final int SBC_PRESERVE_GRAFT = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define SBC_PRESERVE_GRAFT 32
     * }
     */
    public static int SBC_PRESERVE_GRAFT() {
        return SBC_PRESERVE_GRAFT;
    }

    private static final int MFSNAMELEN = (int) 15L;
    /**
     * {@snippet lang=c :
     * #define MFSNAMELEN 15
     * }
     */
    public static int MFSNAMELEN() {
        return MFSNAMELEN;
    }

    private static final int MFSTYPENAMELEN = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MFSTYPENAMELEN 16
     * }
     */
    public static int MFSTYPENAMELEN() {
        return MFSTYPENAMELEN;
    }

    private static final int MNT_EXT_ROOT_DATA_VOL = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MNT_EXT_ROOT_DATA_VOL 1
     * }
     */
    public static int MNT_EXT_ROOT_DATA_VOL() {
        return MNT_EXT_ROOT_DATA_VOL;
    }

    private static final int MNT_EXT_FSKIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MNT_EXT_FSKIT 2
     * }
     */
    public static int MNT_EXT_FSKIT() {
        return MNT_EXT_FSKIT;
    }

    private static final int MNT_RDONLY = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MNT_RDONLY 1
     * }
     */
    public static int MNT_RDONLY() {
        return MNT_RDONLY;
    }

    private static final int MNT_SYNCHRONOUS = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MNT_SYNCHRONOUS 2
     * }
     */
    public static int MNT_SYNCHRONOUS() {
        return MNT_SYNCHRONOUS;
    }

    private static final int MNT_NOEXEC = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOEXEC 4
     * }
     */
    public static int MNT_NOEXEC() {
        return MNT_NOEXEC;
    }

    private static final int MNT_NOSUID = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOSUID 8
     * }
     */
    public static int MNT_NOSUID() {
        return MNT_NOSUID;
    }

    private static final int MNT_NODEV = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define MNT_NODEV 16
     * }
     */
    public static int MNT_NODEV() {
        return MNT_NODEV;
    }

    private static final int MNT_UNION = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define MNT_UNION 32
     * }
     */
    public static int MNT_UNION() {
        return MNT_UNION;
    }

    private static final int MNT_ASYNC = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define MNT_ASYNC 64
     * }
     */
    public static int MNT_ASYNC() {
        return MNT_ASYNC;
    }

    private static final int MNT_CPROTECT = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define MNT_CPROTECT 128
     * }
     */
    public static int MNT_CPROTECT() {
        return MNT_CPROTECT;
    }

    private static final int MNT_EXPORTED = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define MNT_EXPORTED 256
     * }
     */
    public static int MNT_EXPORTED() {
        return MNT_EXPORTED;
    }

    private static final int MNT_REMOVABLE = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define MNT_REMOVABLE 512
     * }
     */
    public static int MNT_REMOVABLE() {
        return MNT_REMOVABLE;
    }

    private static final int MNT_QUARANTINE = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define MNT_QUARANTINE 1024
     * }
     */
    public static int MNT_QUARANTINE() {
        return MNT_QUARANTINE;
    }

    private static final int MNT_LOCAL = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define MNT_LOCAL 4096
     * }
     */
    public static int MNT_LOCAL() {
        return MNT_LOCAL;
    }

    private static final int MNT_QUOTA = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define MNT_QUOTA 8192
     * }
     */
    public static int MNT_QUOTA() {
        return MNT_QUOTA;
    }

    private static final int MNT_ROOTFS = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define MNT_ROOTFS 16384
     * }
     */
    public static int MNT_ROOTFS() {
        return MNT_ROOTFS;
    }

    private static final int MNT_DOVOLFS = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define MNT_DOVOLFS 32768
     * }
     */
    public static int MNT_DOVOLFS() {
        return MNT_DOVOLFS;
    }

    private static final int MNT_DONTBROWSE = (int) 1048576L;
    /**
     * {@snippet lang=c :
     * #define MNT_DONTBROWSE 1048576
     * }
     */
    public static int MNT_DONTBROWSE() {
        return MNT_DONTBROWSE;
    }

    private static final int MNT_IGNORE_OWNERSHIP = (int) 2097152L;
    /**
     * {@snippet lang=c :
     * #define MNT_IGNORE_OWNERSHIP 2097152
     * }
     */
    public static int MNT_IGNORE_OWNERSHIP() {
        return MNT_IGNORE_OWNERSHIP;
    }

    private static final int MNT_AUTOMOUNTED = (int) 4194304L;
    /**
     * {@snippet lang=c :
     * #define MNT_AUTOMOUNTED 4194304
     * }
     */
    public static int MNT_AUTOMOUNTED() {
        return MNT_AUTOMOUNTED;
    }

    private static final int MNT_JOURNALED = (int) 8388608L;
    /**
     * {@snippet lang=c :
     * #define MNT_JOURNALED 8388608
     * }
     */
    public static int MNT_JOURNALED() {
        return MNT_JOURNALED;
    }

    private static final int MNT_NOUSERXATTR = (int) 16777216L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOUSERXATTR 16777216
     * }
     */
    public static int MNT_NOUSERXATTR() {
        return MNT_NOUSERXATTR;
    }

    private static final int MNT_DEFWRITE = (int) 33554432L;
    /**
     * {@snippet lang=c :
     * #define MNT_DEFWRITE 33554432
     * }
     */
    public static int MNT_DEFWRITE() {
        return MNT_DEFWRITE;
    }

    private static final int MNT_MULTILABEL = (int) 67108864L;
    /**
     * {@snippet lang=c :
     * #define MNT_MULTILABEL 67108864
     * }
     */
    public static int MNT_MULTILABEL() {
        return MNT_MULTILABEL;
    }

    private static final int MNT_NOFOLLOW = (int) 134217728L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOFOLLOW 134217728
     * }
     */
    public static int MNT_NOFOLLOW() {
        return MNT_NOFOLLOW;
    }

    private static final int MNT_NOATIME = (int) 268435456L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOATIME 268435456
     * }
     */
    public static int MNT_NOATIME() {
        return MNT_NOATIME;
    }

    private static final int MNT_SNAPSHOT = (int) 1073741824L;
    /**
     * {@snippet lang=c :
     * #define MNT_SNAPSHOT 1073741824
     * }
     */
    public static int MNT_SNAPSHOT() {
        return MNT_SNAPSHOT;
    }

    private static final int MNT_UPDATE = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define MNT_UPDATE 65536
     * }
     */
    public static int MNT_UPDATE() {
        return MNT_UPDATE;
    }

    private static final int MNT_NOBLOCK = (int) 131072L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOBLOCK 131072
     * }
     */
    public static int MNT_NOBLOCK() {
        return MNT_NOBLOCK;
    }

    private static final int MNT_RELOAD = (int) 262144L;
    /**
     * {@snippet lang=c :
     * #define MNT_RELOAD 262144
     * }
     */
    public static int MNT_RELOAD() {
        return MNT_RELOAD;
    }

    private static final int MNT_FORCE = (int) 524288L;
    /**
     * {@snippet lang=c :
     * #define MNT_FORCE 524288
     * }
     */
    public static int MNT_FORCE() {
        return MNT_FORCE;
    }

    private static final int VFS_GENERIC = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define VFS_GENERIC 0
     * }
     */
    public static int VFS_GENERIC() {
        return VFS_GENERIC;
    }

    private static final int VFS_NUMMNTOPS = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VFS_NUMMNTOPS 1
     * }
     */
    public static int VFS_NUMMNTOPS() {
        return VFS_NUMMNTOPS;
    }

    private static final int VFS_MAXTYPENUM = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VFS_MAXTYPENUM 1
     * }
     */
    public static int VFS_MAXTYPENUM() {
        return VFS_MAXTYPENUM;
    }

    private static final int VFS_CONF = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VFS_CONF 2
     * }
     */
    public static int VFS_CONF() {
        return VFS_CONF;
    }

    private static final int MNT_WAIT = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define MNT_WAIT 1
     * }
     */
    public static int MNT_WAIT() {
        return MNT_WAIT;
    }

    private static final int MNT_NOWAIT = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define MNT_NOWAIT 2
     * }
     */
    public static int MNT_NOWAIT() {
        return MNT_NOWAIT;
    }

    private static final int MNT_DWAIT = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define MNT_DWAIT 4
     * }
     */
    public static int MNT_DWAIT() {
        return MNT_DWAIT;
    }

    private static final int VFS_CTL_VERS1 = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_VERS1 1
     * }
     */
    public static int VFS_CTL_VERS1() {
        return VFS_CTL_VERS1;
    }

    private static final int VFS_CTL_OSTATFS = (int) 65537L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_OSTATFS 65537
     * }
     */
    public static int VFS_CTL_OSTATFS() {
        return VFS_CTL_OSTATFS;
    }

    private static final int VFS_CTL_UMOUNT = (int) 65538L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_UMOUNT 65538
     * }
     */
    public static int VFS_CTL_UMOUNT() {
        return VFS_CTL_UMOUNT;
    }

    private static final int VFS_CTL_QUERY = (int) 65539L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_QUERY 65539
     * }
     */
    public static int VFS_CTL_QUERY() {
        return VFS_CTL_QUERY;
    }

    private static final int VFS_CTL_NEWADDR = (int) 65540L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_NEWADDR 65540
     * }
     */
    public static int VFS_CTL_NEWADDR() {
        return VFS_CTL_NEWADDR;
    }

    private static final int VFS_CTL_TIMEO = (int) 65541L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_TIMEO 65541
     * }
     */
    public static int VFS_CTL_TIMEO() {
        return VFS_CTL_TIMEO;
    }

    private static final int VFS_CTL_NOLOCKS = (int) 65542L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_NOLOCKS 65542
     * }
     */
    public static int VFS_CTL_NOLOCKS() {
        return VFS_CTL_NOLOCKS;
    }

    private static final int VFS_CTL_SADDR = (int) 65543L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_SADDR 65543
     * }
     */
    public static int VFS_CTL_SADDR() {
        return VFS_CTL_SADDR;
    }

    private static final int VFS_CTL_DISC = (int) 65544L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_DISC 65544
     * }
     */
    public static int VFS_CTL_DISC() {
        return VFS_CTL_DISC;
    }

    private static final int VFS_CTL_SERVERINFO = (int) 65545L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_SERVERINFO 65545
     * }
     */
    public static int VFS_CTL_SERVERINFO() {
        return VFS_CTL_SERVERINFO;
    }

    private static final int VFS_CTL_NSTATUS = (int) 65546L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_NSTATUS 65546
     * }
     */
    public static int VFS_CTL_NSTATUS() {
        return VFS_CTL_NSTATUS;
    }

    private static final int VFS_CTL_STATFS64 = (int) 65547L;
    /**
     * {@snippet lang=c :
     * #define VFS_CTL_STATFS64 65547
     * }
     */
    public static int VFS_CTL_STATFS64() {
        return VFS_CTL_STATFS64;
    }

    private static final int VQ_NOTRESP = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define VQ_NOTRESP 1
     * }
     */
    public static int VQ_NOTRESP() {
        return VQ_NOTRESP;
    }

    private static final int VQ_NEEDAUTH = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define VQ_NEEDAUTH 2
     * }
     */
    public static int VQ_NEEDAUTH() {
        return VQ_NEEDAUTH;
    }

    private static final int VQ_LOWDISK = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define VQ_LOWDISK 4
     * }
     */
    public static int VQ_LOWDISK() {
        return VQ_LOWDISK;
    }

    private static final int VQ_MOUNT = (int) 8L;
    /**
     * {@snippet lang=c :
     * #define VQ_MOUNT 8
     * }
     */
    public static int VQ_MOUNT() {
        return VQ_MOUNT;
    }

    private static final int VQ_UNMOUNT = (int) 16L;
    /**
     * {@snippet lang=c :
     * #define VQ_UNMOUNT 16
     * }
     */
    public static int VQ_UNMOUNT() {
        return VQ_UNMOUNT;
    }

    private static final int VQ_DEAD = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define VQ_DEAD 32
     * }
     */
    public static int VQ_DEAD() {
        return VQ_DEAD;
    }

    private static final int VQ_ASSIST = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define VQ_ASSIST 64
     * }
     */
    public static int VQ_ASSIST() {
        return VQ_ASSIST;
    }

    private static final int VQ_NOTRESPLOCK = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define VQ_NOTRESPLOCK 128
     * }
     */
    public static int VQ_NOTRESPLOCK() {
        return VQ_NOTRESPLOCK;
    }

    private static final int VQ_UPDATE = (int) 256L;
    /**
     * {@snippet lang=c :
     * #define VQ_UPDATE 256
     * }
     */
    public static int VQ_UPDATE() {
        return VQ_UPDATE;
    }

    private static final int VQ_VERYLOWDISK = (int) 512L;
    /**
     * {@snippet lang=c :
     * #define VQ_VERYLOWDISK 512
     * }
     */
    public static int VQ_VERYLOWDISK() {
        return VQ_VERYLOWDISK;
    }

    private static final int VQ_SYNCEVENT = (int) 1024L;
    /**
     * {@snippet lang=c :
     * #define VQ_SYNCEVENT 1024
     * }
     */
    public static int VQ_SYNCEVENT() {
        return VQ_SYNCEVENT;
    }

    private static final int VQ_SERVEREVENT = (int) 2048L;
    /**
     * {@snippet lang=c :
     * #define VQ_SERVEREVENT 2048
     * }
     */
    public static int VQ_SERVEREVENT() {
        return VQ_SERVEREVENT;
    }

    private static final int VQ_QUOTA = (int) 4096L;
    /**
     * {@snippet lang=c :
     * #define VQ_QUOTA 4096
     * }
     */
    public static int VQ_QUOTA() {
        return VQ_QUOTA;
    }

    private static final int VQ_NEARLOWDISK = (int) 8192L;
    /**
     * {@snippet lang=c :
     * #define VQ_NEARLOWDISK 8192
     * }
     */
    public static int VQ_NEARLOWDISK() {
        return VQ_NEARLOWDISK;
    }

    private static final int VQ_DESIRED_DISK = (int) 16384L;
    /**
     * {@snippet lang=c :
     * #define VQ_DESIRED_DISK 16384
     * }
     */
    public static int VQ_DESIRED_DISK() {
        return VQ_DESIRED_DISK;
    }

    private static final int VQ_FREE_SPACE_CHANGE = (int) 32768L;
    /**
     * {@snippet lang=c :
     * #define VQ_FREE_SPACE_CHANGE 32768
     * }
     */
    public static int VQ_FREE_SPACE_CHANGE() {
        return VQ_FREE_SPACE_CHANGE;
    }

    private static final int VQ_FLAG10000 = (int) 65536L;
    /**
     * {@snippet lang=c :
     * #define VQ_FLAG10000 65536
     * }
     */
    public static int VQ_FLAG10000() {
        return VQ_FLAG10000;
    }

    private static final int NFSV4_MAX_FH_SIZE = (int) 128L;
    /**
     * {@snippet lang=c :
     * #define NFSV4_MAX_FH_SIZE 128
     * }
     */
    public static int NFSV4_MAX_FH_SIZE() {
        return NFSV4_MAX_FH_SIZE;
    }

    private static final int NFSV3_MAX_FH_SIZE = (int) 64L;
    /**
     * {@snippet lang=c :
     * #define NFSV3_MAX_FH_SIZE 64
     * }
     */
    public static int NFSV3_MAX_FH_SIZE() {
        return NFSV3_MAX_FH_SIZE;
    }

    private static final int NFSV2_MAX_FH_SIZE = (int) 32L;
    /**
     * {@snippet lang=c :
     * #define NFSV2_MAX_FH_SIZE 32
     * }
     */
    public static int NFSV2_MAX_FH_SIZE() {
        return NFSV2_MAX_FH_SIZE;
    }

    private static final int CRYPTEX_AUTH_STRUCT_VERSION = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define CRYPTEX_AUTH_STRUCT_VERSION 1
     * }
     */
    public static int CRYPTEX_AUTH_STRUCT_VERSION() {
        return CRYPTEX_AUTH_STRUCT_VERSION;
    }

    private static final int PRIO_PROCESS = (int) 0L;
    /**
     * {@snippet lang=c :
     * #define PRIO_PROCESS 0
     * }
     */
    public static int PRIO_PROCESS() {
        return PRIO_PROCESS;
    }

    private static final int PRIO_PGRP = (int) 1L;
    /**
     * {@snippet lang=c :
     * #define PRIO_PGRP 1
     * }
     */
    public static int PRIO_PGRP() {
        return PRIO_PGRP;
    }

    private static final int PRIO_USER = (int) 2L;
    /**
     * {@snippet lang=c :
     * #define PRIO_USER 2
     * }
     */
    public static int PRIO_USER() {
        return PRIO_USER;
    }

    private static final int PRIO_DARWIN_THREAD = (int) 3L;
    /**
     * {@snippet lang=c :
     * #define PRIO_DARWIN_THREAD 3
     * }
     */
    public static int PRIO_DARWIN_THREAD() {
        return PRIO_DARWIN_THREAD;
    }

    private static final int PRIO_DARWIN_PROCESS = (int) 4L;
    /**
     * {@snippet lang=c :
     * #define PRIO_DARWIN_PROCESS 4
     * }
     */
    public static int PRIO_DARWIN_PROCESS() {
        return PRIO_DARWIN_PROCESS;
    }

    private static final int PRIO_MAX = (int) 20L;
    /**
     * {@snippet lang=c :
     * #define PRIO_MAX 20
     * }
     */
    public static int PRIO_MAX() {
        return PRIO_MAX;
    }
}
